;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 28.9.2018. 10:28:07
;----------------------------------------------

;Address Opcode 	ASM
____SysVT:
0x0000	0xFFFC2000  	536936444
0x0004	0x2BE10000  	11233
0x0008	0x2BD90000  	11225
0x000C	0x2BD90000  	11225
0x0010	0x2BD90000  	11225
0x0014	0x2BD90000  	11225
0x0018	0x2BD90000  	11225
0x001C	0x2BD90000  	11225
0x0020	0x2BD90000  	11225
0x0024	0x2BD90000  	11225
0x0028	0x2BD90000  	11225
0x002C	0x2BD90000  	11225
0x0030	0x2BD90000  	11225
0x0034	0x2BD90000  	11225
0x0038	0x2BD90000  	11225
0x003C	0x2BD90000  	11225
0x0040	0x2BD90000  	11225
0x0044	0x2BD90000  	11225
0x0048	0x2BD90000  	11225
0x004C	0x2BD90000  	11225
0x0050	0x2BD90000  	11225
0x0054	0x2BD90000  	11225
0x0058	0x2BD90000  	11225
0x005C	0x2BD90000  	11225
0x0060	0x2BD90000  	11225
0x0064	0x2BD90000  	11225
0x0068	0x2BD90000  	11225
0x006C	0x2BD90000  	11225
0x0070	0x2BD90000  	11225
0x0074	0x2BD90000  	11225
0x0078	0x2BD90000  	11225
0x007C	0x2BD90000  	11225
0x0080	0x2BD90000  	11225
0x0084	0x2BD90000  	11225
0x0088	0x2BD90000  	11225
0x008C	0x2BD90000  	11225
0x0090	0x2BD90000  	11225
0x0094	0x2BD90000  	11225
0x0098	0x2BD90000  	11225
0x009C	0x2BD90000  	11225
0x00A0	0x2BD90000  	11225
0x00A4	0x2BD90000  	11225
0x00A8	0x2BD90000  	11225
0x00AC	0x2BD90000  	11225
0x00B0	0x2BD90000  	11225
0x00B4	0x2BD90000  	11225
0x00B8	0x2BD90000  	11225
0x00BC	0x2BD90000  	11225
0x00C0	0x2BD90000  	11225
0x00C4	0x2BD90000  	11225
0x00C8	0x2BD90000  	11225
0x00CC	0x2BD90000  	11225
0x00D0	0x2BD90000  	11225
0x00D4	0x2BD90000  	11225
0x00D8	0x2BD90000  	11225
0x00DC	0x2BD90000  	11225
0x00E0	0x2BD90000  	11225
0x00E4	0x2BD90000  	11225
0x00E8	0x2BD90000  	11225
0x00EC	0x2BD90000  	11225
0x00F0	0x2BD90000  	11225
0x00F4	0x2BD90000  	11225
0x00F8	0x2BD90000  	11225
0x00FC	0x2BD90000  	11225
0x0100	0x2BD90000  	11225
0x0104	0x2BD90000  	11225
0x0108	0x2BD90000  	11225
0x010C	0x2BD90000  	11225
0x0110	0x2BD90000  	11225
0x0114	0x2BD90000  	11225
0x0118	0x2BD90000  	11225
0x011C	0x2BD90000  	11225
0x0120	0x2BD90000  	11225
0x0124	0x2BD90000  	11225
0x0128	0x2BD90000  	11225
0x012C	0x2BD90000  	11225
0x0130	0x2BD90000  	11225
0x0134	0x2BD90000  	11225
0x0138	0x2BD90000  	11225
0x013C	0x2BD90000  	11225
0x0140	0x2BD90000  	11225
0x0144	0x2BD90000  	11225
0x0148	0x2BD90000  	11225
0x014C	0x2BD90000  	11225
; end of ____SysVT
_main:
;Click_Color8_STM.c, 142 :: 		void main()
0x2BE0	0xF000F80E  BL	11264
0x2BE4	0xF000FAA8  BL	12600
0x2BE8	0xF7FFFFEC  BL	11204
0x2BEC	0xF000FA56  BL	12444
;Click_Color8_STM.c, 144 :: 		systemInit();
0x2BF0	0xF7FFFEAA  BL	_systemInit+0
;Click_Color8_STM.c, 145 :: 		applicationInit();
0x2BF4	0xF7FFFED2  BL	_applicationInit+0
;Click_Color8_STM.c, 147 :: 		while (1)
L_main15:
;Click_Color8_STM.c, 149 :: 		applicationTask();
0x2BF8	0xF7FFFEFE  BL	_applicationTask+0
;Click_Color8_STM.c, 150 :: 		}
0x2BFC	0xE7FC    B	L_main15
;Click_Color8_STM.c, 151 :: 		}
L_end_main:
L__main_end_loop:
0x2BFE	0xE7FE    B	L__main_end_loop
; end of _main
___CC2DW:
;__Lib_System_105_107.c, 28 :: 		
0x28F8	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 30 :: 		
L_loopDW:
;__Lib_System_105_107.c, 31 :: 		
0x28FA	0xF81C9B01  LDRB	R9, [R12], #1
;__Lib_System_105_107.c, 32 :: 		
0x28FE	0xF80B9B01  STRB	R9, [R11], #1
;__Lib_System_105_107.c, 33 :: 		
0x2902	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_105_107.c, 34 :: 		
0x2906	0xD1F8    BNE	L_loopDW
;__Lib_System_105_107.c, 36 :: 		
L_end___CC2DW:
0x2908	0xB001    ADD	SP, SP, #4
0x290A	0x4770    BX	LR
; end of ___CC2DW
___FillZeros:
;__Lib_System_105_107.c, 70 :: 		
0x290C	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 72 :: 		
0x290E	0xF04F0900  MOV	R9, #0
;__Lib_System_105_107.c, 73 :: 		
0x2912	0xF04F0C00  MOV	R12, #0
;__Lib_System_105_107.c, 74 :: 		
0x2916	0xEBBD0F0A  CMP	SP, R10, LSL #0
;__Lib_System_105_107.c, 75 :: 		
0x291A	0xDC04    BGT	L_loopFZs
;__Lib_System_105_107.c, 76 :: 		
0x291C	0xEBBD0F0B  CMP	SP, R11, LSL #0
;__Lib_System_105_107.c, 77 :: 		
0x2920	0xDB01    BLT	L_loopFZs
;__Lib_System_105_107.c, 78 :: 		
0x2922	0x46D4    MOV	R12, R10
;__Lib_System_105_107.c, 79 :: 		
0x2924	0x46EA    MOV	R10, SP
;__Lib_System_105_107.c, 80 :: 		
L_loopFZs:
;__Lib_System_105_107.c, 81 :: 		
0x2926	0xF84B9B04  STR	R9, [R11], #4
;__Lib_System_105_107.c, 82 :: 		
0x292A	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_105_107.c, 83 :: 		
0x292E	0xD1FA    BNE	L_loopFZs
;__Lib_System_105_107.c, 84 :: 		
0x2930	0xEBBC0F0A  CMP	R12, R10, LSL #0
;__Lib_System_105_107.c, 85 :: 		
0x2934	0xDD05    BLE	L_norep
;__Lib_System_105_107.c, 86 :: 		
0x2936	0x46E2    MOV	R10, R12
;__Lib_System_105_107.c, 87 :: 		
0x2938	0xF8D9B000  LDR	R11, [R9, #0]
;__Lib_System_105_107.c, 88 :: 		
0x293C	0xF10B0B04  ADD	R11, R11, #4
;__Lib_System_105_107.c, 89 :: 		
0x2940	0xE7F1    B	L_loopFZs
;__Lib_System_105_107.c, 90 :: 		
L_norep:
;__Lib_System_105_107.c, 92 :: 		
L_end___FillZeros:
0x2942	0xB001    ADD	SP, SP, #4
0x2944	0x4770    BX	LR
; end of ___FillZeros
_systemInit:
;Click_Color8_STM.c, 39 :: 		void systemInit()
0x2948	0xB081    SUB	SP, SP, #4
0x294A	0xF8CDE000  STR	LR, [SP, #0]
;Click_Color8_STM.c, 41 :: 		mikrobus_gpioInit( _MIKROBUS1, _MIKROBUS_INT_PIN, _GPIO_INPUT );
0x294E	0x2201    MOVS	R2, #1
0x2950	0x2107    MOVS	R1, #7
0x2952	0x2000    MOVS	R0, #0
0x2954	0xF7FFFC64  BL	_mikrobus_gpioInit+0
;Click_Color8_STM.c, 42 :: 		mikrobus_i2cInit( _MIKROBUS1, &_COLOR8_I2C_CFG[0] );
0x2958	0x480E    LDR	R0, [PC, #56]
0x295A	0x4601    MOV	R1, R0
0x295C	0x2000    MOVS	R0, #0
0x295E	0xF7FFFC81  BL	_mikrobus_i2cInit+0
;Click_Color8_STM.c, 43 :: 		mikrobus_logInit( _LOG_USBUART_A, 115200 );
0x2962	0xF44F31E1  MOV	R1, #115200
0x2966	0x2020    MOVS	R0, #32
0x2968	0xF7FFFEEC  BL	_mikrobus_logInit+0
;Click_Color8_STM.c, 44 :: 		mikrobus_logWrite(" --- System Init --- ", _LOG_LINE);
0x296C	0x480A    LDR	R0, [PC, #40]
0x296E	0x2102    MOVS	R1, #2
0x2970	0xF7FFFEB0  BL	_mikrobus_logWrite+0
;Click_Color8_STM.c, 45 :: 		Delay_ms( 100 );
0x2974	0xF644777F  MOVW	R7, #20351
0x2978	0xF2C00712  MOVT	R7, #18
0x297C	0xBF00    NOP
0x297E	0xBF00    NOP
L_systemInit0:
0x2980	0x1E7F    SUBS	R7, R7, #1
0x2982	0xD1FD    BNE	L_systemInit0
0x2984	0xBF00    NOP
0x2986	0xBF00    NOP
0x2988	0xBF00    NOP
;Click_Color8_STM.c, 46 :: 		}
L_end_systemInit:
0x298A	0xF8DDE000  LDR	LR, [SP, #0]
0x298E	0xB001    ADD	SP, SP, #4
0x2990	0x4770    BX	LR
0x2992	0xBF00    NOP
0x2994	0x22940000  	__COLOR8_I2C_CFG+0
0x2998	0x00002000  	?lstr1_Click_Color8_STM+0
; end of _systemInit
_mikrobus_gpioInit:
;easymx_v7_STM32F107VC.c, 162 :: 		T_mikrobus_ret mikrobus_gpioInit(T_mikrobus_soc bus, T_mikrobus_pin pin, T_gpio_dir direction)
; direction start address is: 8 (R2)
; pin start address is: 4 (R1)
; bus start address is: 0 (R0)
0x2220	0xB081    SUB	SP, SP, #4
0x2222	0xF8CDE000  STR	LR, [SP, #0]
0x2226	0xFA5FF981  UXTB	R9, R1
0x222A	0xFA5FFA82  UXTB	R10, R2
; direction end address is: 8 (R2)
; pin end address is: 4 (R1)
; bus end address is: 0 (R0)
; bus start address is: 0 (R0)
; pin start address is: 36 (R9)
; direction start address is: 40 (R10)
;easymx_v7_STM32F107VC.c, 164 :: 		switch( bus )
0x222E	0xE00F    B	L_mikrobus_gpioInit78
; bus end address is: 0 (R0)
;easymx_v7_STM32F107VC.c, 167 :: 		case _MIKROBUS1 : return _gpioInit_1(pin, direction);
L_mikrobus_gpioInit80:
0x2230	0xFA5FF18A  UXTB	R1, R10
; direction end address is: 40 (R10)
0x2234	0xFA5FF089  UXTB	R0, R9
; pin end address is: 36 (R9)
0x2238	0xF7FFFD9A  BL	easymx_v7_STM32F107VC__gpioInit_1+0
0x223C	0xE00D    B	L_end_mikrobus_gpioInit
;easymx_v7_STM32F107VC.c, 170 :: 		case _MIKROBUS2 : return _gpioInit_2(pin, direction);
L_mikrobus_gpioInit81:
; direction start address is: 40 (R10)
; pin start address is: 36 (R9)
0x223E	0xFA5FF18A  UXTB	R1, R10
; direction end address is: 40 (R10)
0x2242	0xFA5FF089  UXTB	R0, R9
; pin end address is: 36 (R9)
0x2246	0xF7FFFEB7  BL	easymx_v7_STM32F107VC__gpioInit_2+0
0x224A	0xE006    B	L_end_mikrobus_gpioInit
;easymx_v7_STM32F107VC.c, 184 :: 		default : return _MIKROBUS_ERR_BUS;
L_mikrobus_gpioInit82:
0x224C	0x2001    MOVS	R0, #1
0x224E	0xE004    B	L_end_mikrobus_gpioInit
;easymx_v7_STM32F107VC.c, 185 :: 		}
L_mikrobus_gpioInit78:
; direction start address is: 40 (R10)
; pin start address is: 36 (R9)
; bus start address is: 0 (R0)
0x2250	0x2800    CMP	R0, #0
0x2252	0xD0ED    BEQ	L_mikrobus_gpioInit80
0x2254	0x2801    CMP	R0, #1
0x2256	0xD0F2    BEQ	L_mikrobus_gpioInit81
; bus end address is: 0 (R0)
; pin end address is: 36 (R9)
; direction end address is: 40 (R10)
0x2258	0xE7F8    B	L_mikrobus_gpioInit82
;easymx_v7_STM32F107VC.c, 187 :: 		}
L_end_mikrobus_gpioInit:
0x225A	0xF8DDE000  LDR	LR, [SP, #0]
0x225E	0xB001    ADD	SP, SP, #4
0x2260	0x4770    BX	LR
; end of _mikrobus_gpioInit
easymx_v7_STM32F107VC__gpioInit_1:
;__em_f107vc_gpio.c, 81 :: 		static T_mikrobus_ret _gpioInit_1(T_mikrobus_pin pin, T_gpio_dir dir)
; dir start address is: 4 (R1)
; pin start address is: 0 (R0)
0x1D70	0xB081    SUB	SP, SP, #4
0x1D72	0xF8CDE000  STR	LR, [SP, #0]
; dir end address is: 4 (R1)
; pin end address is: 0 (R0)
; pin start address is: 0 (R0)
; dir start address is: 4 (R1)
;__em_f107vc_gpio.c, 83 :: 		switch( pin )
0x1D76	0xE0A9    B	L_easymx_v7_STM32F107VC__gpioInit_10
; pin end address is: 0 (R0)
;__em_f107vc_gpio.c, 85 :: 		case _MIKROBUS_AN_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOA_BASE, _GPIO_PINMASK_4 ); else GPIO_Digital_Output(&GPIOA_BASE, _GPIO_PINMASK_4 ); break;
L_easymx_v7_STM32F107VC__gpioInit_12:
0x1D78	0x2901    CMP	R1, #1
0x1D7A	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_13
; dir end address is: 4 (R1)
0x1D7C	0xF2400110  MOVW	R1, #16
0x1D80	0x4865    LDR	R0, [PC, #404]
0x1D82	0xF7FFFE47  BL	_GPIO_Digital_Input+0
0x1D86	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_14
L_easymx_v7_STM32F107VC__gpioInit_13:
0x1D88	0xF2400110  MOVW	R1, #16
0x1D8C	0x4862    LDR	R0, [PC, #392]
0x1D8E	0xF7FFFDB9  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_14:
0x1D92	0xE0BB    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 86 :: 		case _MIKROBUS_RST_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_2 ); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_2 ); break;
L_easymx_v7_STM32F107VC__gpioInit_15:
; dir start address is: 4 (R1)
0x1D94	0x2901    CMP	R1, #1
0x1D96	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_16
; dir end address is: 4 (R1)
0x1D98	0xF2400104  MOVW	R1, #4
0x1D9C	0x485F    LDR	R0, [PC, #380]
0x1D9E	0xF7FFFE39  BL	_GPIO_Digital_Input+0
0x1DA2	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_17
L_easymx_v7_STM32F107VC__gpioInit_16:
0x1DA4	0xF2400104  MOVW	R1, #4
0x1DA8	0x485C    LDR	R0, [PC, #368]
0x1DAA	0xF7FFFDAB  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_17:
0x1DAE	0xE0AD    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 87 :: 		case _MIKROBUS_CS_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_13); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_13); break;
L_easymx_v7_STM32F107VC__gpioInit_18:
; dir start address is: 4 (R1)
0x1DB0	0x2901    CMP	R1, #1
0x1DB2	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_19
; dir end address is: 4 (R1)
0x1DB4	0xF2420100  MOVW	R1, #8192
0x1DB8	0x4859    LDR	R0, [PC, #356]
0x1DBA	0xF7FFFE2B  BL	_GPIO_Digital_Input+0
0x1DBE	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_110
L_easymx_v7_STM32F107VC__gpioInit_19:
0x1DC0	0xF2420100  MOVW	R1, #8192
0x1DC4	0x4856    LDR	R0, [PC, #344]
0x1DC6	0xF7FFFD9D  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_110:
0x1DCA	0xE09F    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 88 :: 		case _MIKROBUS_SCK_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_10); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_10); break;
L_easymx_v7_STM32F107VC__gpioInit_111:
; dir start address is: 4 (R1)
0x1DCC	0x2901    CMP	R1, #1
0x1DCE	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_112
; dir end address is: 4 (R1)
0x1DD0	0xF2404100  MOVW	R1, #1024
0x1DD4	0x4851    LDR	R0, [PC, #324]
0x1DD6	0xF7FFFE1D  BL	_GPIO_Digital_Input+0
0x1DDA	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_113
L_easymx_v7_STM32F107VC__gpioInit_112:
0x1DDC	0xF2404100  MOVW	R1, #1024
0x1DE0	0x484E    LDR	R0, [PC, #312]
0x1DE2	0xF7FFFD8F  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_113:
0x1DE6	0xE091    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 89 :: 		case _MIKROBUS_MISO_PIN  : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_11); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_11); break;
L_easymx_v7_STM32F107VC__gpioInit_114:
; dir start address is: 4 (R1)
0x1DE8	0x2901    CMP	R1, #1
0x1DEA	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_115
; dir end address is: 4 (R1)
0x1DEC	0xF6400100  MOVW	R1, #2048
0x1DF0	0x484A    LDR	R0, [PC, #296]
0x1DF2	0xF7FFFE0F  BL	_GPIO_Digital_Input+0
0x1DF6	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_116
L_easymx_v7_STM32F107VC__gpioInit_115:
0x1DF8	0xF6400100  MOVW	R1, #2048
0x1DFC	0x4847    LDR	R0, [PC, #284]
0x1DFE	0xF7FFFD81  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_116:
0x1E02	0xE083    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 90 :: 		case _MIKROBUS_MOSI_PIN  : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_12); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_12); break;
L_easymx_v7_STM32F107VC__gpioInit_117:
; dir start address is: 4 (R1)
0x1E04	0x2901    CMP	R1, #1
0x1E06	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_118
; dir end address is: 4 (R1)
0x1E08	0xF2410100  MOVW	R1, #4096
0x1E0C	0x4843    LDR	R0, [PC, #268]
0x1E0E	0xF7FFFE01  BL	_GPIO_Digital_Input+0
0x1E12	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_119
L_easymx_v7_STM32F107VC__gpioInit_118:
0x1E14	0xF2410100  MOVW	R1, #4096
0x1E18	0x4840    LDR	R0, [PC, #256]
0x1E1A	0xF7FFFD73  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_119:
0x1E1E	0xE075    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 91 :: 		case _MIKROBUS_PWM_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOA_BASE, _GPIO_PINMASK_0 ); else GPIO_Digital_Output(&GPIOA_BASE, _GPIO_PINMASK_0 ); break;
L_easymx_v7_STM32F107VC__gpioInit_120:
; dir start address is: 4 (R1)
0x1E20	0x2901    CMP	R1, #1
0x1E22	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_121
; dir end address is: 4 (R1)
0x1E24	0xF2400101  MOVW	R1, #1
0x1E28	0x483B    LDR	R0, [PC, #236]
0x1E2A	0xF7FFFDF3  BL	_GPIO_Digital_Input+0
0x1E2E	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_122
L_easymx_v7_STM32F107VC__gpioInit_121:
0x1E30	0xF2400101  MOVW	R1, #1
0x1E34	0x4838    LDR	R0, [PC, #224]
0x1E36	0xF7FFFD65  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_122:
0x1E3A	0xE067    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 92 :: 		case _MIKROBUS_INT_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_10); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_10); break;
L_easymx_v7_STM32F107VC__gpioInit_123:
; dir start address is: 4 (R1)
0x1E3C	0x2901    CMP	R1, #1
0x1E3E	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_124
; dir end address is: 4 (R1)
0x1E40	0xF2404100  MOVW	R1, #1024
0x1E44	0x4836    LDR	R0, [PC, #216]
0x1E46	0xF7FFFDE5  BL	_GPIO_Digital_Input+0
0x1E4A	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_125
L_easymx_v7_STM32F107VC__gpioInit_124:
0x1E4C	0xF2404100  MOVW	R1, #1024
0x1E50	0x4833    LDR	R0, [PC, #204]
0x1E52	0xF7FFFD57  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_125:
0x1E56	0xE059    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 93 :: 		case _MIKROBUS_RX_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_9 ); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_9 ); break;
L_easymx_v7_STM32F107VC__gpioInit_126:
; dir start address is: 4 (R1)
0x1E58	0x2901    CMP	R1, #1
0x1E5A	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_127
; dir end address is: 4 (R1)
0x1E5C	0xF2402100  MOVW	R1, #512
0x1E60	0x482F    LDR	R0, [PC, #188]
0x1E62	0xF7FFFDD7  BL	_GPIO_Digital_Input+0
0x1E66	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_128
L_easymx_v7_STM32F107VC__gpioInit_127:
0x1E68	0xF2402100  MOVW	R1, #512
0x1E6C	0x482C    LDR	R0, [PC, #176]
0x1E6E	0xF7FFFD49  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_128:
0x1E72	0xE04B    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 94 :: 		case _MIKROBUS_TX_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_8 ); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_8 ); break;
L_easymx_v7_STM32F107VC__gpioInit_129:
; dir start address is: 4 (R1)
0x1E74	0x2901    CMP	R1, #1
0x1E76	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_130
; dir end address is: 4 (R1)
0x1E78	0xF2401100  MOVW	R1, #256
0x1E7C	0x4828    LDR	R0, [PC, #160]
0x1E7E	0xF7FFFDC9  BL	_GPIO_Digital_Input+0
0x1E82	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_131
L_easymx_v7_STM32F107VC__gpioInit_130:
0x1E84	0xF2401100  MOVW	R1, #256
0x1E88	0x4825    LDR	R0, [PC, #148]
0x1E8A	0xF7FFFD3B  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_131:
0x1E8E	0xE03D    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 95 :: 		case _MIKROBUS_SCL_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOB_BASE, _GPIO_PINMASK_6 ); else GPIO_Digital_Output(&GPIOB_BASE, _GPIO_PINMASK_6 ); break;
L_easymx_v7_STM32F107VC__gpioInit_132:
; dir start address is: 4 (R1)
0x1E90	0x2901    CMP	R1, #1
0x1E92	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_133
; dir end address is: 4 (R1)
0x1E94	0xF2400140  MOVW	R1, #64
0x1E98	0x4822    LDR	R0, [PC, #136]
0x1E9A	0xF7FFFDBB  BL	_GPIO_Digital_Input+0
0x1E9E	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_134
L_easymx_v7_STM32F107VC__gpioInit_133:
0x1EA0	0xF2400140  MOVW	R1, #64
0x1EA4	0x481F    LDR	R0, [PC, #124]
0x1EA6	0xF7FFFD2D  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_134:
0x1EAA	0xE02F    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 96 :: 		case _MIKROBUS_SDA_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOB_BASE, _GPIO_PINMASK_7 ); else GPIO_Digital_Output(&GPIOB_BASE, _GPIO_PINMASK_7 ); break;
L_easymx_v7_STM32F107VC__gpioInit_135:
; dir start address is: 4 (R1)
0x1EAC	0x2901    CMP	R1, #1
0x1EAE	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_136
; dir end address is: 4 (R1)
0x1EB0	0xF2400180  MOVW	R1, #128
0x1EB4	0x481B    LDR	R0, [PC, #108]
0x1EB6	0xF7FFFDAD  BL	_GPIO_Digital_Input+0
0x1EBA	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_137
L_easymx_v7_STM32F107VC__gpioInit_136:
0x1EBC	0xF2400180  MOVW	R1, #128
0x1EC0	0x4818    LDR	R0, [PC, #96]
0x1EC2	0xF7FFFD1F  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_137:
0x1EC6	0xE021    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 97 :: 		default                  : return _MIKROBUS_ERR_PIN;
L_easymx_v7_STM32F107VC__gpioInit_138:
0x1EC8	0x2001    MOVS	R0, #1
0x1ECA	0xE020    B	L_end__gpioInit_1
;__em_f107vc_gpio.c, 98 :: 		}
L_easymx_v7_STM32F107VC__gpioInit_10:
; dir start address is: 4 (R1)
; pin start address is: 0 (R0)
0x1ECC	0x2800    CMP	R0, #0
0x1ECE	0xF43FAF53  BEQ	L_easymx_v7_STM32F107VC__gpioInit_12
0x1ED2	0x2801    CMP	R0, #1
0x1ED4	0xF43FAF5E  BEQ	L_easymx_v7_STM32F107VC__gpioInit_15
0x1ED8	0x2802    CMP	R0, #2
0x1EDA	0xF43FAF69  BEQ	L_easymx_v7_STM32F107VC__gpioInit_18
0x1EDE	0x2803    CMP	R0, #3
0x1EE0	0xF43FAF74  BEQ	L_easymx_v7_STM32F107VC__gpioInit_111
0x1EE4	0x2804    CMP	R0, #4
0x1EE6	0xF43FAF7F  BEQ	L_easymx_v7_STM32F107VC__gpioInit_114
0x1EEA	0x2805    CMP	R0, #5
0x1EEC	0xF43FAF8A  BEQ	L_easymx_v7_STM32F107VC__gpioInit_117
0x1EF0	0x2806    CMP	R0, #6
0x1EF2	0xF43FAF95  BEQ	L_easymx_v7_STM32F107VC__gpioInit_120
0x1EF6	0x2807    CMP	R0, #7
0x1EF8	0xD0A0    BEQ	L_easymx_v7_STM32F107VC__gpioInit_123
0x1EFA	0x2808    CMP	R0, #8
0x1EFC	0xD0AC    BEQ	L_easymx_v7_STM32F107VC__gpioInit_126
0x1EFE	0x2809    CMP	R0, #9
0x1F00	0xD0B8    BEQ	L_easymx_v7_STM32F107VC__gpioInit_129
0x1F02	0x280A    CMP	R0, #10
0x1F04	0xD0C4    BEQ	L_easymx_v7_STM32F107VC__gpioInit_132
0x1F06	0x280B    CMP	R0, #11
0x1F08	0xD0D0    BEQ	L_easymx_v7_STM32F107VC__gpioInit_135
; pin end address is: 0 (R0)
; dir end address is: 4 (R1)
0x1F0A	0xE7DD    B	L_easymx_v7_STM32F107VC__gpioInit_138
L_easymx_v7_STM32F107VC__gpioInit_11:
;__em_f107vc_gpio.c, 99 :: 		return _MIKROBUS_OK;
0x1F0C	0x2000    MOVS	R0, __MIKROBUS_OK
;__em_f107vc_gpio.c, 100 :: 		}
L_end__gpioInit_1:
0x1F0E	0xF8DDE000  LDR	LR, [SP, #0]
0x1F12	0xB001    ADD	SP, SP, #4
0x1F14	0x4770    BX	LR
0x1F16	0xBF00    NOP
0x1F18	0x08004001  	GPIOA_BASE+0
0x1F1C	0x10004001  	GPIOC_BASE+0
0x1F20	0x14004001  	GPIOD_BASE+0
0x1F24	0x0C004001  	GPIOB_BASE+0
; end of easymx_v7_STM32F107VC__gpioInit_1
_GPIO_Digital_Input:
;__Lib_GPIO_32F10x.c, 369 :: 		
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x1A14	0xB081    SUB	SP, SP, #4
0x1A16	0xF8CDE000  STR	LR, [SP, #0]
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 370 :: 		
0x1A1A	0xF04F0242  MOV	R2, #66
0x1A1E	0xB289    UXTH	R1, R1
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
0x1A20	0xF7FFFB6A  BL	_GPIO_Config+0
;__Lib_GPIO_32F10x.c, 371 :: 		
L_end_GPIO_Digital_Input:
0x1A24	0xF8DDE000  LDR	LR, [SP, #0]
0x1A28	0xB001    ADD	SP, SP, #4
0x1A2A	0x4770    BX	LR
; end of _GPIO_Digital_Input
_GPIO_Config:
;__Lib_GPIO_32F10x.c, 124 :: 		
; config start address is: 8 (R2)
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x10F8	0xB081    SUB	SP, SP, #4
0x10FA	0xF8CDE000  STR	LR, [SP, #0]
0x10FE	0xB28C    UXTH	R4, R1
0x1100	0x4615    MOV	R5, R2
; config end address is: 8 (R2)
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 16 (R4)
; config start address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 129 :: 		
0x1102	0x4B77    LDR	R3, [PC, #476]
0x1104	0xEA000303  AND	R3, R0, R3, LSL #0
; port end address is: 0 (R0)
; port start address is: 24 (R6)
0x1108	0x461E    MOV	R6, R3
;__Lib_GPIO_32F10x.c, 131 :: 		
0x110A	0x4618    MOV	R0, R3
0x110C	0xF7FFFBF8  BL	_GPIO_Clk_Enable+0
;__Lib_GPIO_32F10x.c, 134 :: 		
0x1110	0xF1B40FFF  CMP	R4, #255
0x1114	0xD10C    BNE	L_GPIO_Config18
;__Lib_GPIO_32F10x.c, 135 :: 		
0x1116	0x4B73    LDR	R3, [PC, #460]
0x1118	0x429D    CMP	R5, R3
0x111A	0xD103    BNE	L_GPIO_Config19
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 136 :: 		
0x111C	0xF04F3333  MOV	R3, #858993459
0x1120	0x6033    STR	R3, [R6, #0]
; port end address is: 24 (R6)
;__Lib_GPIO_32F10x.c, 137 :: 		
0x1122	0xE0D9    B	L_end_GPIO_Config
;__Lib_GPIO_32F10x.c, 138 :: 		
L_GPIO_Config19:
;__Lib_GPIO_32F10x.c, 139 :: 		
; port start address is: 24 (R6)
; config start address is: 20 (R5)
; pin_mask start address is: 16 (R4)
0x1124	0x2D42    CMP	R5, #66
0x1126	0xD103    BNE	L_GPIO_Config20
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 140 :: 		
0x1128	0xF04F3344  MOV	R3, #1145324612
0x112C	0x6033    STR	R3, [R6, #0]
; port end address is: 24 (R6)
;__Lib_GPIO_32F10x.c, 141 :: 		
0x112E	0xE0D3    B	L_end_GPIO_Config
;__Lib_GPIO_32F10x.c, 142 :: 		
L_GPIO_Config20:
;__Lib_GPIO_32F10x.c, 143 :: 		
; port start address is: 24 (R6)
; config start address is: 20 (R5)
; pin_mask start address is: 16 (R4)
L_GPIO_Config18:
;__Lib_GPIO_32F10x.c, 145 :: 		
0x1130	0xF64F73FF  MOVW	R3, #65535
0x1134	0x429C    CMP	R4, R3
0x1136	0xD114    BNE	L_GPIO_Config21
;__Lib_GPIO_32F10x.c, 146 :: 		
0x1138	0x4B6A    LDR	R3, [PC, #424]
0x113A	0x429D    CMP	R5, R3
0x113C	0xD107    BNE	L_GPIO_Config22
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 147 :: 		
0x113E	0xF04F3333  MOV	R3, #858993459
0x1142	0x6033    STR	R3, [R6, #0]
;__Lib_GPIO_32F10x.c, 148 :: 		
0x1144	0x1D34    ADDS	R4, R6, #4
; port end address is: 24 (R6)
0x1146	0xF04F3333  MOV	R3, #858993459
0x114A	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F10x.c, 149 :: 		
0x114C	0xE0C4    B	L_end_GPIO_Config
;__Lib_GPIO_32F10x.c, 150 :: 		
L_GPIO_Config22:
;__Lib_GPIO_32F10x.c, 151 :: 		
; port start address is: 24 (R6)
; config start address is: 20 (R5)
; pin_mask start address is: 16 (R4)
0x114E	0x2D42    CMP	R5, #66
0x1150	0xD107    BNE	L_GPIO_Config23
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 152 :: 		
0x1152	0xF04F3344  MOV	R3, #1145324612
0x1156	0x6033    STR	R3, [R6, #0]
;__Lib_GPIO_32F10x.c, 153 :: 		
0x1158	0x1D34    ADDS	R4, R6, #4
; port end address is: 24 (R6)
0x115A	0xF04F3344  MOV	R3, #1145324612
0x115E	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F10x.c, 154 :: 		
0x1160	0xE0BA    B	L_end_GPIO_Config
;__Lib_GPIO_32F10x.c, 155 :: 		
L_GPIO_Config23:
;__Lib_GPIO_32F10x.c, 156 :: 		
; port start address is: 24 (R6)
; config start address is: 20 (R5)
; pin_mask start address is: 16 (R4)
L_GPIO_Config21:
;__Lib_GPIO_32F10x.c, 158 :: 		
; currentmode start address is: 4 (R1)
0x1162	0x2100    MOVS	R1, #0
;__Lib_GPIO_32F10x.c, 159 :: 		
; speed start address is: 0 (R0)
0x1164	0x2000    MOVS	R0, #0
;__Lib_GPIO_32F10x.c, 161 :: 		
0x1166	0xF0050301  AND	R3, R5, #1
0x116A	0xB10B    CBZ	R3, L_GPIO_Config24
;__Lib_GPIO_32F10x.c, 162 :: 		
0x116C	0x2100    MOVS	R1, #0
0x116E	0xE01D    B	L_GPIO_Config25
L_GPIO_Config24:
;__Lib_GPIO_32F10x.c, 163 :: 		
0x1170	0xF0050302  AND	R3, R5, #2
0x1174	0xB133    CBZ	R3, L_GPIO_Config26
; currentmode end address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 164 :: 		
0x1176	0xF40573C0  AND	R3, R5, #384
0x117A	0xB10B    CBZ	R3, L_GPIO_Config27
;__Lib_GPIO_32F10x.c, 165 :: 		
; currentmode start address is: 4 (R1)
0x117C	0x2108    MOVS	R1, #8
; currentmode end address is: 4 (R1)
0x117E	0xE000    B	L_GPIO_Config28
L_GPIO_Config27:
;__Lib_GPIO_32F10x.c, 167 :: 		
; currentmode start address is: 4 (R1)
0x1180	0x2104    MOVS	R1, #4
; currentmode end address is: 4 (R1)
L_GPIO_Config28:
;__Lib_GPIO_32F10x.c, 168 :: 		
; currentmode start address is: 4 (R1)
0x1182	0xE013    B	L_GPIO_Config29
L_GPIO_Config26:
;__Lib_GPIO_32F10x.c, 169 :: 		
0x1184	0xF0050304  AND	R3, R5, #4
0x1188	0xB133    CBZ	R3, L_GPIO_Config30
; currentmode end address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 170 :: 		
0x118A	0xF0050320  AND	R3, R5, #32
0x118E	0xB10B    CBZ	R3, L_GPIO_Config31
;__Lib_GPIO_32F10x.c, 171 :: 		
; currentmode start address is: 4 (R1)
0x1190	0x2104    MOVS	R1, #4
; currentmode end address is: 4 (R1)
0x1192	0xE000    B	L_GPIO_Config32
L_GPIO_Config31:
;__Lib_GPIO_32F10x.c, 173 :: 		
; currentmode start address is: 4 (R1)
0x1194	0x2100    MOVS	R1, #0
; currentmode end address is: 4 (R1)
L_GPIO_Config32:
;__Lib_GPIO_32F10x.c, 174 :: 		
; currentmode start address is: 4 (R1)
0x1196	0xE009    B	L_GPIO_Config33
L_GPIO_Config30:
;__Lib_GPIO_32F10x.c, 175 :: 		
0x1198	0xF0050308  AND	R3, R5, #8
0x119C	0xB133    CBZ	R3, L__GPIO_Config100
; currentmode end address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 176 :: 		
0x119E	0xF0050320  AND	R3, R5, #32
0x11A2	0xB10B    CBZ	R3, L_GPIO_Config35
;__Lib_GPIO_32F10x.c, 177 :: 		
; currentmode start address is: 4 (R1)
0x11A4	0x210C    MOVS	R1, #12
; currentmode end address is: 4 (R1)
0x11A6	0xE000    B	L_GPIO_Config36
L_GPIO_Config35:
;__Lib_GPIO_32F10x.c, 179 :: 		
; currentmode start address is: 4 (R1)
0x11A8	0x2108    MOVS	R1, #8
; currentmode end address is: 4 (R1)
L_GPIO_Config36:
;__Lib_GPIO_32F10x.c, 180 :: 		
; currentmode start address is: 4 (R1)
; currentmode end address is: 4 (R1)
0x11AA	0xE7FF    B	L_GPIO_Config34
L__GPIO_Config100:
;__Lib_GPIO_32F10x.c, 175 :: 		
;__Lib_GPIO_32F10x.c, 180 :: 		
L_GPIO_Config34:
; currentmode start address is: 4 (R1)
; currentmode end address is: 4 (R1)
L_GPIO_Config33:
; currentmode start address is: 4 (R1)
; currentmode end address is: 4 (R1)
L_GPIO_Config29:
; currentmode start address is: 4 (R1)
; currentmode end address is: 4 (R1)
L_GPIO_Config25:
;__Lib_GPIO_32F10x.c, 182 :: 		
; currentmode start address is: 4 (R1)
0x11AC	0x4B4E    LDR	R3, [PC, #312]
0x11AE	0xEA050303  AND	R3, R5, R3, LSL #0
0x11B2	0xB10B    CBZ	R3, L_GPIO_Config37
;__Lib_GPIO_32F10x.c, 183 :: 		
0x11B4	0x2003    MOVS	R0, #3
0x11B6	0xE009    B	L_GPIO_Config38
L_GPIO_Config37:
;__Lib_GPIO_32F10x.c, 184 :: 		
0x11B8	0xF4057300  AND	R3, R5, #512
0x11BC	0xB10B    CBZ	R3, L_GPIO_Config39
;__Lib_GPIO_32F10x.c, 185 :: 		
0x11BE	0x2002    MOVS	R0, #2
0x11C0	0xE004    B	L_GPIO_Config40
L_GPIO_Config39:
;__Lib_GPIO_32F10x.c, 186 :: 		
0x11C2	0xF4056380  AND	R3, R5, #1024
0x11C6	0xB10B    CBZ	R3, L__GPIO_Config101
;__Lib_GPIO_32F10x.c, 187 :: 		
0x11C8	0x2001    MOVS	R0, #1
; speed end address is: 0 (R0)
0x11CA	0xE7FF    B	L_GPIO_Config41
L__GPIO_Config101:
;__Lib_GPIO_32F10x.c, 186 :: 		
;__Lib_GPIO_32F10x.c, 187 :: 		
L_GPIO_Config41:
; speed start address is: 0 (R0)
; speed end address is: 0 (R0)
L_GPIO_Config40:
; speed start address is: 0 (R0)
; speed end address is: 0 (R0)
L_GPIO_Config38:
;__Lib_GPIO_32F10x.c, 189 :: 		
; speed start address is: 0 (R0)
;__Lib_GPIO_32F10x.c, 195 :: 		
0x11CC	0xF005030C  AND	R3, R5, #12
0x11D0	0xB10B    CBZ	R3, L__GPIO_Config102
;__Lib_GPIO_32F10x.c, 198 :: 		
0x11D2	0x4301    ORRS	R1, R0
; speed end address is: 0 (R0)
; currentmode end address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 199 :: 		
0x11D4	0xE7FF    B	L_GPIO_Config42
L__GPIO_Config102:
;__Lib_GPIO_32F10x.c, 195 :: 		
;__Lib_GPIO_32F10x.c, 199 :: 		
L_GPIO_Config42:
;__Lib_GPIO_32F10x.c, 201 :: 		
; currentmode start address is: 4 (R1)
0x11D6	0xF00403FF  AND	R3, R4, #255
0x11DA	0xB29B    UXTH	R3, R3
0x11DC	0x2B00    CMP	R3, #0
0x11DE	0xD03B    BEQ	L__GPIO_Config104
;__Lib_GPIO_32F10x.c, 202 :: 		
0x11E0	0x6837    LDR	R7, [R6, #0]
; tmpreg start address is: 28 (R7)
;__Lib_GPIO_32F10x.c, 204 :: 		
; pinpos start address is: 0 (R0)
0x11E2	0x2000    MOVS	R0, #0
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
; currentmode end address is: 4 (R1)
; tmpreg end address is: 28 (R7)
; pinpos end address is: 0 (R0)
; port end address is: 24 (R6)
0x11E4	0xFA1FF884  UXTH	R8, R4
0x11E8	0x4632    MOV	R2, R6
0x11EA	0x462E    MOV	R6, R5
L_GPIO_Config44:
; pinpos start address is: 0 (R0)
; tmpreg start address is: 28 (R7)
; currentmode start address is: 4 (R1)
; port start address is: 8 (R2)
; config start address is: 24 (R6)
; pin_mask start address is: 32 (R8)
0x11EC	0x2808    CMP	R0, #8
0x11EE	0xD22C    BCS	L_GPIO_Config45
;__Lib_GPIO_32F10x.c, 206 :: 		
0x11F0	0xF04F0301  MOV	R3, #1
0x11F4	0xFA03F400  LSL	R4, R3, R0
;__Lib_GPIO_32F10x.c, 208 :: 		
0x11F8	0xEA080304  AND	R3, R8, R4, LSL #0
;__Lib_GPIO_32F10x.c, 210 :: 		
0x11FC	0x42A3    CMP	R3, R4
0x11FE	0xD122    BNE	L__GPIO_Config103
;__Lib_GPIO_32F10x.c, 212 :: 		
0x1200	0x0085    LSLS	R5, R0, #2
;__Lib_GPIO_32F10x.c, 214 :: 		
0x1202	0xF04F030F  MOV	R3, #15
0x1206	0x40AB    LSLS	R3, R5
;__Lib_GPIO_32F10x.c, 215 :: 		
0x1208	0x43DB    MVN	R3, R3
0x120A	0xEA070403  AND	R4, R7, R3, LSL #0
; tmpreg end address is: 28 (R7)
;__Lib_GPIO_32F10x.c, 218 :: 		
0x120E	0xFA01F305  LSL	R3, R1, R5
0x1212	0xEA440303  ORR	R3, R4, R3, LSL #0
; tmpreg start address is: 20 (R5)
0x1216	0x461D    MOV	R5, R3
;__Lib_GPIO_32F10x.c, 221 :: 		
0x1218	0xF4067381  AND	R3, R6, #258
0x121C	0xF5B37F81  CMP	R3, #258
0x1220	0xD105    BNE	L_GPIO_Config48
;__Lib_GPIO_32F10x.c, 223 :: 		
0x1222	0xF2020414  ADDW	R4, R2, #20
0x1226	0xF04F0301  MOV	R3, #1
0x122A	0x4083    LSLS	R3, R0
0x122C	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F10x.c, 224 :: 		
L_GPIO_Config48:
;__Lib_GPIO_32F10x.c, 226 :: 		
0x122E	0xF0060382  AND	R3, R6, #130
0x1232	0x2B82    CMP	R3, #130
0x1234	0xD105    BNE	L_GPIO_Config49
;__Lib_GPIO_32F10x.c, 228 :: 		
0x1236	0xF2020410  ADDW	R4, R2, #16
0x123A	0xF04F0301  MOV	R3, #1
0x123E	0x4083    LSLS	R3, R0
0x1240	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F10x.c, 229 :: 		
L_GPIO_Config49:
;__Lib_GPIO_32F10x.c, 230 :: 		
0x1242	0x462F    MOV	R7, R5
0x1244	0xE7FF    B	L_GPIO_Config47
; tmpreg end address is: 20 (R5)
L__GPIO_Config103:
;__Lib_GPIO_32F10x.c, 210 :: 		
;__Lib_GPIO_32F10x.c, 230 :: 		
L_GPIO_Config47:
;__Lib_GPIO_32F10x.c, 204 :: 		
; tmpreg start address is: 28 (R7)
0x1246	0x1C40    ADDS	R0, R0, #1
;__Lib_GPIO_32F10x.c, 231 :: 		
; pinpos end address is: 0 (R0)
0x1248	0xE7D0    B	L_GPIO_Config44
L_GPIO_Config45:
;__Lib_GPIO_32F10x.c, 232 :: 		
0x124A	0x6017    STR	R7, [R2, #0]
; currentmode end address is: 4 (R1)
; port end address is: 8 (R2)
; config end address is: 24 (R6)
; pin_mask end address is: 32 (R8)
; tmpreg end address is: 28 (R7)
0x124C	0xFA1FF088  UXTH	R0, R8
0x1250	0x460F    MOV	R7, R1
0x1252	0x4631    MOV	R1, R6
0x1254	0x4616    MOV	R6, R2
;__Lib_GPIO_32F10x.c, 234 :: 		
0x1256	0xE002    B	L_GPIO_Config43
L__GPIO_Config104:
;__Lib_GPIO_32F10x.c, 201 :: 		
0x1258	0x460F    MOV	R7, R1
0x125A	0x4629    MOV	R1, R5
0x125C	0xB2A0    UXTH	R0, R4
;__Lib_GPIO_32F10x.c, 234 :: 		
L_GPIO_Config43:
;__Lib_GPIO_32F10x.c, 238 :: 		
; currentmode start address is: 28 (R7)
; port start address is: 24 (R6)
; config start address is: 4 (R1)
; pin_mask start address is: 0 (R0)
0x125E	0xF1B00FFF  CMP	R0, #255
0x1262	0xD939    BLS	L_GPIO_Config50
;__Lib_GPIO_32F10x.c, 240 :: 		
0x1264	0x1D33    ADDS	R3, R6, #4
0x1266	0xF8D38000  LDR	R8, [R3, #0]
; tmpreg start address is: 32 (R8)
;__Lib_GPIO_32F10x.c, 241 :: 		
; pinpos start address is: 8 (R2)
0x126A	0x2200    MOVS	R2, #0
; port end address is: 24 (R6)
; tmpreg end address is: 32 (R8)
; pinpos end address is: 8 (R2)
L_GPIO_Config51:
; pinpos start address is: 8 (R2)
; tmpreg start address is: 32 (R8)
; pin_mask start address is: 0 (R0)
; pin_mask end address is: 0 (R0)
; config start address is: 4 (R1)
; config end address is: 4 (R1)
; port start address is: 24 (R6)
; currentmode start address is: 28 (R7)
; currentmode end address is: 28 (R7)
0x126C	0x2A08    CMP	R2, #8
0x126E	0xD230    BCS	L_GPIO_Config52
; pin_mask end address is: 0 (R0)
; config end address is: 4 (R1)
; currentmode end address is: 28 (R7)
;__Lib_GPIO_32F10x.c, 243 :: 		
; currentmode start address is: 28 (R7)
; config start address is: 4 (R1)
; pin_mask start address is: 0 (R0)
0x1270	0xF2020408  ADDW	R4, R2, #8
0x1274	0xF04F0301  MOV	R3, #1
0x1278	0xFA03F404  LSL	R4, R3, R4
;__Lib_GPIO_32F10x.c, 245 :: 		
0x127C	0xEA000304  AND	R3, R0, R4, LSL #0
;__Lib_GPIO_32F10x.c, 246 :: 		
0x1280	0x42A3    CMP	R3, R4
0x1282	0xD124    BNE	L__GPIO_Config105
;__Lib_GPIO_32F10x.c, 248 :: 		
0x1284	0x0095    LSLS	R5, R2, #2
;__Lib_GPIO_32F10x.c, 250 :: 		
0x1286	0xF04F030F  MOV	R3, #15
0x128A	0x40AB    LSLS	R3, R5
;__Lib_GPIO_32F10x.c, 251 :: 		
0x128C	0x43DB    MVN	R3, R3
0x128E	0xEA080803  AND	R8, R8, R3, LSL #0
; tmpreg end address is: 32 (R8)
;__Lib_GPIO_32F10x.c, 254 :: 		
0x1292	0xFA07F305  LSL	R3, R7, R5
0x1296	0xEA480803  ORR	R8, R8, R3, LSL #0
; tmpreg start address is: 32 (R8)
;__Lib_GPIO_32F10x.c, 257 :: 		
0x129A	0xF4017381  AND	R3, R1, #258
0x129E	0xF5B37F81  CMP	R3, #258
0x12A2	0xD107    BNE	L_GPIO_Config55
;__Lib_GPIO_32F10x.c, 259 :: 		
0x12A4	0xF2060514  ADDW	R5, R6, #20
0x12A8	0xF2020408  ADDW	R4, R2, #8
0x12AC	0xF04F0301  MOV	R3, #1
0x12B0	0x40A3    LSLS	R3, R4
0x12B2	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F10x.c, 260 :: 		
L_GPIO_Config55:
;__Lib_GPIO_32F10x.c, 262 :: 		
0x12B4	0xF0010382  AND	R3, R1, #130
0x12B8	0x2B82    CMP	R3, #130
0x12BA	0xD107    BNE	L_GPIO_Config56
;__Lib_GPIO_32F10x.c, 264 :: 		
0x12BC	0xF2060510  ADDW	R5, R6, #16
0x12C0	0xF2020408  ADDW	R4, R2, #8
0x12C4	0xF04F0301  MOV	R3, #1
0x12C8	0x40A3    LSLS	R3, R4
0x12CA	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F10x.c, 265 :: 		
L_GPIO_Config56:
;__Lib_GPIO_32F10x.c, 266 :: 		
0x12CC	0xE7FF    B	L_GPIO_Config54
; tmpreg end address is: 32 (R8)
L__GPIO_Config105:
;__Lib_GPIO_32F10x.c, 246 :: 		
;__Lib_GPIO_32F10x.c, 266 :: 		
L_GPIO_Config54:
;__Lib_GPIO_32F10x.c, 241 :: 		
; tmpreg start address is: 32 (R8)
0x12CE	0x1C52    ADDS	R2, R2, #1
;__Lib_GPIO_32F10x.c, 267 :: 		
; pin_mask end address is: 0 (R0)
; config end address is: 4 (R1)
; currentmode end address is: 28 (R7)
; pinpos end address is: 8 (R2)
0x12D0	0xE7CC    B	L_GPIO_Config51
L_GPIO_Config52:
;__Lib_GPIO_32F10x.c, 268 :: 		
0x12D2	0x1D33    ADDS	R3, R6, #4
; port end address is: 24 (R6)
0x12D4	0xF8C38000  STR	R8, [R3, #0]
; tmpreg end address is: 32 (R8)
;__Lib_GPIO_32F10x.c, 269 :: 		
L_GPIO_Config50:
;__Lib_GPIO_32F10x.c, 270 :: 		
L_end_GPIO_Config:
0x12D8	0xF8DDE000  LDR	LR, [SP, #0]
0x12DC	0xB001    ADD	SP, SP, #4
0x12DE	0x4770    BX	LR
0x12E0	0xFC00FFFF  	#-1024
0x12E4	0x00140008  	#524308
0x12E8	0x08000008  	#526336
; end of _GPIO_Config
_GPIO_Clk_Enable:
;__Lib_GPIO_32F10x.c, 83 :: 		
; gpio_port start address is: 0 (R0)
0x0900	0xB081    SUB	SP, SP, #4
; gpio_port end address is: 0 (R0)
; gpio_port start address is: 0 (R0)
;__Lib_GPIO_32F10x.c, 85 :: 		
0x0902	0x4919    LDR	R1, [PC, #100]
0x0904	0xEA000101  AND	R1, R0, R1, LSL #0
; gpio_port end address is: 0 (R0)
; prt start address is: 0 (R0)
0x0908	0x4608    MOV	R0, R1
;__Lib_GPIO_32F10x.c, 86 :: 		
; pos start address is: 8 (R2)
0x090A	0x2200    MOVS	R2, #0
;__Lib_GPIO_32F10x.c, 87 :: 		
0x090C	0xE00E    B	L_GPIO_Clk_Enable0
; prt end address is: 0 (R0)
; pos end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 88 :: 		
L_GPIO_Clk_Enable2:
; pos start address is: 0 (R0)
0x090E	0x2004    MOVS	R0, #4
; pos end address is: 0 (R0)
0x0910	0xE022    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 89 :: 		
L_GPIO_Clk_Enable3:
; pos start address is: 0 (R0)
0x0912	0x2008    MOVS	R0, #8
; pos end address is: 0 (R0)
0x0914	0xE020    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 90 :: 		
L_GPIO_Clk_Enable4:
; pos start address is: 0 (R0)
0x0916	0x2010    MOVS	R0, #16
; pos end address is: 0 (R0)
0x0918	0xE01E    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 91 :: 		
L_GPIO_Clk_Enable5:
; pos start address is: 0 (R0)
0x091A	0x2020    MOVS	R0, #32
; pos end address is: 0 (R0)
0x091C	0xE01C    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 92 :: 		
L_GPIO_Clk_Enable6:
; pos start address is: 0 (R0)
0x091E	0x2040    MOVS	R0, #64
; pos end address is: 0 (R0)
0x0920	0xE01A    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 93 :: 		
L_GPIO_Clk_Enable7:
; pos start address is: 0 (R0)
0x0922	0x2080    MOVS	R0, #128
; pos end address is: 0 (R0)
0x0924	0xE018    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 94 :: 		
L_GPIO_Clk_Enable8:
; pos start address is: 0 (R0)
0x0926	0xF2401000  MOVW	R0, #256
; pos end address is: 0 (R0)
0x092A	0xE015    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 95 :: 		
L_GPIO_Clk_Enable0:
; pos start address is: 8 (R2)
; prt start address is: 0 (R0)
0x092C	0x490F    LDR	R1, [PC, #60]
0x092E	0x4288    CMP	R0, R1
0x0930	0xD0ED    BEQ	L_GPIO_Clk_Enable2
0x0932	0x490F    LDR	R1, [PC, #60]
0x0934	0x4288    CMP	R0, R1
0x0936	0xD0EC    BEQ	L_GPIO_Clk_Enable3
0x0938	0x490E    LDR	R1, [PC, #56]
0x093A	0x4288    CMP	R0, R1
0x093C	0xD0EB    BEQ	L_GPIO_Clk_Enable4
0x093E	0x490E    LDR	R1, [PC, #56]
0x0940	0x4288    CMP	R0, R1
0x0942	0xD0EA    BEQ	L_GPIO_Clk_Enable5
0x0944	0x490D    LDR	R1, [PC, #52]
0x0946	0x4288    CMP	R0, R1
0x0948	0xD0E9    BEQ	L_GPIO_Clk_Enable6
0x094A	0x490D    LDR	R1, [PC, #52]
0x094C	0x4288    CMP	R0, R1
0x094E	0xD0E8    BEQ	L_GPIO_Clk_Enable7
0x0950	0x490C    LDR	R1, [PC, #48]
0x0952	0x4288    CMP	R0, R1
0x0954	0xD0E7    BEQ	L_GPIO_Clk_Enable8
; prt end address is: 0 (R0)
; pos end address is: 8 (R2)
0x0956	0x4610    MOV	R0, R2
L_GPIO_Clk_Enable1:
;__Lib_GPIO_32F10x.c, 97 :: 		
; pos start address is: 0 (R0)
0x0958	0x490B    LDR	R1, [PC, #44]
0x095A	0x6809    LDR	R1, [R1, #0]
0x095C	0xEA410200  ORR	R2, R1, R0, LSL #0
; pos end address is: 0 (R0)
0x0960	0x4909    LDR	R1, [PC, #36]
0x0962	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32F10x.c, 98 :: 		
L_end_GPIO_Clk_Enable:
0x0964	0xB001    ADD	SP, SP, #4
0x0966	0x4770    BX	LR
0x0968	0xFC00FFFF  	#-1024
0x096C	0x08004001  	#1073809408
0x0970	0x0C004001  	#1073810432
0x0974	0x10004001  	#1073811456
0x0978	0x14004001  	#1073812480
0x097C	0x18004001  	#1073813504
0x0980	0x1C004001  	#1073814528
0x0984	0x20004001  	#1073815552
0x0988	0x10184002  	RCC_APB2ENR+0
; end of _GPIO_Clk_Enable
_GPIO_Digital_Output:
;__Lib_GPIO_32F10x.c, 365 :: 		
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x1904	0xB081    SUB	SP, SP, #4
0x1906	0xF8CDE000  STR	LR, [SP, #0]
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 366 :: 		
0x190A	0x4A04    LDR	R2, [PC, #16]
0x190C	0xB289    UXTH	R1, R1
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
0x190E	0xF7FFFBF3  BL	_GPIO_Config+0
;__Lib_GPIO_32F10x.c, 367 :: 		
L_end_GPIO_Digital_Output:
0x1912	0xF8DDE000  LDR	LR, [SP, #0]
0x1916	0xB001    ADD	SP, SP, #4
0x1918	0x4770    BX	LR
0x191A	0xBF00    NOP
0x191C	0x00140008  	#524308
; end of _GPIO_Digital_Output
easymx_v7_STM32F107VC__gpioInit_2:
;__em_f107vc_gpio.c, 102 :: 		static T_mikrobus_ret _gpioInit_2(T_mikrobus_pin pin, T_gpio_dir dir)
; dir start address is: 4 (R1)
; pin start address is: 0 (R0)
0x1FB8	0xB081    SUB	SP, SP, #4
0x1FBA	0xF8CDE000  STR	LR, [SP, #0]
; dir end address is: 4 (R1)
; pin end address is: 0 (R0)
; pin start address is: 0 (R0)
; dir start address is: 4 (R1)
;__em_f107vc_gpio.c, 104 :: 		switch( pin )
0x1FBE	0xE0A9    B	L_easymx_v7_STM32F107VC__gpioInit_239
; pin end address is: 0 (R0)
;__em_f107vc_gpio.c, 106 :: 		case _MIKROBUS_AN_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOA_BASE, _GPIO_PINMASK_5 ); else GPIO_Digital_Output(&GPIOA_BASE, _GPIO_PINMASK_5 ); break;
L_easymx_v7_STM32F107VC__gpioInit_241:
0x1FC0	0x2901    CMP	R1, #1
0x1FC2	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_242
; dir end address is: 4 (R1)
0x1FC4	0xF2400120  MOVW	R1, #32
0x1FC8	0x4865    LDR	R0, [PC, #404]
0x1FCA	0xF7FFFD23  BL	_GPIO_Digital_Input+0
0x1FCE	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_243
L_easymx_v7_STM32F107VC__gpioInit_242:
0x1FD0	0xF2400120  MOVW	R1, #32
0x1FD4	0x4862    LDR	R0, [PC, #392]
0x1FD6	0xF7FFFC95  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_243:
0x1FDA	0xE0BB    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 107 :: 		case _MIKROBUS_RST_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_3 ); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_3 ); break;
L_easymx_v7_STM32F107VC__gpioInit_244:
; dir start address is: 4 (R1)
0x1FDC	0x2901    CMP	R1, #1
0x1FDE	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_245
; dir end address is: 4 (R1)
0x1FE0	0xF2400108  MOVW	R1, #8
0x1FE4	0x485F    LDR	R0, [PC, #380]
0x1FE6	0xF7FFFD15  BL	_GPIO_Digital_Input+0
0x1FEA	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_246
L_easymx_v7_STM32F107VC__gpioInit_245:
0x1FEC	0xF2400108  MOVW	R1, #8
0x1FF0	0x485C    LDR	R0, [PC, #368]
0x1FF2	0xF7FFFC87  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_246:
0x1FF6	0xE0AD    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 108 :: 		case _MIKROBUS_CS_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_14); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_14); break;
L_easymx_v7_STM32F107VC__gpioInit_247:
; dir start address is: 4 (R1)
0x1FF8	0x2901    CMP	R1, #1
0x1FFA	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_248
; dir end address is: 4 (R1)
0x1FFC	0xF2440100  MOVW	R1, #16384
0x2000	0x4859    LDR	R0, [PC, #356]
0x2002	0xF7FFFD07  BL	_GPIO_Digital_Input+0
0x2006	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_249
L_easymx_v7_STM32F107VC__gpioInit_248:
0x2008	0xF2440100  MOVW	R1, #16384
0x200C	0x4856    LDR	R0, [PC, #344]
0x200E	0xF7FFFC79  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_249:
0x2012	0xE09F    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 109 :: 		case _MIKROBUS_SCK_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_10); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_10); break;
L_easymx_v7_STM32F107VC__gpioInit_250:
; dir start address is: 4 (R1)
0x2014	0x2901    CMP	R1, #1
0x2016	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_251
; dir end address is: 4 (R1)
0x2018	0xF2404100  MOVW	R1, #1024
0x201C	0x4851    LDR	R0, [PC, #324]
0x201E	0xF7FFFCF9  BL	_GPIO_Digital_Input+0
0x2022	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_252
L_easymx_v7_STM32F107VC__gpioInit_251:
0x2024	0xF2404100  MOVW	R1, #1024
0x2028	0x484E    LDR	R0, [PC, #312]
0x202A	0xF7FFFC6B  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_252:
0x202E	0xE091    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 110 :: 		case _MIKROBUS_MISO_PIN  : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_11); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_11); break;
L_easymx_v7_STM32F107VC__gpioInit_253:
; dir start address is: 4 (R1)
0x2030	0x2901    CMP	R1, #1
0x2032	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_254
; dir end address is: 4 (R1)
0x2034	0xF6400100  MOVW	R1, #2048
0x2038	0x484A    LDR	R0, [PC, #296]
0x203A	0xF7FFFCEB  BL	_GPIO_Digital_Input+0
0x203E	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_255
L_easymx_v7_STM32F107VC__gpioInit_254:
0x2040	0xF6400100  MOVW	R1, #2048
0x2044	0x4847    LDR	R0, [PC, #284]
0x2046	0xF7FFFC5D  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_255:
0x204A	0xE083    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 111 :: 		case _MIKROBUS_MOSI_PIN  : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_12); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_12); break;
L_easymx_v7_STM32F107VC__gpioInit_256:
; dir start address is: 4 (R1)
0x204C	0x2901    CMP	R1, #1
0x204E	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_257
; dir end address is: 4 (R1)
0x2050	0xF2410100  MOVW	R1, #4096
0x2054	0x4843    LDR	R0, [PC, #268]
0x2056	0xF7FFFCDD  BL	_GPIO_Digital_Input+0
0x205A	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_258
L_easymx_v7_STM32F107VC__gpioInit_257:
0x205C	0xF2410100  MOVW	R1, #4096
0x2060	0x4840    LDR	R0, [PC, #256]
0x2062	0xF7FFFC4F  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_258:
0x2066	0xE075    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 112 :: 		case _MIKROBUS_PWM_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_12); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_12); break;
L_easymx_v7_STM32F107VC__gpioInit_259:
; dir start address is: 4 (R1)
0x2068	0x2901    CMP	R1, #1
0x206A	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_260
; dir end address is: 4 (R1)
0x206C	0xF2410100  MOVW	R1, #4096
0x2070	0x483D    LDR	R0, [PC, #244]
0x2072	0xF7FFFCCF  BL	_GPIO_Digital_Input+0
0x2076	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_261
L_easymx_v7_STM32F107VC__gpioInit_260:
0x2078	0xF2410100  MOVW	R1, #4096
0x207C	0x483A    LDR	R0, [PC, #232]
0x207E	0xF7FFFC41  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_261:
0x2082	0xE067    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 113 :: 		case _MIKROBUS_INT_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_11); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_11); break;
L_easymx_v7_STM32F107VC__gpioInit_262:
; dir start address is: 4 (R1)
0x2084	0x2901    CMP	R1, #1
0x2086	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_263
; dir end address is: 4 (R1)
0x2088	0xF6400100  MOVW	R1, #2048
0x208C	0x4836    LDR	R0, [PC, #216]
0x208E	0xF7FFFCC1  BL	_GPIO_Digital_Input+0
0x2092	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_264
L_easymx_v7_STM32F107VC__gpioInit_263:
0x2094	0xF6400100  MOVW	R1, #2048
0x2098	0x4833    LDR	R0, [PC, #204]
0x209A	0xF7FFFC33  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_264:
0x209E	0xE059    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 114 :: 		case _MIKROBUS_RX_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_6 ); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_6 ); break;
L_easymx_v7_STM32F107VC__gpioInit_265:
; dir start address is: 4 (R1)
0x20A0	0x2901    CMP	R1, #1
0x20A2	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_266
; dir end address is: 4 (R1)
0x20A4	0xF2400140  MOVW	R1, #64
0x20A8	0x482F    LDR	R0, [PC, #188]
0x20AA	0xF7FFFCB3  BL	_GPIO_Digital_Input+0
0x20AE	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_267
L_easymx_v7_STM32F107VC__gpioInit_266:
0x20B0	0xF2400140  MOVW	R1, #64
0x20B4	0x482C    LDR	R0, [PC, #176]
0x20B6	0xF7FFFC25  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_267:
0x20BA	0xE04B    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 115 :: 		case _MIKROBUS_TX_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_5 ); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_5 ); break;
L_easymx_v7_STM32F107VC__gpioInit_268:
; dir start address is: 4 (R1)
0x20BC	0x2901    CMP	R1, #1
0x20BE	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_269
; dir end address is: 4 (R1)
0x20C0	0xF2400120  MOVW	R1, #32
0x20C4	0x4828    LDR	R0, [PC, #160]
0x20C6	0xF7FFFCA5  BL	_GPIO_Digital_Input+0
0x20CA	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_270
L_easymx_v7_STM32F107VC__gpioInit_269:
0x20CC	0xF2400120  MOVW	R1, #32
0x20D0	0x4825    LDR	R0, [PC, #148]
0x20D2	0xF7FFFC17  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_270:
0x20D6	0xE03D    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 116 :: 		case _MIKROBUS_SCL_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOB_BASE, _GPIO_PINMASK_6 ); else GPIO_Digital_Output(&GPIOB_BASE, _GPIO_PINMASK_6 ); break;
L_easymx_v7_STM32F107VC__gpioInit_271:
; dir start address is: 4 (R1)
0x20D8	0x2901    CMP	R1, #1
0x20DA	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_272
; dir end address is: 4 (R1)
0x20DC	0xF2400140  MOVW	R1, #64
0x20E0	0x4822    LDR	R0, [PC, #136]
0x20E2	0xF7FFFC97  BL	_GPIO_Digital_Input+0
0x20E6	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_273
L_easymx_v7_STM32F107VC__gpioInit_272:
0x20E8	0xF2400140  MOVW	R1, #64
0x20EC	0x481F    LDR	R0, [PC, #124]
0x20EE	0xF7FFFC09  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_273:
0x20F2	0xE02F    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 117 :: 		case _MIKROBUS_SDA_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOB_BASE, _GPIO_PINMASK_7 ); else GPIO_Digital_Output(&GPIOB_BASE, _GPIO_PINMASK_7 ); break;
L_easymx_v7_STM32F107VC__gpioInit_274:
; dir start address is: 4 (R1)
0x20F4	0x2901    CMP	R1, #1
0x20F6	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_275
; dir end address is: 4 (R1)
0x20F8	0xF2400180  MOVW	R1, #128
0x20FC	0x481B    LDR	R0, [PC, #108]
0x20FE	0xF7FFFC89  BL	_GPIO_Digital_Input+0
0x2102	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_276
L_easymx_v7_STM32F107VC__gpioInit_275:
0x2104	0xF2400180  MOVW	R1, #128
0x2108	0x4818    LDR	R0, [PC, #96]
0x210A	0xF7FFFBFB  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_276:
0x210E	0xE021    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 118 :: 		default                  : return _MIKROBUS_ERR_PIN;
L_easymx_v7_STM32F107VC__gpioInit_277:
0x2110	0x2001    MOVS	R0, #1
0x2112	0xE020    B	L_end__gpioInit_2
;__em_f107vc_gpio.c, 119 :: 		}
L_easymx_v7_STM32F107VC__gpioInit_239:
; dir start address is: 4 (R1)
; pin start address is: 0 (R0)
0x2114	0x2800    CMP	R0, #0
0x2116	0xF43FAF53  BEQ	L_easymx_v7_STM32F107VC__gpioInit_241
0x211A	0x2801    CMP	R0, #1
0x211C	0xF43FAF5E  BEQ	L_easymx_v7_STM32F107VC__gpioInit_244
0x2120	0x2802    CMP	R0, #2
0x2122	0xF43FAF69  BEQ	L_easymx_v7_STM32F107VC__gpioInit_247
0x2126	0x2803    CMP	R0, #3
0x2128	0xF43FAF74  BEQ	L_easymx_v7_STM32F107VC__gpioInit_250
0x212C	0x2804    CMP	R0, #4
0x212E	0xF43FAF7F  BEQ	L_easymx_v7_STM32F107VC__gpioInit_253
0x2132	0x2805    CMP	R0, #5
0x2134	0xF43FAF8A  BEQ	L_easymx_v7_STM32F107VC__gpioInit_256
0x2138	0x2806    CMP	R0, #6
0x213A	0xF43FAF95  BEQ	L_easymx_v7_STM32F107VC__gpioInit_259
0x213E	0x2807    CMP	R0, #7
0x2140	0xD0A0    BEQ	L_easymx_v7_STM32F107VC__gpioInit_262
0x2142	0x2808    CMP	R0, #8
0x2144	0xD0AC    BEQ	L_easymx_v7_STM32F107VC__gpioInit_265
0x2146	0x2809    CMP	R0, #9
0x2148	0xD0B8    BEQ	L_easymx_v7_STM32F107VC__gpioInit_268
0x214A	0x280A    CMP	R0, #10
0x214C	0xD0C4    BEQ	L_easymx_v7_STM32F107VC__gpioInit_271
0x214E	0x280B    CMP	R0, #11
0x2150	0xD0D0    BEQ	L_easymx_v7_STM32F107VC__gpioInit_274
; pin end address is: 0 (R0)
; dir end address is: 4 (R1)
0x2152	0xE7DD    B	L_easymx_v7_STM32F107VC__gpioInit_277
L_easymx_v7_STM32F107VC__gpioInit_240:
;__em_f107vc_gpio.c, 120 :: 		return _MIKROBUS_OK;
0x2154	0x2000    MOVS	R0, __MIKROBUS_OK
;__em_f107vc_gpio.c, 121 :: 		}
L_end__gpioInit_2:
0x2156	0xF8DDE000  LDR	LR, [SP, #0]
0x215A	0xB001    ADD	SP, SP, #4
0x215C	0x4770    BX	LR
0x215E	0xBF00    NOP
0x2160	0x08004001  	GPIOA_BASE+0
0x2164	0x10004001  	GPIOC_BASE+0
0x2168	0x14004001  	GPIOD_BASE+0
0x216C	0x0C004001  	GPIOB_BASE+0
; end of easymx_v7_STM32F107VC__gpioInit_2
_mikrobus_i2cInit:
;easymx_v7_STM32F107VC.c, 222 :: 		T_mikrobus_ret mikrobus_i2cInit(T_mikrobus_soc bus, const uint32_t *cfg)
; cfg start address is: 4 (R1)
; bus start address is: 0 (R0)
0x2264	0xB081    SUB	SP, SP, #4
0x2266	0xF8CDE000  STR	LR, [SP, #0]
0x226A	0x468B    MOV	R11, R1
; cfg end address is: 4 (R1)
; bus end address is: 0 (R0)
; bus start address is: 0 (R0)
; cfg start address is: 44 (R11)
;easymx_v7_STM32F107VC.c, 224 :: 		switch( bus )
0x226C	0xE009    B	L_mikrobus_i2cInit83
; bus end address is: 0 (R0)
;easymx_v7_STM32F107VC.c, 227 :: 		case _MIKROBUS1 : return _i2cInit_1( cfg );
L_mikrobus_i2cInit85:
0x226E	0x4658    MOV	R0, R11
; cfg end address is: 44 (R11)
0x2270	0xF7FFFE92  BL	easymx_v7_STM32F107VC__i2cInit_1+0
0x2274	0xE00A    B	L_end_mikrobus_i2cInit
;easymx_v7_STM32F107VC.c, 230 :: 		case _MIKROBUS2 : return _i2cInit_2( cfg );
L_mikrobus_i2cInit86:
; cfg start address is: 44 (R11)
0x2276	0x4658    MOV	R0, R11
; cfg end address is: 44 (R11)
0x2278	0xF7FFFF7A  BL	easymx_v7_STM32F107VC__i2cInit_2+0
0x227C	0xE006    B	L_end_mikrobus_i2cInit
;easymx_v7_STM32F107VC.c, 244 :: 		default : return _MIKROBUS_ERR_BUS;
L_mikrobus_i2cInit87:
0x227E	0x2001    MOVS	R0, #1
0x2280	0xE004    B	L_end_mikrobus_i2cInit
;easymx_v7_STM32F107VC.c, 245 :: 		}
L_mikrobus_i2cInit83:
; cfg start address is: 44 (R11)
; bus start address is: 0 (R0)
0x2282	0x2800    CMP	R0, #0
0x2284	0xD0F3    BEQ	L_mikrobus_i2cInit85
0x2286	0x2801    CMP	R0, #1
0x2288	0xD0F5    BEQ	L_mikrobus_i2cInit86
; bus end address is: 0 (R0)
; cfg end address is: 44 (R11)
0x228A	0xE7F8    B	L_mikrobus_i2cInit87
;easymx_v7_STM32F107VC.c, 248 :: 		}
L_end_mikrobus_i2cInit:
0x228C	0xF8DDE000  LDR	LR, [SP, #0]
0x2290	0xB001    ADD	SP, SP, #4
0x2292	0x4770    BX	LR
; end of _mikrobus_i2cInit
easymx_v7_STM32F107VC__i2cInit_1:
;__em_f107vc_i2c.c, 29 :: 		static T_mikrobus_ret _i2cInit_1(const uint32_t* cfg)
; cfg start address is: 0 (R0)
0x1F98	0xB081    SUB	SP, SP, #4
0x1F9A	0xF8CDE000  STR	LR, [SP, #0]
; cfg end address is: 0 (R0)
; cfg start address is: 0 (R0)
;__em_f107vc_i2c.c, 31 :: 		I2C1_Init_Advanced( cfg[0], &_GPIO_MODULE_I2C1_PB67);
0x1F9E	0x6801    LDR	R1, [R0, #0]
; cfg end address is: 0 (R0)
0x1FA0	0x4608    MOV	R0, R1
0x1FA2	0x4904    LDR	R1, [PC, #16]
0x1FA4	0xF7FFFCA0  BL	_I2C1_Init_Advanced+0
;__em_f107vc_i2c.c, 32 :: 		return _MIKROBUS_OK;
0x1FA8	0x2000    MOVS	R0, __MIKROBUS_OK
;__em_f107vc_i2c.c, 33 :: 		}
L_end__i2cInit_1:
0x1FAA	0xF8DDE000  LDR	LR, [SP, #0]
0x1FAE	0xB001    ADD	SP, SP, #4
0x1FB0	0x4770    BX	LR
0x1FB2	0xBF00    NOP
0x1FB4	0x2E640000  	__GPIO_MODULE_I2C1_PB67+0
; end of easymx_v7_STM32F107VC__i2cInit_1
_I2C1_Init_Advanced:
;__Lib_I2C_12.c, 544 :: 		
; module start address is: 4 (R1)
; I2C_ClockSpeed start address is: 0 (R0)
0x18E8	0xB081    SUB	SP, SP, #4
0x18EA	0xF8CDE000  STR	LR, [SP, #0]
; module end address is: 4 (R1)
; I2C_ClockSpeed end address is: 0 (R0)
; I2C_ClockSpeed start address is: 0 (R0)
; module start address is: 4 (R1)
;__Lib_I2C_12.c, 545 :: 		
0x18EE	0x460A    MOV	R2, R1
; module end address is: 4 (R1)
0x18F0	0x4601    MOV	R1, R0
; I2C_ClockSpeed end address is: 0 (R0)
0x18F2	0x4803    LDR	R0, [PC, #12]
0x18F4	0xF7FFFB2C  BL	_I2Cx_Init_Advanced+0
;__Lib_I2C_12.c, 546 :: 		
L_end_I2C1_Init_Advanced:
0x18F8	0xF8DDE000  LDR	LR, [SP, #0]
0x18FC	0xB001    ADD	SP, SP, #4
0x18FE	0x4770    BX	LR
0x1900	0x54004000  	I2C1_CR1+0
; end of _I2C1_Init_Advanced
_I2Cx_Init_Advanced:
;__Lib_I2C_12.c, 591 :: 		
; module start address is: 8 (R2)
; I2C_ClockSpeed start address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x0F50	0xB088    SUB	SP, SP, #32
0x0F52	0xF8CDE000  STR	LR, [SP, #0]
0x0F56	0x460E    MOV	R6, R1
; module end address is: 8 (R2)
; I2C_ClockSpeed end address is: 4 (R1)
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 0 (R0)
; I2C_ClockSpeed start address is: 24 (R6)
; module start address is: 8 (R2)
;__Lib_I2C_12.c, 593 :: 		
;__Lib_I2C_12.c, 600 :: 		
0x0F58	0x4B55    LDR	R3, [PC, #340]
0x0F5A	0x4298    CMP	R0, R3
0x0F5C	0xD10D    BNE	L_I2Cx_Init_Advanced112
;__Lib_I2C_12.c, 601 :: 		
0x0F5E	0x2401    MOVS	R4, #1
0x0F60	0xB264    SXTB	R4, R4
0x0F62	0x4B54    LDR	R3, [PC, #336]
0x0F64	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_12.c, 602 :: 		
0x0F66	0x4C54    LDR	R4, [PC, #336]
0x0F68	0x4B54    LDR	R3, [PC, #336]
0x0F6A	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_12.c, 603 :: 		
0x0F6C	0x4C54    LDR	R4, [PC, #336]
0x0F6E	0x4B55    LDR	R3, [PC, #340]
0x0F70	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_12.c, 604 :: 		
0x0F72	0x4C55    LDR	R4, [PC, #340]
0x0F74	0x4B55    LDR	R3, [PC, #340]
0x0F76	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_12.c, 605 :: 		
0x0F78	0xE00F    B	L_I2Cx_Init_Advanced113
L_I2Cx_Init_Advanced112:
;__Lib_I2C_12.c, 606 :: 		
0x0F7A	0x4B55    LDR	R3, [PC, #340]
0x0F7C	0x4298    CMP	R0, R3
0x0F7E	0xD10C    BNE	L_I2Cx_Init_Advanced114
;__Lib_I2C_12.c, 607 :: 		
0x0F80	0x2401    MOVS	R4, #1
0x0F82	0xB264    SXTB	R4, R4
0x0F84	0x4B53    LDR	R3, [PC, #332]
0x0F86	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_12.c, 608 :: 		
0x0F88	0x4C53    LDR	R4, [PC, #332]
0x0F8A	0x4B4C    LDR	R3, [PC, #304]
0x0F8C	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_12.c, 609 :: 		
0x0F8E	0x4C53    LDR	R4, [PC, #332]
0x0F90	0x4B4C    LDR	R3, [PC, #304]
0x0F92	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_12.c, 610 :: 		
0x0F94	0x4C52    LDR	R4, [PC, #328]
0x0F96	0x4B4D    LDR	R3, [PC, #308]
0x0F98	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_12.c, 611 :: 		
L_I2Cx_Init_Advanced114:
L_I2Cx_Init_Advanced113:
;__Lib_I2C_12.c, 612 :: 		
0x0F9A	0x9601    STR	R6, [SP, #4]
; module end address is: 8 (R2)
0x0F9C	0x9002    STR	R0, [SP, #8]
0x0F9E	0x4610    MOV	R0, R2
0x0FA0	0xF7FFFCF4  BL	_GPIO_Alternate_Function_Enable+0
0x0FA4	0x9802    LDR	R0, [SP, #8]
0x0FA6	0x9E01    LDR	R6, [SP, #4]
;__Lib_I2C_12.c, 617 :: 		
0x0FA8	0x1D03    ADDS	R3, R0, #4
0x0FAA	0x681B    LDR	R3, [R3, #0]
;__Lib_I2C_12.c, 619 :: 		
0x0FAC	0xB29C    UXTH	R4, R3
0x0FAE	0xF06F033F  MVN	R3, #63
0x0FB2	0xEA040303  AND	R3, R4, R3, LSL #0
; tmpreg start address is: 20 (R5)
0x0FB6	0xB29D    UXTH	R5, R3
;__Lib_I2C_12.c, 621 :: 		
0x0FB8	0xAB03    ADD	R3, SP, #12
0x0FBA	0x9001    STR	R0, [SP, #4]
0x0FBC	0x4618    MOV	R0, R3
0x0FBE	0xF7FFFC4B  BL	_RCC_GetClocksFrequency+0
0x0FC2	0x9801    LDR	R0, [SP, #4]
;__Lib_I2C_12.c, 622 :: 		
; pclk1 start address is: 28 (R7)
0x0FC4	0x9F05    LDR	R7, [SP, #20]
;__Lib_I2C_12.c, 624 :: 		
0x0FC6	0x9C05    LDR	R4, [SP, #20]
0x0FC8	0x4B46    LDR	R3, [PC, #280]
0x0FCA	0xFBB4F3F3  UDIV	R3, R4, R3
; freqrange start address is: 4 (R1)
0x0FCE	0xB299    UXTH	R1, R3
;__Lib_I2C_12.c, 625 :: 		
0x0FD0	0xB29B    UXTH	R3, R3
0x0FD2	0xEA450403  ORR	R4, R5, R3, LSL #0
0x0FD6	0xB2A4    UXTH	R4, R4
; tmpreg end address is: 20 (R5)
;__Lib_I2C_12.c, 627 :: 		
0x0FD8	0x1D03    ADDS	R3, R0, #4
0x0FDA	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_12.c, 631 :: 		
0x0FDC	0x2400    MOVS	R4, #0
0x0FDE	0x6803    LDR	R3, [R0, #0]
0x0FE0	0xF3640300  BFI	R3, R4, #0, #1
0x0FE4	0x6003    STR	R3, [R0, #0]
;__Lib_I2C_12.c, 634 :: 		
; tmpreg start address is: 8 (R2)
0x0FE6	0x2200    MOVS	R2, #0
;__Lib_I2C_12.c, 637 :: 		
0x0FE8	0x4B3F    LDR	R3, [PC, #252]
0x0FEA	0x429E    CMP	R6, R3
0x0FEC	0xD812    BHI	L_I2Cx_Init_Advanced115
;__Lib_I2C_12.c, 640 :: 		
0x0FEE	0x0073    LSLS	R3, R6, #1
; I2C_ClockSpeed end address is: 24 (R6)
0x0FF0	0xFBB7F4F3  UDIV	R4, R7, R3
; pclk1 end address is: 28 (R7)
; result start address is: 16 (R4)
0x0FF4	0xB2A4    UXTH	R4, R4
;__Lib_I2C_12.c, 642 :: 		
0x0FF6	0x2C04    CMP	R4, #4
0x0FF8	0xD202    BCS	L__I2Cx_Init_Advanced144
; result end address is: 16 (R4)
;__Lib_I2C_12.c, 645 :: 		
; result start address is: 12 (R3)
0x0FFA	0x2304    MOVS	R3, #4
; result end address is: 12 (R3)
0x0FFC	0x461C    MOV	R4, R3
;__Lib_I2C_12.c, 646 :: 		
0x0FFE	0xE7FF    B	L_I2Cx_Init_Advanced116
L__I2Cx_Init_Advanced144:
;__Lib_I2C_12.c, 642 :: 		
;__Lib_I2C_12.c, 646 :: 		
L_I2Cx_Init_Advanced116:
;__Lib_I2C_12.c, 648 :: 		
; result start address is: 16 (R4)
0x1000	0xEA420304  ORR	R3, R2, R4, LSL #0
; result end address is: 16 (R4)
0x1004	0xB29A    UXTH	R2, R3
;__Lib_I2C_12.c, 650 :: 		
0x1006	0xF2000420  ADDW	R4, R0, #32
0x100A	0x1C4B    ADDS	R3, R1, #1
0x100C	0xB29B    UXTH	R3, R3
; freqrange end address is: 4 (R1)
0x100E	0x6023    STR	R3, [R4, #0]
;__Lib_I2C_12.c, 651 :: 		
0x1010	0xB291    UXTH	R1, R2
0x1012	0xE03F    B	L_I2Cx_Init_Advanced117
L_I2Cx_Init_Advanced115:
;__Lib_I2C_12.c, 656 :: 		
; freqrange start address is: 4 (R1)
; pclk1 start address is: 28 (R7)
; I2C_ClockSpeed start address is: 24 (R6)
0x1014	0x2303    MOVS	R3, #3
0x1016	0xFB06F403  MUL	R4, R6, R3
0x101A	0xFBB7F3F4  UDIV	R3, R7, R4
; result start address is: 32 (R8)
0x101E	0xFA1FF883  UXTH	R8, R3
;__Lib_I2C_12.c, 659 :: 		
0x1022	0x2319    MOVS	R3, #25
0x1024	0xFB06F503  MUL	R5, R6, R3
0x1028	0xFBB7F3F5  UDIV	R3, R7, R5
; result25 start address is: 36 (R9)
0x102C	0xFA1FF983  UXTH	R9, R3
;__Lib_I2C_12.c, 661 :: 		
0x1030	0xFB08F404  MUL	R4, R8, R4
; result end address is: 32 (R8)
;__Lib_I2C_12.c, 663 :: 		
0x1034	0xFB09F305  MUL	R3, R9, R5
; result25 end address is: 36 (R9)
;__Lib_I2C_12.c, 665 :: 		
0x1038	0x1B3C    SUB	R4, R7, R4
0x103A	0x1AFB    SUB	R3, R7, R3
0x103C	0x429C    CMP	R4, R3
0x103E	0xD205    BCS	L_I2Cx_Init_Advanced118
;__Lib_I2C_12.c, 666 :: 		
0x1040	0x2303    MOVS	R3, #3
0x1042	0x4373    MULS	R3, R6, R3
; I2C_ClockSpeed end address is: 24 (R6)
0x1044	0xFBB7F4F3  UDIV	R4, R7, R3
; pclk1 end address is: 28 (R7)
; result start address is: 16 (R4)
0x1048	0xB2A4    UXTH	R4, R4
;__Lib_I2C_12.c, 667 :: 		
; result end address is: 16 (R4)
0x104A	0xE006    B	L_I2Cx_Init_Advanced119
L_I2Cx_Init_Advanced118:
;__Lib_I2C_12.c, 669 :: 		
; pclk1 start address is: 28 (R7)
; I2C_ClockSpeed start address is: 24 (R6)
0x104C	0x2319    MOVS	R3, #25
0x104E	0x4373    MULS	R3, R6, R3
; I2C_ClockSpeed end address is: 24 (R6)
0x1050	0xFBB7F4F3  UDIV	R4, R7, R3
; pclk1 end address is: 28 (R7)
; result start address is: 16 (R4)
0x1054	0xB2A4    UXTH	R4, R4
;__Lib_I2C_12.c, 670 :: 		
0x1056	0xF4444480  ORR	R4, R4, #16384
; result end address is: 16 (R4)
;__Lib_I2C_12.c, 671 :: 		
L_I2Cx_Init_Advanced119:
;__Lib_I2C_12.c, 674 :: 		
; result start address is: 16 (R4)
0x105A	0xF64073FF  MOVW	R3, #4095
0x105E	0xEA040303  AND	R3, R4, R3, LSL #0
0x1062	0xB913    CBNZ	R3, L__I2Cx_Init_Advanced145
;__Lib_I2C_12.c, 677 :: 		
0x1064	0xF0440401  ORR	R4, R4, #1
; result end address is: 16 (R4)
;__Lib_I2C_12.c, 678 :: 		
0x1068	0xE7FF    B	L_I2Cx_Init_Advanced120
L__I2Cx_Init_Advanced145:
;__Lib_I2C_12.c, 674 :: 		
;__Lib_I2C_12.c, 678 :: 		
L_I2Cx_Init_Advanced120:
;__Lib_I2C_12.c, 680 :: 		
; result start address is: 16 (R4)
0x106A	0xF4444300  ORR	R3, R4, #32768
; result end address is: 16 (R4)
0x106E	0xB29B    UXTH	R3, R3
0x1070	0x431A    ORRS	R2, R3
0x1072	0xB292    UXTH	R2, R2
;__Lib_I2C_12.c, 682 :: 		
0x1074	0xF2000520  ADDW	R5, R0, #32
0x1078	0xF240132C  MOVW	R3, #300
0x107C	0xFB01F403  MUL	R4, R1, R3
0x1080	0xB2A4    UXTH	R4, R4
; freqrange end address is: 4 (R1)
0x1082	0xF24033E8  MOVW	R3, #1000
0x1086	0xFBB4F3F3  UDIV	R3, R4, R3
0x108A	0xB29B    UXTH	R3, R3
0x108C	0x1C5B    ADDS	R3, R3, #1
0x108E	0xB29B    UXTH	R3, R3
0x1090	0x602B    STR	R3, [R5, #0]
; tmpreg end address is: 8 (R2)
0x1092	0xB291    UXTH	R1, R2
;__Lib_I2C_12.c, 683 :: 		
L_I2Cx_Init_Advanced117:
;__Lib_I2C_12.c, 685 :: 		
; tmpreg start address is: 4 (R1)
0x1094	0xF200031C  ADDW	R3, R0, #28
0x1098	0x6019    STR	R1, [R3, #0]
; tmpreg end address is: 4 (R1)
;__Lib_I2C_12.c, 687 :: 		
0x109A	0x2300    MOVS	R3, #0
0x109C	0x6003    STR	R3, [R0, #0]
;__Lib_I2C_12.c, 688 :: 		
0x109E	0x2401    MOVS	R4, #1
0x10A0	0x6803    LDR	R3, [R0, #0]
0x10A2	0xF3640300  BFI	R3, R4, #0, #1
0x10A6	0x6003    STR	R3, [R0, #0]
; I2C_BASE end address is: 0 (R0)
;__Lib_I2C_12.c, 689 :: 		
L_end_I2Cx_Init_Advanced:
0x10A8	0xF8DDE000  LDR	LR, [SP, #0]
0x10AC	0xB008    ADD	SP, SP, #32
0x10AE	0x4770    BX	LR
0x10B0	0x54004000  	I2C1_CR1+0
0x10B4	0x03D44242  	RCC_APB1ENR+0
0x10B8	0x19210000  	_I2C1_Start+0
0x10BC	0x01902000  	_I2C_Start_Ptr+0
0x10C0	0x138D0000  	_I2C1_Read+0
0x10C4	0x01942000  	_I2C_Read_Ptr+0
0x10C8	0x14E50000  	_I2C1_Write+0
0x10CC	0x01982000  	_I2C_Write_Ptr+0
0x10D0	0x58004000  	I2C2_CR1+0
0x10D4	0x03D84242  	RCC_APB1ENR+0
0x10D8	0x14050000  	_I2C2_Start+0
0x10DC	0x13B10000  	_I2C2_Read+0
0x10E0	0x15090000  	_I2C2_Write+0
0x10E4	0x4240000F  	#1000000
0x10E8	0x86A00001  	#100000
; end of _I2Cx_Init_Advanced
_RCC_GetClocksFrequency:
;__Lib_System_105_107.c, 452 :: 		
; RCC_Clocks start address is: 0 (R0)
0x0858	0xB082    SUB	SP, SP, #8
0x085A	0xF8CDE000  STR	LR, [SP, #0]
0x085E	0x4603    MOV	R3, R0
; RCC_Clocks end address is: 0 (R0)
; RCC_Clocks start address is: 12 (R3)
;__Lib_System_105_107.c, 455 :: 		
0x0860	0x4619    MOV	R1, R3
0x0862	0x9101    STR	R1, [SP, #4]
0x0864	0xF7FFFCCC  BL	_Get_Fosc_kHz+0
0x0868	0xF24031E8  MOVW	R1, #1000
0x086C	0xFB00F201  MUL	R2, R0, R1
0x0870	0x9901    LDR	R1, [SP, #4]
0x0872	0x600A    STR	R2, [R1, #0]
;__Lib_System_105_107.c, 458 :: 		
0x0874	0x491F    LDR	R1, [PC, #124]
0x0876	0x7809    LDRB	R1, [R1, #0]
0x0878	0xF3C11103  UBFX	R1, R1, #4, #4
; tmp start address is: 0 (R0)
0x087C	0xB2C8    UXTB	R0, R1
;__Lib_System_105_107.c, 459 :: 		
0x087E	0x491E    LDR	R1, [PC, #120]
0x0880	0x1809    ADDS	R1, R1, R0
; tmp end address is: 0 (R0)
0x0882	0x7808    LDRB	R0, [R1, #0]
; presc start address is: 0 (R0)
0x0884	0xB2C0    UXTB	R0, R0
;__Lib_System_105_107.c, 461 :: 		
0x0886	0x1D1A    ADDS	R2, R3, #4
0x0888	0x6819    LDR	R1, [R3, #0]
0x088A	0x40C1    LSRS	R1, R0
; presc end address is: 0 (R0)
0x088C	0x6011    STR	R1, [R2, #0]
;__Lib_System_105_107.c, 463 :: 		
0x088E	0x4919    LDR	R1, [PC, #100]
0x0890	0x8809    LDRH	R1, [R1, #0]
0x0892	0xF3C12102  UBFX	R1, R1, #8, #3
; tmp start address is: 0 (R0)
0x0896	0xB288    UXTH	R0, R1
;__Lib_System_105_107.c, 464 :: 		
0x0898	0x4917    LDR	R1, [PC, #92]
0x089A	0x1809    ADDS	R1, R1, R0
; tmp end address is: 0 (R0)
0x089C	0x7808    LDRB	R0, [R1, #0]
; presc start address is: 0 (R0)
0x089E	0xB2C0    UXTB	R0, R0
;__Lib_System_105_107.c, 466 :: 		
0x08A0	0xF2030208  ADDW	R2, R3, #8
0x08A4	0x1D19    ADDS	R1, R3, #4
0x08A6	0x6809    LDR	R1, [R1, #0]
0x08A8	0x40C1    LSRS	R1, R0
; presc end address is: 0 (R0)
0x08AA	0x6011    STR	R1, [R2, #0]
;__Lib_System_105_107.c, 468 :: 		
0x08AC	0x4911    LDR	R1, [PC, #68]
0x08AE	0x8809    LDRH	R1, [R1, #0]
0x08B0	0xF3C121C2  UBFX	R1, R1, #11, #3
; tmp start address is: 0 (R0)
0x08B4	0xB288    UXTH	R0, R1
;__Lib_System_105_107.c, 469 :: 		
0x08B6	0x4910    LDR	R1, [PC, #64]
0x08B8	0x1809    ADDS	R1, R1, R0
; tmp end address is: 0 (R0)
0x08BA	0x7808    LDRB	R0, [R1, #0]
; presc start address is: 0 (R0)
0x08BC	0xB2C0    UXTB	R0, R0
;__Lib_System_105_107.c, 471 :: 		
0x08BE	0xF203020C  ADDW	R2, R3, #12
0x08C2	0x1D19    ADDS	R1, R3, #4
0x08C4	0x6809    LDR	R1, [R1, #0]
0x08C6	0x40C1    LSRS	R1, R0
; presc end address is: 0 (R0)
0x08C8	0x6011    STR	R1, [R2, #0]
;__Lib_System_105_107.c, 473 :: 		
0x08CA	0x490A    LDR	R1, [PC, #40]
0x08CC	0x8809    LDRH	R1, [R1, #0]
0x08CE	0xF3C13181  UBFX	R1, R1, #14, #2
; tmp start address is: 0 (R0)
0x08D2	0xB288    UXTH	R0, R1
;__Lib_System_105_107.c, 474 :: 		
0x08D4	0x4909    LDR	R1, [PC, #36]
0x08D6	0x1809    ADDS	R1, R1, R0
; tmp end address is: 0 (R0)
0x08D8	0x7809    LDRB	R1, [R1, #0]
; presc start address is: 0 (R0)
0x08DA	0xB2C8    UXTB	R0, R1
;__Lib_System_105_107.c, 476 :: 		
0x08DC	0xF2030210  ADDW	R2, R3, #16
0x08E0	0xF203010C  ADDW	R1, R3, #12
; RCC_Clocks end address is: 12 (R3)
0x08E4	0x6809    LDR	R1, [R1, #0]
0x08E6	0xFBB1F1F0  UDIV	R1, R1, R0
; presc end address is: 0 (R0)
0x08EA	0x6011    STR	R1, [R2, #0]
;__Lib_System_105_107.c, 477 :: 		
L_end_RCC_GetClocksFrequency:
0x08EC	0xF8DDE000  LDR	LR, [SP, #0]
0x08F0	0xB002    ADD	SP, SP, #8
0x08F2	0x4770    BX	LR
0x08F4	0x10044002  	RCC_CFGRbits+0
0x08F8	0x30740000  	__Lib_System_105_107_APBAHBPrescTable+0
0x08FC	0x29F40000  	__Lib_System_105_107_ADCPrescTable+0
; end of _RCC_GetClocksFrequency
_Get_Fosc_kHz:
;__Lib_Delays.c, 9 :: 		unsigned long Get_Fosc_kHz(){
;__Lib_Delays.c, 10 :: 		return __System_CLOCK_IN_KHZ;
0x0200	0x4801    LDR	R0, [PC, #4]
0x0202	0x6800    LDR	R0, [R0, #0]
;__Lib_Delays.c, 11 :: 		}
L_end_Get_Fosc_kHz:
0x0204	0x4770    BX	LR
0x0206	0xBF00    NOP
0x0208	0x01802000  	___System_CLOCK_IN_KHZ+0
; end of _Get_Fosc_kHz
_GPIO_Alternate_Function_Enable:
;__Lib_GPIO_32F10x.c, 303 :: 		
; module start address is: 0 (R0)
0x098C	0xB081    SUB	SP, SP, #4
0x098E	0xF8CDE000  STR	LR, [SP, #0]
; module end address is: 0 (R0)
; module start address is: 0 (R0)
;__Lib_GPIO_32F10x.c, 304 :: 		
;__Lib_GPIO_32F10x.c, 305 :: 		
;__Lib_GPIO_32F10x.c, 307 :: 		
0x0992	0x2201    MOVS	R2, #1
0x0994	0xB252    SXTB	R2, R2
0x0996	0x493E    LDR	R1, [PC, #248]
0x0998	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32F10x.c, 309 :: 		
0x099A	0xF2000168  ADDW	R1, R0, #104
0x099E	0x680B    LDR	R3, [R1, #0]
0x09A0	0xF06F6100  MVN	R1, #134217728
0x09A4	0xEA030201  AND	R2, R3, R1, LSL #0
; gpio_remap start address is: 16 (R4)
0x09A8	0x4614    MOV	R4, R2
;__Lib_GPIO_32F10x.c, 310 :: 		
0x09AA	0xF0036100  AND	R1, R3, #134217728
0x09AE	0x0EC9    LSRS	R1, R1, #27
; newstate start address is: 12 (R3)
0x09B0	0x460B    MOV	R3, R1
;__Lib_GPIO_32F10x.c, 312 :: 		
0x09B2	0xF0024100  AND	R1, R2, #-2147483648
0x09B6	0xF1B14F00  CMP	R1, #-2147483648
0x09BA	0xD102    BNE	L_GPIO_Alternate_Function_Enable66
;__Lib_GPIO_32F10x.c, 314 :: 		
0x09BC	0x4935    LDR	R1, [PC, #212]
; tmpreg start address is: 8 (R2)
0x09BE	0x680A    LDR	R2, [R1, #0]
;__Lib_GPIO_32F10x.c, 315 :: 		
; tmpreg end address is: 8 (R2)
0x09C0	0xE001    B	L_GPIO_Alternate_Function_Enable67
L_GPIO_Alternate_Function_Enable66:
;__Lib_GPIO_32F10x.c, 318 :: 		
0x09C2	0x4935    LDR	R1, [PC, #212]
; tmpreg start address is: 8 (R2)
0x09C4	0x680A    LDR	R2, [R1, #0]
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 319 :: 		
L_GPIO_Alternate_Function_Enable67:
;__Lib_GPIO_32F10x.c, 321 :: 		
; tmpreg start address is: 8 (R2)
0x09C6	0xF4042170  AND	R1, R4, #983040
0x09CA	0x0C09    LSRS	R1, R1, #16
; tmpmask start address is: 24 (R6)
0x09CC	0x460E    MOV	R6, R1
;__Lib_GPIO_32F10x.c, 322 :: 		
0x09CE	0xF64F71FF  MOVW	R1, #65535
0x09D2	0xEA040101  AND	R1, R4, R1, LSL #0
; tmp start address is: 20 (R5)
0x09D6	0x460D    MOV	R5, R1
;__Lib_GPIO_32F10x.c, 324 :: 		
0x09D8	0xF4041140  AND	R1, R4, #3145728
0x09DC	0xF5B11F40  CMP	R1, #3145728
0x09E0	0xD10D    BNE	L_GPIO_Alternate_Function_Enable68
; tmpmask end address is: 24 (R6)
;__Lib_GPIO_32F10x.c, 326 :: 		
0x09E2	0xF06F6170  MVN	R1, #251658240
0x09E6	0xEA020101  AND	R1, R2, R1, LSL #0
; tmpreg end address is: 8 (R2)
; tmpreg start address is: 24 (R6)
0x09EA	0x460E    MOV	R6, R1
;__Lib_GPIO_32F10x.c, 327 :: 		
0x09EC	0x492A    LDR	R1, [PC, #168]
0x09EE	0x680A    LDR	R2, [R1, #0]
0x09F0	0xF06F6170  MVN	R1, #251658240
0x09F4	0x400A    ANDS	R2, R1
0x09F6	0x4928    LDR	R1, [PC, #160]
0x09F8	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32F10x.c, 328 :: 		
0x09FA	0x4632    MOV	R2, R6
; tmpreg end address is: 24 (R6)
0x09FC	0xE016    B	L_GPIO_Alternate_Function_Enable69
L_GPIO_Alternate_Function_Enable68:
;__Lib_GPIO_32F10x.c, 329 :: 		
; tmpreg start address is: 8 (R2)
; tmpmask start address is: 24 (R6)
0x09FE	0xF4041180  AND	R1, R4, #1048576
0x0A02	0xF5B11F80  CMP	R1, #1048576
0x0A06	0xD109    BNE	L_GPIO_Alternate_Function_Enable70
;__Lib_GPIO_32F10x.c, 331 :: 		
0x0A08	0xF04F0103  MOV	R1, #3
0x0A0C	0x40B1    LSLS	R1, R6
; tmpmask end address is: 24 (R6)
;__Lib_GPIO_32F10x.c, 332 :: 		
0x0A0E	0x43C9    MVN	R1, R1
0x0A10	0xEA020101  AND	R1, R2, R1, LSL #0
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 333 :: 		
0x0A14	0xF0416170  ORR	R1, R1, #251658240
; tmpreg start address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 334 :: 		
0x0A18	0x460A    MOV	R2, R1
; tmpreg end address is: 4 (R1)
0x0A1A	0xE007    B	L_GPIO_Alternate_Function_Enable71
L_GPIO_Alternate_Function_Enable70:
;__Lib_GPIO_32F10x.c, 337 :: 		
; tmpreg start address is: 8 (R2)
0x0A1C	0x0D61    LSRS	R1, R4, #21
0x0A1E	0x0109    LSLS	R1, R1, #4
0x0A20	0xFA05F101  LSL	R1, R5, R1
0x0A24	0x43C9    MVN	R1, R1
0x0A26	0x400A    ANDS	R2, R1
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 338 :: 		
0x0A28	0xF0426270  ORR	R2, R2, #251658240
; tmpreg start address is: 8 (R2)
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 339 :: 		
L_GPIO_Alternate_Function_Enable71:
; tmpreg start address is: 8 (R2)
; tmpreg end address is: 8 (R2)
L_GPIO_Alternate_Function_Enable69:
;__Lib_GPIO_32F10x.c, 341 :: 		
; tmpreg start address is: 8 (R2)
0x0A2C	0xB12B    CBZ	R3, L__GPIO_Alternate_Function_Enable106
; newstate end address is: 12 (R3)
;__Lib_GPIO_32F10x.c, 343 :: 		
0x0A2E	0x0D61    LSRS	R1, R4, #21
0x0A30	0x0109    LSLS	R1, R1, #4
0x0A32	0xFA05F101  LSL	R1, R5, R1
; tmp end address is: 20 (R5)
0x0A36	0x430A    ORRS	R2, R1
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 344 :: 		
0x0A38	0xE7FF    B	L_GPIO_Alternate_Function_Enable72
L__GPIO_Alternate_Function_Enable106:
;__Lib_GPIO_32F10x.c, 341 :: 		
;__Lib_GPIO_32F10x.c, 344 :: 		
L_GPIO_Alternate_Function_Enable72:
;__Lib_GPIO_32F10x.c, 346 :: 		
; tmpreg start address is: 8 (R2)
0x0A3A	0xF0044100  AND	R1, R4, #-2147483648
; gpio_remap end address is: 16 (R4)
0x0A3E	0xF1B14F00  CMP	R1, #-2147483648
0x0A42	0xD102    BNE	L_GPIO_Alternate_Function_Enable73
;__Lib_GPIO_32F10x.c, 348 :: 		
0x0A44	0x4913    LDR	R1, [PC, #76]
0x0A46	0x600A    STR	R2, [R1, #0]
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 349 :: 		
0x0A48	0xE001    B	L_GPIO_Alternate_Function_Enable74
L_GPIO_Alternate_Function_Enable73:
;__Lib_GPIO_32F10x.c, 352 :: 		
; tmpreg start address is: 8 (R2)
0x0A4A	0x4913    LDR	R1, [PC, #76]
0x0A4C	0x600A    STR	R2, [R1, #0]
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 353 :: 		
L_GPIO_Alternate_Function_Enable74:
;__Lib_GPIO_32F10x.c, 356 :: 		
; i start address is: 40 (R10)
0x0A4E	0xF2400A00  MOVW	R10, #0
; module end address is: 0 (R0)
; i end address is: 40 (R10)
0x0A52	0x4681    MOV	R9, R0
;__Lib_GPIO_32F10x.c, 357 :: 		
L_GPIO_Alternate_Function_Enable75:
; i start address is: 40 (R10)
; module start address is: 36 (R9)
0x0A54	0xEA4F018A  LSL	R1, R10, #2
0x0A58	0xEB090101  ADD	R1, R9, R1, LSL #0
0x0A5C	0x6809    LDR	R1, [R1, #0]
0x0A5E	0xF1B13FFF  CMP	R1, #-1
0x0A62	0xD010    BEQ	L_GPIO_Alternate_Function_Enable76
;__Lib_GPIO_32F10x.c, 358 :: 		
0x0A64	0xF1090134  ADD	R1, R9, #52
0x0A68	0xEA4F038A  LSL	R3, R10, #2
0x0A6C	0x18C9    ADDS	R1, R1, R3
0x0A6E	0x6809    LDR	R1, [R1, #0]
0x0A70	0x460A    MOV	R2, R1
0x0A72	0xEB090103  ADD	R1, R9, R3, LSL #0
0x0A76	0x6809    LDR	R1, [R1, #0]
0x0A78	0x4608    MOV	R0, R1
0x0A7A	0x4611    MOV	R1, R2
0x0A7C	0xF7FFFB74  BL	__Lib_GPIO_32F10x_GPIO_Configure_Pin+0
;__Lib_GPIO_32F10x.c, 359 :: 		
0x0A80	0xF10A0A01  ADD	R10, R10, #1
;__Lib_GPIO_32F10x.c, 360 :: 		
; module end address is: 36 (R9)
; i end address is: 40 (R10)
0x0A84	0xE7E6    B	L_GPIO_Alternate_Function_Enable75
L_GPIO_Alternate_Function_Enable76:
;__Lib_GPIO_32F10x.c, 363 :: 		
L_end_GPIO_Alternate_Function_Enable:
0x0A86	0xF8DDE000  LDR	LR, [SP, #0]
0x0A8A	0xB001    ADD	SP, SP, #4
0x0A8C	0x4770    BX	LR
0x0A8E	0xBF00    NOP
0x0A90	0x03004242  	RCC_APB2ENRbits+0
0x0A94	0x001C4001  	AFIO_MAPR2+0
0x0A98	0x00044001  	AFIO_MAPR+0
; end of _GPIO_Alternate_Function_Enable
__Lib_GPIO_32F10x_GPIO_Configure_Pin:
;__Lib_GPIO_32F10x.c, 282 :: 		
; config start address is: 4 (R1)
; af_pin start address is: 0 (R0)
0x0168	0xB083    SUB	SP, SP, #12
0x016A	0xF8CDE000  STR	LR, [SP, #0]
; config end address is: 4 (R1)
; af_pin end address is: 0 (R0)
; af_pin start address is: 0 (R0)
; config start address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 286 :: 		
0x016E	0xF00003FF  AND	R3, R0, #255
; af_pin end address is: 0 (R0)
0x0172	0x091A    LSRS	R2, R3, #4
; port start address is: 0 (R0)
0x0174	0x4610    MOV	R0, R2
;__Lib_GPIO_32F10x.c, 287 :: 		
0x0176	0xF003020F  AND	R2, R3, #15
; pin start address is: 12 (R3)
0x017A	0x4613    MOV	R3, R2
;__Lib_GPIO_32F10x.c, 290 :: 		
0x017C	0xE014    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin57
; port end address is: 0 (R0)
;__Lib_GPIO_32F10x.c, 291 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin59:
0x017E	0x4A19    LDR	R2, [PC, #100]
0x0180	0x9202    STR	R2, [SP, #8]
0x0182	0xE01F    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 292 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin60:
0x0184	0x4A18    LDR	R2, [PC, #96]
0x0186	0x9202    STR	R2, [SP, #8]
0x0188	0xE01C    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 293 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin61:
0x018A	0x4A18    LDR	R2, [PC, #96]
0x018C	0x9202    STR	R2, [SP, #8]
0x018E	0xE019    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 294 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin62:
0x0190	0x4A17    LDR	R2, [PC, #92]
0x0192	0x9202    STR	R2, [SP, #8]
0x0194	0xE016    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 295 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin63:
0x0196	0x4A17    LDR	R2, [PC, #92]
0x0198	0x9202    STR	R2, [SP, #8]
0x019A	0xE013    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 296 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin64:
0x019C	0x4A16    LDR	R2, [PC, #88]
0x019E	0x9202    STR	R2, [SP, #8]
0x01A0	0xE010    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 297 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin65:
0x01A2	0x4A16    LDR	R2, [PC, #88]
0x01A4	0x9202    STR	R2, [SP, #8]
0x01A6	0xE00D    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 298 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin57:
; port start address is: 0 (R0)
0x01A8	0x2800    CMP	R0, #0
0x01AA	0xD0E8    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin59
0x01AC	0x2801    CMP	R0, #1
0x01AE	0xD0E9    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin60
0x01B0	0x2802    CMP	R0, #2
0x01B2	0xD0EA    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin61
0x01B4	0x2803    CMP	R0, #3
0x01B6	0xD0EB    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin62
0x01B8	0x2804    CMP	R0, #4
0x01BA	0xD0EC    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin63
0x01BC	0x2805    CMP	R0, #5
0x01BE	0xD0ED    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin64
0x01C0	0x2806    CMP	R0, #6
0x01C2	0xD0EE    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin65
; port end address is: 0 (R0)
L___Lib_GPIO_32F10x_GPIO_Configure_Pin58:
;__Lib_GPIO_32F10x.c, 300 :: 		
0x01C4	0x2201    MOVS	R2, #1
0x01C6	0xB212    SXTH	R2, R2
0x01C8	0x409A    LSLS	R2, R3
; pin end address is: 12 (R3)
0x01CA	0xF8AD2004  STRH	R2, [SP, #4]
; config end address is: 4 (R1)
0x01CE	0x9802    LDR	R0, [SP, #8]
0x01D0	0x460A    MOV	R2, R1
0x01D2	0xF8BD1004  LDRH	R1, [SP, #4]
0x01D6	0xF000FF8F  BL	_GPIO_Config+0
;__Lib_GPIO_32F10x.c, 301 :: 		
L_end_GPIO_Configure_Pin:
0x01DA	0xF8DDE000  LDR	LR, [SP, #0]
0x01DE	0xB003    ADD	SP, SP, #12
0x01E0	0x4770    BX	LR
0x01E2	0xBF00    NOP
0x01E4	0x08004001  	#1073809408
0x01E8	0x0C004001  	#1073810432
0x01EC	0x10004001  	#1073811456
0x01F0	0x14004001  	#1073812480
0x01F4	0x18004001  	#1073813504
0x01F8	0x1C004001  	#1073814528
0x01FC	0x20004001  	#1073815552
; end of __Lib_GPIO_32F10x_GPIO_Configure_Pin
easymx_v7_STM32F107VC__i2cInit_2:
;__em_f107vc_i2c.c, 35 :: 		static T_mikrobus_ret _i2cInit_2(const uint32_t* cfg)
; cfg start address is: 0 (R0)
0x2170	0xB081    SUB	SP, SP, #4
0x2172	0xF8CDE000  STR	LR, [SP, #0]
; cfg end address is: 0 (R0)
; cfg start address is: 0 (R0)
;__em_f107vc_i2c.c, 37 :: 		I2C1_Init_Advanced( cfg[0], &_GPIO_MODULE_I2C1_PB67);
0x2176	0x6801    LDR	R1, [R0, #0]
; cfg end address is: 0 (R0)
0x2178	0x4608    MOV	R0, R1
0x217A	0x4904    LDR	R1, [PC, #16]
0x217C	0xF7FFFBB4  BL	_I2C1_Init_Advanced+0
;__em_f107vc_i2c.c, 38 :: 		return _MIKROBUS_OK;
0x2180	0x2000    MOVS	R0, __MIKROBUS_OK
;__em_f107vc_i2c.c, 39 :: 		}
L_end__i2cInit_2:
0x2182	0xF8DDE000  LDR	LR, [SP, #0]
0x2186	0xB001    ADD	SP, SP, #4
0x2188	0x4770    BX	LR
0x218A	0xBF00    NOP
0x218C	0x2E640000  	__GPIO_MODULE_I2C1_PB67+0
; end of easymx_v7_STM32F107VC__i2cInit_2
_mikrobus_logInit:
;easymx_v7_STM32F107VC.c, 283 :: 		T_mikrobus_ret mikrobus_logInit(T_log_bus port, const uint32_t baud)
; baud start address is: 4 (R1)
; port start address is: 0 (R0)
0x2744	0xB081    SUB	SP, SP, #4
0x2746	0xF8CDE000  STR	LR, [SP, #0]
; baud end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; baud start address is: 4 (R1)
;easymx_v7_STM32F107VC.c, 285 :: 		switch( port )
0x274A	0xE011    B	L_mikrobus_logInit88
; port end address is: 0 (R0)
;easymx_v7_STM32F107VC.c, 288 :: 		case _MIKROBUS1 : return _log_init1( baud );
L_mikrobus_logInit90:
0x274C	0x4608    MOV	R0, R1
; baud end address is: 4 (R1)
0x274E	0xF7FFFBEB  BL	easymx_v7_STM32F107VC__log_init1+0
0x2752	0xE016    B	L_end_mikrobus_logInit
;easymx_v7_STM32F107VC.c, 291 :: 		case _MIKROBUS2: return _log_init2( baud );
L_mikrobus_logInit91:
; baud start address is: 4 (R1)
0x2754	0x4608    MOV	R0, R1
; baud end address is: 4 (R1)
0x2756	0xF7FFFC03  BL	easymx_v7_STM32F107VC__log_init2+0
0x275A	0xE012    B	L_end_mikrobus_logInit
;easymx_v7_STM32F107VC.c, 309 :: 		case _LOG_USBUART_A : return _log_initUartA( baud );
L_mikrobus_logInit92:
; baud start address is: 4 (R1)
0x275C	0x4608    MOV	R0, R1
; baud end address is: 4 (R1)
0x275E	0xF7FFFD43  BL	easymx_v7_STM32F107VC__log_initUartA+0
0x2762	0xE00E    B	L_end_mikrobus_logInit
;easymx_v7_STM32F107VC.c, 312 :: 		case _LOG_USBUART_B : return _log_initUartB( baud );
L_mikrobus_logInit93:
; baud start address is: 4 (R1)
0x2764	0x4608    MOV	R0, R1
; baud end address is: 4 (R1)
0x2766	0xF7FFFD13  BL	easymx_v7_STM32F107VC__log_initUartB+0
0x276A	0xE00A    B	L_end_mikrobus_logInit
;easymx_v7_STM32F107VC.c, 314 :: 		default : return _MIKROBUS_ERR_BUS;
L_mikrobus_logInit94:
0x276C	0x2001    MOVS	R0, #1
0x276E	0xE008    B	L_end_mikrobus_logInit
;easymx_v7_STM32F107VC.c, 315 :: 		}
L_mikrobus_logInit88:
; baud start address is: 4 (R1)
; port start address is: 0 (R0)
0x2770	0x2800    CMP	R0, #0
0x2772	0xD0EB    BEQ	L_mikrobus_logInit90
0x2774	0x2801    CMP	R0, #1
0x2776	0xD0ED    BEQ	L_mikrobus_logInit91
0x2778	0x2820    CMP	R0, #32
0x277A	0xD0EF    BEQ	L_mikrobus_logInit92
0x277C	0x2830    CMP	R0, #48
0x277E	0xD0F1    BEQ	L_mikrobus_logInit93
; port end address is: 0 (R0)
; baud end address is: 4 (R1)
0x2780	0xE7F4    B	L_mikrobus_logInit94
;easymx_v7_STM32F107VC.c, 317 :: 		}
L_end_mikrobus_logInit:
0x2782	0xF8DDE000  LDR	LR, [SP, #0]
0x2786	0xB001    ADD	SP, SP, #4
0x2788	0x4770    BX	LR
; end of _mikrobus_logInit
easymx_v7_STM32F107VC__log_init1:
;__em_f107vc_log.c, 23 :: 		static T_mikrobus_ret _log_init1(uint32_t baud)
; baud start address is: 0 (R0)
0x1F28	0xB081    SUB	SP, SP, #4
0x1F2A	0xF8CDE000  STR	LR, [SP, #0]
; baud end address is: 0 (R0)
; baud start address is: 0 (R0)
;__em_f107vc_log.c, 25 :: 		UART3_Init_Advanced(baud, _UART_8_BIT_DATA, _UART_NOPARITY, _UART_ONE_STOPBIT, &_GPIO_MODULE_USART3_PD89);
0x1F2E	0x4909    LDR	R1, [PC, #36]
0x1F30	0xB402    PUSH	(R1)
0x1F32	0xF2400300  MOVW	R3, #0
0x1F36	0xF2400200  MOVW	R2, #0
0x1F3A	0xF2400100  MOVW	R1, #0
; baud end address is: 0 (R0)
0x1F3E	0xF7FFFCBF  BL	_UART3_Init_Advanced+0
0x1F42	0xB001    ADD	SP, SP, #4
;__em_f107vc_log.c, 26 :: 		logger = UART3_Write;
0x1F44	0x4A04    LDR	R2, [PC, #16]
0x1F46	0x4905    LDR	R1, [PC, #20]
0x1F48	0x600A    STR	R2, [R1, #0]
;__em_f107vc_log.c, 27 :: 		return 0;
0x1F4A	0x2000    MOVS	R0, #0
;__em_f107vc_log.c, 28 :: 		}
L_end__log_init1:
0x1F4C	0xF8DDE000  LDR	LR, [SP, #0]
0x1F50	0xB001    ADD	SP, SP, #4
0x1F52	0x4770    BX	LR
0x1F54	0x2F3C0000  	__GPIO_MODULE_USART3_PD89+0
0x1F58	0x19DD0000  	_UART3_Write+0
0x1F5C	0x016C2000  	_logger+0
; end of easymx_v7_STM32F107VC__log_init1
_UART3_Init_Advanced:
;__Lib_UART_123_45.c, 384 :: 		
; stop_bits start address is: 12 (R3)
; parity start address is: 8 (R2)
; data_bits start address is: 4 (R1)
; baud_rate start address is: 0 (R0)
0x18C0	0xB081    SUB	SP, SP, #4
0x18C2	0xF8CDE000  STR	LR, [SP, #0]
; stop_bits end address is: 12 (R3)
; parity end address is: 8 (R2)
; data_bits end address is: 4 (R1)
; baud_rate end address is: 0 (R0)
; baud_rate start address is: 0 (R0)
; data_bits start address is: 4 (R1)
; parity start address is: 8 (R2)
; stop_bits start address is: 12 (R3)
; module start address is: 20 (R5)
0x18C6	0x9D01    LDR	R5, [SP, #4]
;__Lib_UART_123_45.c, 386 :: 		
0x18C8	0x462C    MOV	R4, R5
; module end address is: 20 (R5)
0x18CA	0xB410    PUSH	(R4)
; parity end address is: 8 (R2)
0x18CC	0xB408    PUSH	(R3)
0x18CE	0xB293    UXTH	R3, R2
0x18D0	0xB28A    UXTH	R2, R1
; data_bits end address is: 4 (R1)
0x18D2	0x4601    MOV	R1, R0
; baud_rate end address is: 0 (R0)
0x18D4	0x4803    LDR	R0, [PC, #12]
; stop_bits end address is: 12 (R3)
0x18D6	0xF7FFFA19  BL	__Lib_UART_123_45_UARTx_Init_Advanced+0
0x18DA	0xB002    ADD	SP, SP, #8
;__Lib_UART_123_45.c, 387 :: 		
L_end_UART3_Init_Advanced:
0x18DC	0xF8DDE000  LDR	LR, [SP, #0]
0x18E0	0xB001    ADD	SP, SP, #4
0x18E2	0x4770    BX	LR
0x18E4	0x48004000  	USART3_SR+0
; end of _UART3_Init_Advanced
__Lib_UART_123_45_UARTx_Init_Advanced:
;__Lib_UART_123_45.c, 294 :: 		
; parity start address is: 12 (R3)
; baud_rate start address is: 4 (R1)
; UART_Base start address is: 0 (R0)
0x0D0C	0xB089    SUB	SP, SP, #36
0x0D0E	0xF8CDE000  STR	LR, [SP, #0]
0x0D12	0x4683    MOV	R11, R0
0x0D14	0xB298    UXTH	R0, R3
0x0D16	0x468C    MOV	R12, R1
; parity end address is: 12 (R3)
; baud_rate end address is: 4 (R1)
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 44 (R11)
; baud_rate start address is: 48 (R12)
; parity start address is: 0 (R0)
; stop_bits start address is: 4 (R1)
0x0D18	0xF8BD1024  LDRH	R1, [SP, #36]
; module start address is: 24 (R6)
0x0D1C	0x9E0A    LDR	R6, [SP, #40]
;__Lib_UART_123_45.c, 298 :: 		
0x0D1E	0xAC04    ADD	R4, SP, #16
0x0D20	0xF8AD1004  STRH	R1, [SP, #4]
0x0D24	0xF8AD0008  STRH	R0, [SP, #8]
0x0D28	0x4620    MOV	R0, R4
0x0D2A	0xF7FFFD95  BL	_RCC_GetClocksFrequency+0
0x0D2E	0xF8BD0008  LDRH	R0, [SP, #8]
0x0D32	0xF8BD1004  LDRH	R1, [SP, #4]
;__Lib_UART_123_45.c, 301 :: 		
0x0D36	0x4C64    LDR	R4, [PC, #400]
0x0D38	0x45A3    CMP	R11, R4
0x0D3A	0xD112    BNE	L___Lib_UART_123_45_UARTx_Init_Advanced15
;__Lib_UART_123_45.c, 302 :: 		
0x0D3C	0x2501    MOVS	R5, #1
0x0D3E	0xB26D    SXTB	R5, R5
0x0D40	0x4C62    LDR	R4, [PC, #392]
0x0D42	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 303 :: 		
0x0D44	0x4D62    LDR	R5, [PC, #392]
0x0D46	0x4C63    LDR	R4, [PC, #396]
0x0D48	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 304 :: 		
0x0D4A	0x4D63    LDR	R5, [PC, #396]
0x0D4C	0x4C63    LDR	R4, [PC, #396]
0x0D4E	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 305 :: 		
0x0D50	0x4D63    LDR	R5, [PC, #396]
0x0D52	0x4C64    LDR	R4, [PC, #400]
0x0D54	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 306 :: 		
0x0D56	0x4D64    LDR	R5, [PC, #400]
0x0D58	0x4C64    LDR	R4, [PC, #400]
0x0D5A	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 307 :: 		
0x0D5C	0x9C07    LDR	R4, [SP, #28]
0x0D5E	0x9403    STR	R4, [SP, #12]
;__Lib_UART_123_45.c, 308 :: 		
0x0D60	0xE056    B	L___Lib_UART_123_45_UARTx_Init_Advanced16
L___Lib_UART_123_45_UARTx_Init_Advanced15:
;__Lib_UART_123_45.c, 309 :: 		
0x0D62	0x4C63    LDR	R4, [PC, #396]
0x0D64	0x45A3    CMP	R11, R4
0x0D66	0xD112    BNE	L___Lib_UART_123_45_UARTx_Init_Advanced17
;__Lib_UART_123_45.c, 310 :: 		
0x0D68	0x2501    MOVS	R5, #1
0x0D6A	0xB26D    SXTB	R5, R5
0x0D6C	0x4C61    LDR	R4, [PC, #388]
0x0D6E	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 311 :: 		
0x0D70	0x4D61    LDR	R5, [PC, #388]
0x0D72	0x4C58    LDR	R4, [PC, #352]
0x0D74	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 312 :: 		
0x0D76	0x4D61    LDR	R5, [PC, #388]
0x0D78	0x4C58    LDR	R4, [PC, #352]
0x0D7A	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 313 :: 		
0x0D7C	0x4D60    LDR	R5, [PC, #384]
0x0D7E	0x4C59    LDR	R4, [PC, #356]
0x0D80	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 314 :: 		
0x0D82	0x4D60    LDR	R5, [PC, #384]
0x0D84	0x4C59    LDR	R4, [PC, #356]
0x0D86	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 315 :: 		
0x0D88	0x9C06    LDR	R4, [SP, #24]
0x0D8A	0x9403    STR	R4, [SP, #12]
;__Lib_UART_123_45.c, 316 :: 		
0x0D8C	0xE040    B	L___Lib_UART_123_45_UARTx_Init_Advanced18
L___Lib_UART_123_45_UARTx_Init_Advanced17:
;__Lib_UART_123_45.c, 317 :: 		
0x0D8E	0x4C5E    LDR	R4, [PC, #376]
0x0D90	0x45A3    CMP	R11, R4
0x0D92	0xD112    BNE	L___Lib_UART_123_45_UARTx_Init_Advanced19
;__Lib_UART_123_45.c, 318 :: 		
0x0D94	0x2501    MOVS	R5, #1
0x0D96	0xB26D    SXTB	R5, R5
0x0D98	0x4C5C    LDR	R4, [PC, #368]
0x0D9A	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 319 :: 		
0x0D9C	0x4D5C    LDR	R5, [PC, #368]
0x0D9E	0x4C4D    LDR	R4, [PC, #308]
0x0DA0	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 320 :: 		
0x0DA2	0x4D5C    LDR	R5, [PC, #368]
0x0DA4	0x4C4D    LDR	R4, [PC, #308]
0x0DA6	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 321 :: 		
0x0DA8	0x4D5B    LDR	R5, [PC, #364]
0x0DAA	0x4C4E    LDR	R4, [PC, #312]
0x0DAC	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 322 :: 		
0x0DAE	0x4D5B    LDR	R5, [PC, #364]
0x0DB0	0x4C4E    LDR	R4, [PC, #312]
0x0DB2	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 323 :: 		
0x0DB4	0x9C06    LDR	R4, [SP, #24]
0x0DB6	0x9403    STR	R4, [SP, #12]
;__Lib_UART_123_45.c, 324 :: 		
0x0DB8	0xE02A    B	L___Lib_UART_123_45_UARTx_Init_Advanced20
L___Lib_UART_123_45_UARTx_Init_Advanced19:
;__Lib_UART_123_45.c, 325 :: 		
0x0DBA	0x4C59    LDR	R4, [PC, #356]
0x0DBC	0x45A3    CMP	R11, R4
0x0DBE	0xD112    BNE	L___Lib_UART_123_45_UARTx_Init_Advanced21
;__Lib_UART_123_45.c, 326 :: 		
0x0DC0	0x2501    MOVS	R5, #1
0x0DC2	0xB26D    SXTB	R5, R5
0x0DC4	0x4C57    LDR	R4, [PC, #348]
0x0DC6	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 327 :: 		
0x0DC8	0x4D57    LDR	R5, [PC, #348]
0x0DCA	0x4C42    LDR	R4, [PC, #264]
0x0DCC	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 328 :: 		
0x0DCE	0x4D57    LDR	R5, [PC, #348]
0x0DD0	0x4C42    LDR	R4, [PC, #264]
0x0DD2	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 329 :: 		
0x0DD4	0x4D56    LDR	R5, [PC, #344]
0x0DD6	0x4C43    LDR	R4, [PC, #268]
0x0DD8	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 330 :: 		
0x0DDA	0x4D56    LDR	R5, [PC, #344]
0x0DDC	0x4C43    LDR	R4, [PC, #268]
0x0DDE	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 331 :: 		
0x0DE0	0x9C06    LDR	R4, [SP, #24]
0x0DE2	0x9403    STR	R4, [SP, #12]
;__Lib_UART_123_45.c, 332 :: 		
0x0DE4	0xE014    B	L___Lib_UART_123_45_UARTx_Init_Advanced22
L___Lib_UART_123_45_UARTx_Init_Advanced21:
;__Lib_UART_123_45.c, 333 :: 		
0x0DE6	0x4C54    LDR	R4, [PC, #336]
0x0DE8	0x45A3    CMP	R11, R4
0x0DEA	0xD111    BNE	L___Lib_UART_123_45_UARTx_Init_Advanced23
;__Lib_UART_123_45.c, 334 :: 		
0x0DEC	0x2501    MOVS	R5, #1
0x0DEE	0xB26D    SXTB	R5, R5
0x0DF0	0x4C52    LDR	R4, [PC, #328]
0x0DF2	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 335 :: 		
0x0DF4	0x4D52    LDR	R5, [PC, #328]
0x0DF6	0x4C37    LDR	R4, [PC, #220]
0x0DF8	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 336 :: 		
0x0DFA	0x4D52    LDR	R5, [PC, #328]
0x0DFC	0x4C37    LDR	R4, [PC, #220]
0x0DFE	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 337 :: 		
0x0E00	0x4D51    LDR	R5, [PC, #324]
0x0E02	0x4C38    LDR	R4, [PC, #224]
0x0E04	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 338 :: 		
0x0E06	0x4D51    LDR	R5, [PC, #324]
0x0E08	0x4C38    LDR	R4, [PC, #224]
0x0E0A	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 339 :: 		
0x0E0C	0x9C06    LDR	R4, [SP, #24]
0x0E0E	0x9403    STR	R4, [SP, #12]
;__Lib_UART_123_45.c, 340 :: 		
L___Lib_UART_123_45_UARTx_Init_Advanced23:
L___Lib_UART_123_45_UARTx_Init_Advanced22:
L___Lib_UART_123_45_UARTx_Init_Advanced20:
L___Lib_UART_123_45_UARTx_Init_Advanced18:
L___Lib_UART_123_45_UARTx_Init_Advanced16:
;__Lib_UART_123_45.c, 342 :: 		
0x0E10	0xF8AD1004  STRH	R1, [SP, #4]
; module end address is: 24 (R6)
0x0E14	0xF8AD0008  STRH	R0, [SP, #8]
0x0E18	0x4630    MOV	R0, R6
0x0E1A	0xF7FFFDB7  BL	_GPIO_Alternate_Function_Enable+0
0x0E1E	0xF8BD0008  LDRH	R0, [SP, #8]
0x0E22	0xF8BD1004  LDRH	R1, [SP, #4]
;__Lib_UART_123_45.c, 344 :: 		
0x0E26	0xF10B0510  ADD	R5, R11, #16
0x0E2A	0x2400    MOVS	R4, #0
0x0E2C	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 345 :: 		
0x0E2E	0xF10B0510  ADD	R5, R11, #16
0x0E32	0x682C    LDR	R4, [R5, #0]
0x0E34	0x430C    ORRS	R4, R1
; stop_bits end address is: 4 (R1)
0x0E36	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 346 :: 		
0x0E38	0xF10B050C  ADD	R5, R11, #12
0x0E3C	0x2400    MOVS	R4, #0
0x0E3E	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 348 :: 		
0x0E40	0xB118    CBZ	R0, L___Lib_UART_123_45_UARTx_Init_Advanced38
;__Lib_UART_123_45.c, 349 :: 		
0x0E42	0xF4406080  ORR	R0, R0, #1024
0x0E46	0xB280    UXTH	R0, R0
; parity end address is: 0 (R0)
;__Lib_UART_123_45.c, 350 :: 		
0x0E48	0xE7FF    B	L___Lib_UART_123_45_UARTx_Init_Advanced24
L___Lib_UART_123_45_UARTx_Init_Advanced38:
;__Lib_UART_123_45.c, 348 :: 		
;__Lib_UART_123_45.c, 350 :: 		
L___Lib_UART_123_45_UARTx_Init_Advanced24:
;__Lib_UART_123_45.c, 352 :: 		
; parity start address is: 0 (R0)
0x0E4A	0xF10B050C  ADD	R5, R11, #12
0x0E4E	0x682C    LDR	R4, [R5, #0]
0x0E50	0x4304    ORRS	R4, R0
; parity end address is: 0 (R0)
0x0E52	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 354 :: 		
0x0E54	0xF10B060C  ADD	R6, R11, #12
0x0E58	0x2501    MOVS	R5, #1
0x0E5A	0x6834    LDR	R4, [R6, #0]
0x0E5C	0xF365344D  BFI	R4, R5, #13, #1
0x0E60	0x6034    STR	R4, [R6, #0]
;__Lib_UART_123_45.c, 355 :: 		
0x0E62	0xF10B060C  ADD	R6, R11, #12
0x0E66	0x2501    MOVS	R5, #1
0x0E68	0x6834    LDR	R4, [R6, #0]
0x0E6A	0xF36504C3  BFI	R4, R5, #3, #1
0x0E6E	0x6034    STR	R4, [R6, #0]
;__Lib_UART_123_45.c, 356 :: 		
0x0E70	0xF10B060C  ADD	R6, R11, #12
0x0E74	0x2501    MOVS	R5, #1
0x0E76	0x6834    LDR	R4, [R6, #0]
0x0E78	0xF3650482  BFI	R4, R5, #2, #1
0x0E7C	0x6034    STR	R4, [R6, #0]
;__Lib_UART_123_45.c, 357 :: 		
0x0E7E	0xF10B0514  ADD	R5, R11, #20
0x0E82	0x2400    MOVS	R4, #0
0x0E84	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 362 :: 		
0x0E86	0x9D03    LDR	R5, [SP, #12]
0x0E88	0x2419    MOVS	R4, #25
0x0E8A	0x4365    MULS	R5, R4, R5
0x0E8C	0xEA4F048C  LSL	R4, R12, #2
; baud_rate end address is: 48 (R12)
0x0E90	0xFBB5F7F4  UDIV	R7, R5, R4
;__Lib_UART_123_45.c, 363 :: 		
0x0E94	0x2464    MOVS	R4, #100
0x0E96	0xFBB7F4F4  UDIV	R4, R7, R4
0x0E9A	0x0126    LSLS	R6, R4, #4
;__Lib_UART_123_45.c, 365 :: 		
0x0E9C	0x0935    LSRS	R5, R6, #4
0x0E9E	0x2464    MOVS	R4, #100
0x0EA0	0x436C    MULS	R4, R5, R4
0x0EA2	0x1B3C    SUB	R4, R7, R4
;__Lib_UART_123_45.c, 366 :: 		
0x0EA4	0x0124    LSLS	R4, R4, #4
0x0EA6	0xF2040532  ADDW	R5, R4, #50
0x0EAA	0x2464    MOVS	R4, #100
0x0EAC	0xFBB5F4F4  UDIV	R4, R5, R4
0x0EB0	0xF004040F  AND	R4, R4, #15
0x0EB4	0xEA460404  ORR	R4, R6, R4, LSL #0
;__Lib_UART_123_45.c, 368 :: 		
0x0EB8	0xF10B0508  ADD	R5, R11, #8
; UART_Base end address is: 44 (R11)
0x0EBC	0xB2A4    UXTH	R4, R4
0x0EBE	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 369 :: 		
L_end_UARTx_Init_Advanced:
0x0EC0	0xF8DDE000  LDR	LR, [SP, #0]
0x0EC4	0xB009    ADD	SP, SP, #36
0x0EC6	0x4770    BX	LR
0x0EC8	0x38004001  	USART1_SR+0
0x0ECC	0x03384242  	RCC_APB2ENR+0
0x0ED0	0x19F90000  	_UART1_Write+0
0x0ED4	0x019C2000  	_UART_Wr_Ptr+0
0x0ED8	0x14650000  	_UART1_Read+0
0x0EDC	0x01A02000  	_UART_Rd_Ptr+0
0x0EE0	0x144D0000  	_UART1_Data_Ready+0
0x0EE4	0x01A42000  	_UART_Rdy_Ptr+0
0x0EE8	0x14350000  	_UART1_Tx_Idle+0
0x0EEC	0x01A82000  	_UART_Tx_Idle_Ptr+0
0x0EF0	0x44004000  	USART2_SR+0
0x0EF4	0x03C44242  	RCC_APB1ENR+0
0x0EF8	0x19890000  	_UART2_Write+0
0x0EFC	0x147D0000  	_UART2_Read+0
0x0F00	0x13ED0000  	_UART2_Data_Ready+0
0x0F04	0x141D0000  	_UART2_Tx_Idle+0
0x0F08	0x48004000  	USART3_SR+0
0x0F0C	0x03C84242  	RCC_APB1ENR+0
0x0F10	0x19DD0000  	_UART3_Write+0
0x0F14	0x13D50000  	_UART3_Read+0
0x0F18	0x18310000  	_UART3_Data_Ready+0
0x0F1C	0x18490000  	_UART3_Tx_Idle+0
0x0F20	0x4C004000  	UART4_SR+0
0x0F24	0x03CC4242  	RCC_APB1ENR+0
0x0F28	0x19C10000  	_UART4_Write+0
0x0F2C	0x18010000  	_UART4_Read+0
0x0F30	0x18190000  	_UART4_Data_Ready+0
0x0F34	0x18910000  	_UART4_Tx_Idle+0
0x0F38	0x50004000  	UART5_SR+0
0x0F3C	0x03D04242  	RCC_APB1ENR+0
0x0F40	0x19A50000  	_UART5_Write+0
0x0F44	0x18A90000  	_UART5_Read+0
0x0F48	0x18610000  	_UART5_Data_Ready+0
0x0F4C	0x18790000  	_UART5_Tx_Idle+0
; end of __Lib_UART_123_45_UARTx_Init_Advanced
easymx_v7_STM32F107VC__log_init2:
;__em_f107vc_log.c, 30 :: 		static T_mikrobus_ret _log_init2(uint32_t baud)
; baud start address is: 0 (R0)
0x1F60	0xB081    SUB	SP, SP, #4
0x1F62	0xF8CDE000  STR	LR, [SP, #0]
; baud end address is: 0 (R0)
; baud start address is: 0 (R0)
;__em_f107vc_log.c, 32 :: 		UART2_Init_Advanced(baud, _UART_8_BIT_DATA, _UART_NOPARITY, _UART_ONE_STOPBIT, &_GPIO_MODULE_USART2_PD56);
0x1F66	0x4909    LDR	R1, [PC, #36]
0x1F68	0xB402    PUSH	(R1)
0x1F6A	0xF2400300  MOVW	R3, #0
0x1F6E	0xF2400200  MOVW	R2, #0
0x1F72	0xF2400100  MOVW	R1, #0
; baud end address is: 0 (R0)
0x1F76	0xF7FFFCF3  BL	_UART2_Init_Advanced+0
0x1F7A	0xB001    ADD	SP, SP, #4
;__em_f107vc_log.c, 33 :: 		logger = UART2_Write;
0x1F7C	0x4A04    LDR	R2, [PC, #16]
0x1F7E	0x4905    LDR	R1, [PC, #20]
0x1F80	0x600A    STR	R2, [R1, #0]
;__em_f107vc_log.c, 34 :: 		return 0;
0x1F82	0x2000    MOVS	R0, #0
;__em_f107vc_log.c, 35 :: 		}
L_end__log_init2:
0x1F84	0xF8DDE000  LDR	LR, [SP, #0]
0x1F88	0xB001    ADD	SP, SP, #4
0x1F8A	0x4770    BX	LR
0x1F8C	0x2FA80000  	__GPIO_MODULE_USART2_PD56+0
0x1F90	0x19890000  	_UART2_Write+0
0x1F94	0x016C2000  	_logger+0
; end of easymx_v7_STM32F107VC__log_init2
_UART2_Init_Advanced:
;__Lib_UART_123_45.c, 378 :: 		
; stop_bits start address is: 12 (R3)
; parity start address is: 8 (R2)
; data_bits start address is: 4 (R1)
; baud_rate start address is: 0 (R0)
0x1960	0xB081    SUB	SP, SP, #4
0x1962	0xF8CDE000  STR	LR, [SP, #0]
; stop_bits end address is: 12 (R3)
; parity end address is: 8 (R2)
; data_bits end address is: 4 (R1)
; baud_rate end address is: 0 (R0)
; baud_rate start address is: 0 (R0)
; data_bits start address is: 4 (R1)
; parity start address is: 8 (R2)
; stop_bits start address is: 12 (R3)
; module start address is: 20 (R5)
0x1966	0x9D01    LDR	R5, [SP, #4]
;__Lib_UART_123_45.c, 380 :: 		
0x1968	0x462C    MOV	R4, R5
; module end address is: 20 (R5)
0x196A	0xB410    PUSH	(R4)
; parity end address is: 8 (R2)
0x196C	0xB408    PUSH	(R3)
0x196E	0xB293    UXTH	R3, R2
0x1970	0xB28A    UXTH	R2, R1
; data_bits end address is: 4 (R1)
0x1972	0x4601    MOV	R1, R0
; baud_rate end address is: 0 (R0)
0x1974	0x4803    LDR	R0, [PC, #12]
; stop_bits end address is: 12 (R3)
0x1976	0xF7FFF9C9  BL	__Lib_UART_123_45_UARTx_Init_Advanced+0
0x197A	0xB002    ADD	SP, SP, #8
;__Lib_UART_123_45.c, 381 :: 		
L_end_UART2_Init_Advanced:
0x197C	0xF8DDE000  LDR	LR, [SP, #0]
0x1980	0xB001    ADD	SP, SP, #4
0x1982	0x4770    BX	LR
0x1984	0x44004000  	USART2_SR+0
; end of _UART2_Init_Advanced
easymx_v7_STM32F107VC__log_initUartA:
;__em_f107vc_log.c, 37 :: 		static T_mikrobus_ret _log_initUartA(uint32_t baud)
; baud start address is: 0 (R0)
0x21E8	0xB081    SUB	SP, SP, #4
0x21EA	0xF8CDE000  STR	LR, [SP, #0]
; baud end address is: 0 (R0)
; baud start address is: 0 (R0)
;__em_f107vc_log.c, 39 :: 		UART1_Init_Advanced(baud, _UART_8_BIT_DATA, _UART_NOPARITY, _UART_ONE_STOPBIT, &_GPIO_MODULE_USART1_PA9_10);
0x21EE	0x4909    LDR	R1, [PC, #36]
0x21F0	0xB402    PUSH	(R1)
0x21F2	0xF2400300  MOVW	R3, #0
0x21F6	0xF2400200  MOVW	R2, #0
0x21FA	0xF2400100  MOVW	R1, #0
; baud end address is: 0 (R0)
0x21FE	0xF7FFFB9B  BL	_UART1_Init_Advanced+0
0x2202	0xB001    ADD	SP, SP, #4
;__em_f107vc_log.c, 40 :: 		logger = UART1_Write;
0x2204	0x4A04    LDR	R2, [PC, #16]
0x2206	0x4905    LDR	R1, [PC, #20]
0x2208	0x600A    STR	R2, [R1, #0]
;__em_f107vc_log.c, 41 :: 		return 0;
0x220A	0x2000    MOVS	R0, #0
;__em_f107vc_log.c, 42 :: 		}
L_end__log_initUartA:
0x220C	0xF8DDE000  LDR	LR, [SP, #0]
0x2210	0xB001    ADD	SP, SP, #4
0x2212	0x4770    BX	LR
0x2214	0x2ED00000  	__GPIO_MODULE_USART1_PA9_10+0
0x2218	0x19F90000  	_UART1_Write+0
0x221C	0x016C2000  	_logger+0
; end of easymx_v7_STM32F107VC__log_initUartA
_UART1_Init_Advanced:
;__Lib_UART_123_45.c, 372 :: 		
; stop_bits start address is: 12 (R3)
; parity start address is: 8 (R2)
; data_bits start address is: 4 (R1)
; baud_rate start address is: 0 (R0)
0x1938	0xB081    SUB	SP, SP, #4
0x193A	0xF8CDE000  STR	LR, [SP, #0]
; stop_bits end address is: 12 (R3)
; parity end address is: 8 (R2)
; data_bits end address is: 4 (R1)
; baud_rate end address is: 0 (R0)
; baud_rate start address is: 0 (R0)
; data_bits start address is: 4 (R1)
; parity start address is: 8 (R2)
; stop_bits start address is: 12 (R3)
; module start address is: 20 (R5)
0x193E	0x9D01    LDR	R5, [SP, #4]
;__Lib_UART_123_45.c, 374 :: 		
0x1940	0x462C    MOV	R4, R5
; module end address is: 20 (R5)
0x1942	0xB410    PUSH	(R4)
; parity end address is: 8 (R2)
0x1944	0xB408    PUSH	(R3)
0x1946	0xB293    UXTH	R3, R2
0x1948	0xB28A    UXTH	R2, R1
; data_bits end address is: 4 (R1)
0x194A	0x4601    MOV	R1, R0
; baud_rate end address is: 0 (R0)
0x194C	0x4803    LDR	R0, [PC, #12]
; stop_bits end address is: 12 (R3)
0x194E	0xF7FFF9DD  BL	__Lib_UART_123_45_UARTx_Init_Advanced+0
0x1952	0xB002    ADD	SP, SP, #8
;__Lib_UART_123_45.c, 375 :: 		
L_end_UART1_Init_Advanced:
0x1954	0xF8DDE000  LDR	LR, [SP, #0]
0x1958	0xB001    ADD	SP, SP, #4
0x195A	0x4770    BX	LR
0x195C	0x38004001  	USART1_SR+0
; end of _UART1_Init_Advanced
easymx_v7_STM32F107VC__log_initUartB:
;__em_f107vc_log.c, 44 :: 		static T_mikrobus_ret _log_initUartB(uint32_t baud)
; baud start address is: 0 (R0)
0x2190	0xB081    SUB	SP, SP, #4
0x2192	0xF8CDE000  STR	LR, [SP, #0]
; baud end address is: 0 (R0)
; baud start address is: 0 (R0)
;__em_f107vc_log.c, 46 :: 		UART2_Init_Advanced(baud, _UART_8_BIT_DATA, _UART_NOPARITY, _UART_ONE_STOPBIT, &_GPIO_MODULE_USART2_PD56);
0x2196	0x4909    LDR	R1, [PC, #36]
0x2198	0xB402    PUSH	(R1)
0x219A	0xF2400300  MOVW	R3, #0
0x219E	0xF2400200  MOVW	R2, #0
0x21A2	0xF2400100  MOVW	R1, #0
; baud end address is: 0 (R0)
0x21A6	0xF7FFFBDB  BL	_UART2_Init_Advanced+0
0x21AA	0xB001    ADD	SP, SP, #4
;__em_f107vc_log.c, 47 :: 		logger = UART2_Write;
0x21AC	0x4A04    LDR	R2, [PC, #16]
0x21AE	0x4905    LDR	R1, [PC, #20]
0x21B0	0x600A    STR	R2, [R1, #0]
;__em_f107vc_log.c, 48 :: 		return 0;
0x21B2	0x2000    MOVS	R0, #0
;__em_f107vc_log.c, 49 :: 		}
L_end__log_initUartB:
0x21B4	0xF8DDE000  LDR	LR, [SP, #0]
0x21B8	0xB001    ADD	SP, SP, #4
0x21BA	0x4770    BX	LR
0x21BC	0x2FA80000  	__GPIO_MODULE_USART2_PD56+0
0x21C0	0x19890000  	_UART2_Write+0
0x21C4	0x016C2000  	_logger+0
; end of easymx_v7_STM32F107VC__log_initUartB
_mikrobus_logWrite:
;easymx_v7_STM32F107VC.c, 319 :: 		T_mikrobus_ret mikrobus_logWrite(uint8_t* data_, T_log_format format)
; format start address is: 4 (R1)
; data_ start address is: 0 (R0)
0x26D4	0xB083    SUB	SP, SP, #12
0x26D6	0xF8CDE000  STR	LR, [SP, #0]
0x26DA	0x4602    MOV	R2, R0
; format end address is: 4 (R1)
; data_ end address is: 0 (R0)
; data_ start address is: 8 (R2)
; format start address is: 4 (R1)
;easymx_v7_STM32F107VC.c, 321 :: 		uint8_t *ptr = data_;
; ptr start address is: 0 (R0)
0x26DC	0x4610    MOV	R0, R2
; data_ end address is: 8 (R2)
;easymx_v7_STM32F107VC.c, 322 :: 		uint8_t row = 13;
0x26DE	0x220D    MOVS	R2, #13
0x26E0	0xF88D2008  STRB	R2, [SP, #8]
0x26E4	0x220A    MOVS	R2, #10
0x26E6	0xF88D2009  STRB	R2, [SP, #9]
;easymx_v7_STM32F107VC.c, 323 :: 		uint8_t line = 10;
;easymx_v7_STM32F107VC.c, 324 :: 		switch( format )
0x26EA	0xE01F    B	L_mikrobus_logWrite95
; format end address is: 4 (R1)
;easymx_v7_STM32F107VC.c, 326 :: 		case _LOG_BYTE :
L_mikrobus_logWrite97:
;easymx_v7_STM32F107VC.c, 327 :: 		_log_write( ptr );
; ptr end address is: 0 (R0)
0x26EC	0xF7FFFD6C  BL	easymx_v7_STM32F107VC__log_write+0
;easymx_v7_STM32F107VC.c, 328 :: 		break;
0x26F0	0xE023    B	L_mikrobus_logWrite96
;easymx_v7_STM32F107VC.c, 329 :: 		case _LOG_TEXT :
L_mikrobus_logWrite98:
;easymx_v7_STM32F107VC.c, 330 :: 		while( *ptr )
; ptr start address is: 0 (R0)
L_mikrobus_logWrite99:
; ptr end address is: 0 (R0)
; ptr start address is: 0 (R0)
0x26F2	0x7802    LDRB	R2, [R0, #0]
0x26F4	0xB12A    CBZ	R2, L_mikrobus_logWrite100
;easymx_v7_STM32F107VC.c, 332 :: 		_log_write( ptr );
0x26F6	0x9001    STR	R0, [SP, #4]
0x26F8	0xF7FFFD66  BL	easymx_v7_STM32F107VC__log_write+0
0x26FC	0x9801    LDR	R0, [SP, #4]
;easymx_v7_STM32F107VC.c, 333 :: 		ptr++;
0x26FE	0x1C40    ADDS	R0, R0, #1
;easymx_v7_STM32F107VC.c, 334 :: 		}
; ptr end address is: 0 (R0)
0x2700	0xE7F7    B	L_mikrobus_logWrite99
L_mikrobus_logWrite100:
;easymx_v7_STM32F107VC.c, 335 :: 		break;
0x2702	0xE01A    B	L_mikrobus_logWrite96
;easymx_v7_STM32F107VC.c, 336 :: 		case _LOG_LINE :
L_mikrobus_logWrite101:
;easymx_v7_STM32F107VC.c, 337 :: 		while( *ptr )
; ptr start address is: 0 (R0)
L_mikrobus_logWrite102:
; ptr end address is: 0 (R0)
; ptr start address is: 0 (R0)
0x2704	0x7802    LDRB	R2, [R0, #0]
0x2706	0xB12A    CBZ	R2, L_mikrobus_logWrite103
;easymx_v7_STM32F107VC.c, 339 :: 		_log_write( ptr );
0x2708	0x9001    STR	R0, [SP, #4]
0x270A	0xF7FFFD5D  BL	easymx_v7_STM32F107VC__log_write+0
0x270E	0x9801    LDR	R0, [SP, #4]
;easymx_v7_STM32F107VC.c, 340 :: 		ptr++;
0x2710	0x1C40    ADDS	R0, R0, #1
;easymx_v7_STM32F107VC.c, 341 :: 		}
; ptr end address is: 0 (R0)
0x2712	0xE7F7    B	L_mikrobus_logWrite102
L_mikrobus_logWrite103:
;easymx_v7_STM32F107VC.c, 342 :: 		_log_write( &row );
0x2714	0xAA02    ADD	R2, SP, #8
0x2716	0x4610    MOV	R0, R2
0x2718	0xF7FFFD56  BL	easymx_v7_STM32F107VC__log_write+0
;easymx_v7_STM32F107VC.c, 343 :: 		_log_write( &line );
0x271C	0xF10D0209  ADD	R2, SP, #9
0x2720	0x4610    MOV	R0, R2
0x2722	0xF7FFFD51  BL	easymx_v7_STM32F107VC__log_write+0
;easymx_v7_STM32F107VC.c, 344 :: 		break;
0x2726	0xE008    B	L_mikrobus_logWrite96
;easymx_v7_STM32F107VC.c, 345 :: 		default :
L_mikrobus_logWrite104:
;easymx_v7_STM32F107VC.c, 346 :: 		return _MIKROBUS_ERR_LOG;
0x2728	0x2006    MOVS	R0, #6
0x272A	0xE007    B	L_end_mikrobus_logWrite
;easymx_v7_STM32F107VC.c, 347 :: 		}
L_mikrobus_logWrite95:
; ptr start address is: 0 (R0)
; format start address is: 4 (R1)
0x272C	0x2900    CMP	R1, #0
0x272E	0xD0DD    BEQ	L_mikrobus_logWrite97
0x2730	0x2901    CMP	R1, #1
0x2732	0xD0DE    BEQ	L_mikrobus_logWrite98
0x2734	0x2902    CMP	R1, #2
0x2736	0xD0E5    BEQ	L_mikrobus_logWrite101
; format end address is: 4 (R1)
; ptr end address is: 0 (R0)
0x2738	0xE7F6    B	L_mikrobus_logWrite104
L_mikrobus_logWrite96:
;easymx_v7_STM32F107VC.c, 348 :: 		return 0;
0x273A	0x2000    MOVS	R0, #0
;easymx_v7_STM32F107VC.c, 349 :: 		}
L_end_mikrobus_logWrite:
0x273C	0xF8DDE000  LDR	LR, [SP, #0]
0x2740	0xB003    ADD	SP, SP, #12
0x2742	0x4770    BX	LR
; end of _mikrobus_logWrite
easymx_v7_STM32F107VC__log_write:
;__em_f107vc_log.c, 17 :: 		static T_mikrobus_ret _log_write(uint8_t *data_)
; data_ start address is: 0 (R0)
0x21C8	0xB081    SUB	SP, SP, #4
0x21CA	0xF8CDE000  STR	LR, [SP, #0]
; data_ end address is: 0 (R0)
; data_ start address is: 0 (R0)
;__em_f107vc_log.c, 19 :: 		logger( *data_ );
0x21CE	0x7801    LDRB	R1, [R0, #0]
; data_ end address is: 0 (R0)
0x21D0	0xB2CC    UXTB	R4, R1
0x21D2	0xB2A0    UXTH	R0, R4
0x21D4	0x4C03    LDR	R4, [PC, #12]
0x21D6	0x6824    LDR	R4, [R4, #0]
0x21D8	0x47A0    BLX	R4
;__em_f107vc_log.c, 20 :: 		return 0;
0x21DA	0x2000    MOVS	R0, #0
;__em_f107vc_log.c, 21 :: 		}
L_end__log_write:
0x21DC	0xF8DDE000  LDR	LR, [SP, #0]
0x21E0	0xB001    ADD	SP, SP, #4
0x21E2	0x4770    BX	LR
0x21E4	0x016C2000  	_logger+0
; end of easymx_v7_STM32F107VC__log_write
_UART1_Write:
;__Lib_UART_123_45.c, 41 :: 		
; _data start address is: 0 (R0)
0x19F8	0xB081    SUB	SP, SP, #4
0x19FA	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45.c, 42 :: 		
0x19FE	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x1A00	0x4803    LDR	R0, [PC, #12]
0x1A02	0xF7FFFCA7  BL	__Lib_UART_123_45_UARTx_Write+0
;__Lib_UART_123_45.c, 43 :: 		
L_end_UART1_Write:
0x1A06	0xF8DDE000  LDR	LR, [SP, #0]
0x1A0A	0xB001    ADD	SP, SP, #4
0x1A0C	0x4770    BX	LR
0x1A0E	0xBF00    NOP
0x1A10	0x38004001  	USART1_SR+0
; end of _UART1_Write
__Lib_UART_123_45_UARTx_Write:
;__Lib_UART_123_45.c, 35 :: 		
; _data start address is: 4 (R1)
; UART_Base start address is: 0 (R0)
0x1354	0xB081    SUB	SP, SP, #4
; _data end address is: 4 (R1)
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
; _data start address is: 4 (R1)
0x1356	0xF8AD1000  STRH	R1, [SP, #0]
; UART_Base end address is: 0 (R0)
; _data end address is: 4 (R1)
0x135A	0x4601    MOV	R1, R0
0x135C	0xF8BD0000  LDRH	R0, [SP, #0]
;__Lib_UART_123_45.c, 36 :: 		
L___Lib_UART_123_45_UARTx_Write0:
; _data start address is: 0 (R0)
; UART_Base start address is: 4 (R1)
0x1360	0x680B    LDR	R3, [R1, #0]
0x1362	0xF3C312C0  UBFX	R2, R3, #7, #1
0x1366	0xB902    CBNZ	R2, L___Lib_UART_123_45_UARTx_Write1
;__Lib_UART_123_45.c, 37 :: 		
0x1368	0xE7FA    B	L___Lib_UART_123_45_UARTx_Write0
L___Lib_UART_123_45_UARTx_Write1:
;__Lib_UART_123_45.c, 38 :: 		
0x136A	0x1D0A    ADDS	R2, R1, #4
; UART_Base end address is: 4 (R1)
0x136C	0x6010    STR	R0, [R2, #0]
; _data end address is: 0 (R0)
;__Lib_UART_123_45.c, 39 :: 		
L_end_UARTx_Write:
0x136E	0xB001    ADD	SP, SP, #4
0x1370	0x4770    BX	LR
; end of __Lib_UART_123_45_UARTx_Write
_UART2_Write:
;__Lib_UART_123_45.c, 45 :: 		
; _data start address is: 0 (R0)
0x1988	0xB081    SUB	SP, SP, #4
0x198A	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45.c, 46 :: 		
0x198E	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x1990	0x4803    LDR	R0, [PC, #12]
0x1992	0xF7FFFCDF  BL	__Lib_UART_123_45_UARTx_Write+0
;__Lib_UART_123_45.c, 47 :: 		
L_end_UART2_Write:
0x1996	0xF8DDE000  LDR	LR, [SP, #0]
0x199A	0xB001    ADD	SP, SP, #4
0x199C	0x4770    BX	LR
0x199E	0xBF00    NOP
0x19A0	0x44004000  	USART2_SR+0
; end of _UART2_Write
_UART3_Write:
;__Lib_UART_123_45.c, 49 :: 		
; _data start address is: 0 (R0)
0x19DC	0xB081    SUB	SP, SP, #4
0x19DE	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45.c, 50 :: 		
0x19E2	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x19E4	0x4803    LDR	R0, [PC, #12]
0x19E6	0xF7FFFCB5  BL	__Lib_UART_123_45_UARTx_Write+0
;__Lib_UART_123_45.c, 51 :: 		
L_end_UART3_Write:
0x19EA	0xF8DDE000  LDR	LR, [SP, #0]
0x19EE	0xB001    ADD	SP, SP, #4
0x19F0	0x4770    BX	LR
0x19F2	0xBF00    NOP
0x19F4	0x48004000  	USART3_SR+0
; end of _UART3_Write
_UART4_Write:
;__Lib_UART_123_45.c, 53 :: 		
; _data start address is: 0 (R0)
0x19C0	0xB081    SUB	SP, SP, #4
0x19C2	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45.c, 54 :: 		
0x19C6	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x19C8	0x4803    LDR	R0, [PC, #12]
0x19CA	0xF7FFFCC3  BL	__Lib_UART_123_45_UARTx_Write+0
;__Lib_UART_123_45.c, 55 :: 		
L_end_UART4_Write:
0x19CE	0xF8DDE000  LDR	LR, [SP, #0]
0x19D2	0xB001    ADD	SP, SP, #4
0x19D4	0x4770    BX	LR
0x19D6	0xBF00    NOP
0x19D8	0x4C004000  	UART4_SR+0
; end of _UART4_Write
_UART5_Write:
;__Lib_UART_123_45.c, 57 :: 		
; _data start address is: 0 (R0)
0x19A4	0xB081    SUB	SP, SP, #4
0x19A6	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45.c, 58 :: 		
0x19AA	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x19AC	0x4803    LDR	R0, [PC, #12]
0x19AE	0xF7FFFCD1  BL	__Lib_UART_123_45_UARTx_Write+0
;__Lib_UART_123_45.c, 59 :: 		
L_end_UART5_Write:
0x19B2	0xF8DDE000  LDR	LR, [SP, #0]
0x19B6	0xB001    ADD	SP, SP, #4
0x19B8	0x4770    BX	LR
0x19BA	0xBF00    NOP
0x19BC	0x50004000  	UART5_SR+0
; end of _UART5_Write
_applicationInit:
;Click_Color8_STM.c, 48 :: 		void applicationInit()
0x299C	0xB081    SUB	SP, SP, #4
0x299E	0xF8CDE000  STR	LR, [SP, #0]
;Click_Color8_STM.c, 50 :: 		color8_i2cDriverInit( (T_COLOR8_P)&_MIKROBUS1_GPIO, (T_COLOR8_P)&_MIKROBUS1_I2C, _COLOR8_DEF_SLAVE_ADDRESS_1 );
0x29A2	0x2239    MOVS	R2, __COLOR8_DEF_SLAVE_ADDRESS_1
0x29A4	0x4910    LDR	R1, [PC, #64]
0x29A6	0x4811    LDR	R0, [PC, #68]
0x29A8	0xF7FFFF5E  BL	_color8_i2cDriverInit+0
;Click_Color8_STM.c, 51 :: 		color8_writeByte(_COLOR8_REG_SYSTEM_CONTROL, _COLOR8_SS_SW_RESET_IS_DONE |  _COLOR8_SS_INT_PIN_IS_ACTIVE );
0x29AC	0x2080    MOVS	R0, __COLOR8_SS_SW_RESET_IS_DONE
0x29AE	0xF0400040  ORR	R0, R0, __COLOR8_SS_INT_PIN_IS_ACTIVE
0x29B2	0xB2C1    UXTB	R1, R0
0x29B4	0x2040    MOVS	R0, __COLOR8_REG_SYSTEM_CONTROL
0x29B6	0xF7FFFE75  BL	_color8_writeByte+0
;Click_Color8_STM.c, 53 :: 		_COLOR8_MC1_RGB_DATA_GAIN_X1 |
0x29BA	0x2020    MOVS	R0, __COLOR8_MC1_IR_DATA_GAIN_X1
0x29BC	0xF0400008  ORR	R0, R0, __COLOR8_MC1_RGB_DATA_GAIN_X1
0x29C0	0xB2C0    UXTB	R0, R0
;Click_Color8_STM.c, 54 :: 		_COLOR8_MC1_MEASURE_MODE_35ms );
0x29C2	0xF0400005  ORR	R0, R0, __COLOR8_MC1_MEASURE_MODE_35ms
0x29C6	0xB2C1    UXTB	R1, R0
;Click_Color8_STM.c, 52 :: 		color8_writeByte(_COLOR8_REG_MODE_CONTROL_1, _COLOR8_MC1_IR_DATA_GAIN_X1 |
0x29C8	0x2041    MOVS	R0, __COLOR8_REG_MODE_CONTROL_1
;Click_Color8_STM.c, 54 :: 		_COLOR8_MC1_MEASURE_MODE_35ms );
0x29CA	0xF7FFFE6B  BL	_color8_writeByte+0
;Click_Color8_STM.c, 56 :: 		color8_writeByte(_COLOR8_REG_MODE_CONTROL_2, _COLOR8_MC2_MEASUREMENT_IS_ACTIVE );
0x29CE	0x2110    MOVS	R1, __COLOR8_MC2_MEASUREMENT_IS_ACTIVE
0x29D0	0x2042    MOVS	R0, __COLOR8_REG_MODE_CONTROL_2
0x29D2	0xF7FFFE67  BL	_color8_writeByte+0
;Click_Color8_STM.c, 57 :: 		mikrobus_logWrite(" --- Start measurement ---", _LOG_LINE);
0x29D6	0x4806    LDR	R0, [PC, #24]
0x29D8	0x2102    MOVS	R1, #2
0x29DA	0xF7FFFE7B  BL	_mikrobus_logWrite+0
;Click_Color8_STM.c, 58 :: 		}
L_end_applicationInit:
0x29DE	0xF8DDE000  LDR	LR, [SP, #0]
0x29E2	0xB001    ADD	SP, SP, #4
0x29E4	0x4770    BX	LR
0x29E6	0xBF00    NOP
0x29E8	0x30900000  	__MIKROBUS1_I2C+0
0x29EC	0x30140000  	__MIKROBUS1_GPIO+0
0x29F0	0x00162000  	?lstr2_Click_Color8_STM+0
; end of _applicationInit
_color8_i2cDriverInit:
;__color8_driver.c, 197 :: 		void color8_i2cDriverInit(T_COLOR8_P gpioObj, T_COLOR8_P i2cObj, uint8_t slave)
; slave start address is: 8 (R2)
; i2cObj start address is: 4 (R1)
; gpioObj start address is: 0 (R0)
0x2868	0xB081    SUB	SP, SP, #4
0x286A	0xF8CDE000  STR	LR, [SP, #0]
0x286E	0x4604    MOV	R4, R0
; slave end address is: 8 (R2)
; i2cObj end address is: 4 (R1)
; gpioObj end address is: 0 (R0)
; gpioObj start address is: 16 (R4)
; i2cObj start address is: 4 (R1)
; slave start address is: 8 (R2)
;__color8_driver.c, 199 :: 		_slaveAddress = slave;
0x2870	0x4B05    LDR	R3, [PC, #20]
0x2872	0x701A    STRB	R2, [R3, #0]
; slave end address is: 8 (R2)
;__color8_driver.c, 200 :: 		hal_i2cMap( (T_HAL_P)i2cObj );
0x2874	0x4608    MOV	R0, R1
; i2cObj end address is: 4 (R1)
0x2876	0xF7FFFA53  BL	__color8_driver_hal_i2cMap+0
;__color8_driver.c, 201 :: 		hal_gpioMap( (T_HAL_P)gpioObj );
0x287A	0x4620    MOV	R0, R4
; gpioObj end address is: 16 (R4)
0x287C	0xF7FFFA46  BL	__color8_driver_hal_gpioMap+0
;__color8_driver.c, 202 :: 		}
L_end_color8_i2cDriverInit:
0x2880	0xF8DDE000  LDR	LR, [SP, #0]
0x2884	0xB001    ADD	SP, SP, #4
0x2886	0x4770    BX	LR
0x2888	0x01662000  	__color8_driver__slaveAddress+0
; end of _color8_i2cDriverInit
__color8_driver_hal_i2cMap:
;__hal_stm32.c, 82 :: 		static void hal_i2cMap(T_HAL_P i2cObj)
; i2cObj start address is: 0 (R0)
; i2cObj end address is: 0 (R0)
; i2cObj start address is: 0 (R0)
;__hal_stm32.c, 86 :: 		fp_i2cStart    = tmp->i2cStart;
0x1D20	0x6802    LDR	R2, [R0, #0]
0x1D22	0x4906    LDR	R1, [PC, #24]
0x1D24	0x600A    STR	R2, [R1, #0]
;__hal_stm32.c, 87 :: 		fp_i2cWrite    = tmp->i2cWrite;
0x1D26	0x1D01    ADDS	R1, R0, #4
0x1D28	0x680A    LDR	R2, [R1, #0]
0x1D2A	0x4905    LDR	R1, [PC, #20]
0x1D2C	0x600A    STR	R2, [R1, #0]
;__hal_stm32.c, 88 :: 		fp_i2cRead     = tmp->i2cRead;
0x1D2E	0xF2000108  ADDW	R1, R0, #8
; i2cObj end address is: 0 (R0)
0x1D32	0x680A    LDR	R2, [R1, #0]
0x1D34	0x4903    LDR	R1, [PC, #12]
0x1D36	0x600A    STR	R2, [R1, #0]
;__hal_stm32.c, 89 :: 		}
L_end_hal_i2cMap:
0x1D38	0x4770    BX	LR
0x1D3A	0xBF00    NOP
0x1D3C	0x01782000  	__color8_driver_fp_i2cStart+0
0x1D40	0x01742000  	__color8_driver_fp_i2cWrite+0
0x1D44	0x01702000  	__color8_driver_fp_i2cRead+0
; end of __color8_driver_hal_i2cMap
__color8_driver_hal_gpioMap:
;__color8_hal.c, 321 :: 		static void hal_gpioMap(T_HAL_P gpioObj)
; gpioObj start address is: 0 (R0)
; gpioObj end address is: 0 (R0)
; gpioObj start address is: 0 (R0)
;__color8_hal.c, 347 :: 		hal_gpio_intGet = tmp->gpioGet[ __INT_PIN_INPUT__ ];
0x1D0C	0xF2000130  ADDW	R1, R0, #48
; gpioObj end address is: 0 (R0)
0x1D10	0x311C    ADDS	R1, #28
0x1D12	0x680A    LDR	R2, [R1, #0]
0x1D14	0x4901    LDR	R1, [PC, #4]
0x1D16	0x600A    STR	R2, [R1, #0]
;__color8_hal.c, 397 :: 		}
L_end_hal_gpioMap:
0x1D18	0x4770    BX	LR
0x1D1A	0xBF00    NOP
0x1D1C	0x017C2000  	__color8_driver_hal_gpio_intGet+0
; end of __color8_driver_hal_gpioMap
_color8_writeByte:
;__color8_driver.c, 217 :: 		void color8_writeByte(uint8_t reg, uint8_t _data)
; _data start address is: 4 (R1)
; reg start address is: 0 (R0)
0x26A4	0xB082    SUB	SP, SP, #8
0x26A6	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 4 (R1)
; reg end address is: 0 (R0)
; reg start address is: 0 (R0)
; _data start address is: 4 (R1)
;__color8_driver.c, 221 :: 		writeReg[ 0 ] = reg;
0x26AA	0xAA01    ADD	R2, SP, #4
0x26AC	0x7010    STRB	R0, [R2, #0]
; reg end address is: 0 (R0)
;__color8_driver.c, 222 :: 		writeReg[ 1 ] = _data;
0x26AE	0x1C52    ADDS	R2, R2, #1
0x26B0	0x7011    STRB	R1, [R2, #0]
; _data end address is: 4 (R1)
;__color8_driver.c, 224 :: 		hal_i2cStart();
0x26B2	0xF7FFF9CF  BL	__color8_driver_hal_i2cStart+0
;__color8_driver.c, 225 :: 		hal_i2cWrite(_slaveAddress, writeReg, 2, END_MODE_STOP);
0x26B6	0xAB01    ADD	R3, SP, #4
0x26B8	0x4A05    LDR	R2, [PC, #20]
0x26BA	0x7812    LDRB	R2, [R2, #0]
0x26BC	0x4619    MOV	R1, R3
0x26BE	0x2301    MOVS	R3, #1
0x26C0	0xB2D0    UXTB	R0, R2
0x26C2	0x2202    MOVS	R2, #2
0x26C4	0xF7FFF9B2  BL	__color8_driver_hal_i2cWrite+0
;__color8_driver.c, 226 :: 		}
L_end_color8_writeByte:
0x26C8	0xF8DDE000  LDR	LR, [SP, #0]
0x26CC	0xB002    ADD	SP, SP, #8
0x26CE	0x4770    BX	LR
0x26D0	0x01662000  	__color8_driver__slaveAddress+0
; end of _color8_writeByte
__color8_driver_hal_i2cStart:
;__hal_stm32.c, 91 :: 		static int hal_i2cStart()
0x1A54	0xB082    SUB	SP, SP, #8
0x1A56	0xF8CDE000  STR	LR, [SP, #0]
;__hal_stm32.c, 93 :: 		int res = 0;
0x1A5A	0xF2400400  MOVW	R4, #0
0x1A5E	0xF8AD4004  STRH	R4, [SP, #4]
;__hal_stm32.c, 94 :: 		res |= fp_i2cStart();
0x1A62	0x4C06    LDR	R4, [PC, #24]
0x1A64	0x6824    LDR	R4, [R4, #0]
0x1A66	0x47A0    BLX	R4
0x1A68	0xF9BD1004  LDRSH	R1, [SP, #4]
0x1A6C	0xEA410000  ORR	R0, R1, R0, LSL #0
;__hal_stm32.c, 95 :: 		return res;
0x1A70	0xB200    SXTH	R0, R0
;__hal_stm32.c, 96 :: 		}
L_end_hal_i2cStart:
0x1A72	0xF8DDE000  LDR	LR, [SP, #0]
0x1A76	0xB002    ADD	SP, SP, #8
0x1A78	0x4770    BX	LR
0x1A7A	0xBF00    NOP
0x1A7C	0x01782000  	__color8_driver_fp_i2cStart+0
; end of __color8_driver_hal_i2cStart
_I2C1_Start:
;__Lib_I2C_12.c, 536 :: 		
0x1920	0xB081    SUB	SP, SP, #4
0x1922	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_I2C_12.c, 537 :: 		
0x1926	0x4803    LDR	R0, [PC, #12]
0x1928	0xF7FFF98A  BL	_I2Cx_Start+0
;__Lib_I2C_12.c, 538 :: 		
L_end_I2C1_Start:
0x192C	0xF8DDE000  LDR	LR, [SP, #0]
0x1930	0xB001    ADD	SP, SP, #4
0x1932	0x4770    BX	LR
0x1934	0x54004000  	I2C1_CR1+0
; end of _I2C1_Start
_I2Cx_Start:
;__Lib_I2C_12.c, 204 :: 		
; I2C_BASE start address is: 0 (R0)
0x0C40	0xB083    SUB	SP, SP, #12
0x0C42	0xF8CDE000  STR	LR, [SP, #0]
0x0C46	0x4603    MOV	R3, R0
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 12 (R3)
;__Lib_I2C_12.c, 205 :: 		
; timeout start address is: 0 (R0)
0x0C48	0xF04F0000  MOV	R0, #0
;__Lib_I2C_12.c, 208 :: 		
0x0C4C	0x4926    LDR	R1, [PC, #152]
0x0C4E	0x428B    CMP	R3, R1
0x0C50	0xD106    BNE	L_I2Cx_Start7
; timeout end address is: 0 (R0)
;__Lib_I2C_12.c, 209 :: 		
0x0C52	0x4926    LDR	R1, [PC, #152]
; timeout start address is: 16 (R4)
0x0C54	0x680C    LDR	R4, [R1, #0]
;__Lib_I2C_12.c, 210 :: 		
0x0C56	0x4926    LDR	R1, [PC, #152]
0x0C58	0x680A    LDR	R2, [R1, #0]
0x0C5A	0x4926    LDR	R1, [PC, #152]
0x0C5C	0x600A    STR	R2, [R1, #0]
;__Lib_I2C_12.c, 211 :: 		
; timeout end address is: 16 (R4)
0x0C5E	0xE00B    B	L_I2Cx_Start8
L_I2Cx_Start7:
;__Lib_I2C_12.c, 212 :: 		
; timeout start address is: 0 (R0)
0x0C60	0x4925    LDR	R1, [PC, #148]
0x0C62	0x428B    CMP	R3, R1
0x0C64	0xD107    BNE	L__I2Cx_Start123
; timeout end address is: 0 (R0)
;__Lib_I2C_12.c, 213 :: 		
0x0C66	0x4925    LDR	R1, [PC, #148]
; timeout start address is: 0 (R0)
0x0C68	0x6808    LDR	R0, [R1, #0]
;__Lib_I2C_12.c, 214 :: 		
0x0C6A	0x4925    LDR	R1, [PC, #148]
0x0C6C	0x680A    LDR	R2, [R1, #0]
0x0C6E	0x4921    LDR	R1, [PC, #132]
0x0C70	0x600A    STR	R2, [R1, #0]
; timeout end address is: 0 (R0)
0x0C72	0x4604    MOV	R4, R0
;__Lib_I2C_12.c, 215 :: 		
0x0C74	0xE000    B	L_I2Cx_Start9
L__I2Cx_Start123:
;__Lib_I2C_12.c, 212 :: 		
0x0C76	0x4604    MOV	R4, R0
;__Lib_I2C_12.c, 215 :: 		
L_I2Cx_Start9:
; timeout start address is: 16 (R4)
; timeout end address is: 16 (R4)
L_I2Cx_Start8:
;__Lib_I2C_12.c, 217 :: 		
; timeout start address is: 16 (R4)
0x0C78	0x4922    LDR	R1, [PC, #136]
0x0C7A	0x600C    STR	R4, [R1, #0]
;__Lib_I2C_12.c, 219 :: 		
0x0C7C	0x9401    STR	R4, [SP, #4]
0x0C7E	0x9302    STR	R3, [SP, #8]
0x0C80	0x4618    MOV	R0, R3
0x0C82	0xF7FFFD77  BL	__Lib_I2C_12_I2Cx_Wait_For_Idle+0
0x0C86	0x9B02    LDR	R3, [SP, #8]
0x0C88	0x9C01    LDR	R4, [SP, #4]
0x0C8A	0xB910    CBNZ	R0, L_I2Cx_Start10
; I2C_BASE end address is: 12 (R3)
; timeout end address is: 16 (R4)
;__Lib_I2C_12.c, 220 :: 		
0x0C8C	0xF64F70FF  MOVW	R0, #65535
0x0C90	0xE025    B	L_end_I2Cx_Start
;__Lib_I2C_12.c, 221 :: 		
L_I2Cx_Start10:
;__Lib_I2C_12.c, 224 :: 		
; timeout start address is: 16 (R4)
; I2C_BASE start address is: 12 (R3)
0x0C92	0x2201    MOVS	R2, #1
0x0C94	0x6819    LDR	R1, [R3, #0]
0x0C96	0xF3622108  BFI	R1, R2, #8, #1
0x0C9A	0x6019    STR	R1, [R3, #0]
;__Lib_I2C_12.c, 226 :: 		
0x0C9C	0xF2030114  ADDW	R1, R3, #20
0x0CA0	0x680A    LDR	R2, [R1, #0]
0x0CA2	0xF3C22140  UBFX	R1, R2, #9, #1
0x0CA6	0xB111    CBZ	R1, L_I2Cx_Start11
; I2C_BASE end address is: 12 (R3)
; timeout end address is: 16 (R4)
;__Lib_I2C_12.c, 227 :: 		
0x0CA8	0xF64F70FF  MOVW	R0, #65535
0x0CAC	0xE017    B	L_end_I2Cx_Start
;__Lib_I2C_12.c, 228 :: 		
L_I2Cx_Start11:
;__Lib_I2C_12.c, 229 :: 		
; timeout start address is: 16 (R4)
; I2C_BASE start address is: 12 (R3)
0x0CAE	0x4625    MOV	R5, R4
; timeout end address is: 16 (R4)
0x0CB0	0x461C    MOV	R4, R3
L_I2Cx_Start12:
; I2C_BASE end address is: 12 (R3)
; timeout start address is: 20 (R5)
; I2C_BASE start address is: 16 (R4)
0x0CB2	0x4915    LDR	R1, [PC, #84]
0x0CB4	0x4620    MOV	R0, R4
0x0CB6	0xF7FFFD4B  BL	_ChekXForEvent+0
0x0CBA	0xB978    CBNZ	R0, L_I2Cx_Start13
;__Lib_I2C_12.c, 230 :: 		
0x0CBC	0x4911    LDR	R1, [PC, #68]
0x0CBE	0x6809    LDR	R1, [R1, #0]
0x0CC0	0xB159    CBZ	R1, L__I2Cx_Start124
;__Lib_I2C_12.c, 231 :: 		
0x0CC2	0xB935    CBNZ	R5, L_I2Cx_Start15
; I2C_BASE end address is: 16 (R4)
; timeout end address is: 20 (R5)
;__Lib_I2C_12.c, 232 :: 		
0x0CC4	0x2006    MOVS	R0, #6
0x0CC6	0x4C0B    LDR	R4, [PC, #44]
0x0CC8	0x6824    LDR	R4, [R4, #0]
0x0CCA	0x47A0    BLX	R4
;__Lib_I2C_12.c, 233 :: 		
0x0CCC	0xF64F70FF  MOVW	R0, #65535
0x0CD0	0xE005    B	L_end_I2Cx_Start
;__Lib_I2C_12.c, 234 :: 		
L_I2Cx_Start15:
;__Lib_I2C_12.c, 235 :: 		
; timeout start address is: 20 (R5)
; I2C_BASE start address is: 16 (R4)
0x0CD2	0x1E69    SUBS	R1, R5, #1
; timeout end address is: 20 (R5)
; timeout start address is: 0 (R0)
0x0CD4	0x4608    MOV	R0, R1
; timeout end address is: 0 (R0)
0x0CD6	0x4605    MOV	R5, R0
;__Lib_I2C_12.c, 236 :: 		
0x0CD8	0xE7FF    B	L_I2Cx_Start14
L__I2Cx_Start124:
;__Lib_I2C_12.c, 230 :: 		
;__Lib_I2C_12.c, 236 :: 		
L_I2Cx_Start14:
;__Lib_I2C_12.c, 237 :: 		
; timeout start address is: 20 (R5)
; I2C_BASE end address is: 16 (R4)
; timeout end address is: 20 (R5)
0x0CDA	0xE7EA    B	L_I2Cx_Start12
L_I2Cx_Start13:
;__Lib_I2C_12.c, 238 :: 		
0x0CDC	0x2000    MOVS	R0, #0
;__Lib_I2C_12.c, 239 :: 		
L_end_I2Cx_Start:
0x0CDE	0xF8DDE000  LDR	LR, [SP, #0]
0x0CE2	0xB003    ADD	SP, SP, #12
0x0CE4	0x4770    BX	LR
0x0CE6	0xBF00    NOP
0x0CE8	0x54004000  	I2C1_CR1+0
0x0CEC	0x01202000  	__Lib_I2C_12__I2C1_TIMEOUT+0
0x0CF0	0x01882000  	_I2C1_Timeout_Ptr+0
0x0CF4	0x01842000  	_I2Cx_Timeout_Ptr+0
0x0CF8	0x58004000  	I2C2_CR1+0
0x0CFC	0x01242000  	__Lib_I2C_12__I2C2_TIMEOUT+0
0x0D00	0x018C2000  	_I2C2_Timeout_Ptr+0
0x0D04	0x01282000  	__Lib_I2C_12__I2Cx_TIMEOUT+0
0x0D08	0x00010003  	#196609
; end of _I2Cx_Start
easymx_v7_STM32F107VC__setAN_1:
;__em_f107vc_gpio.c, 43 :: 		static void _setAN_1  (uint8_t value) 	{ GPIOA_ODR.B4  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0288	0x4901    LDR	R1, [PC, #4]
0x028A	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setAN_1:
0x028C	0x4770    BX	LR
0x028E	0xBF00    NOP
0x0290	0x01904221  	GPIOA_ODR+0
; end of easymx_v7_STM32F107VC__setAN_1
easymx_v7_STM32F107VC__setRST_1:
;__em_f107vc_gpio.c, 44 :: 		static void _setRST_1 (uint8_t value) 	{ GPIOC_ODR.B2  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x027C	0x4901    LDR	R1, [PC, #4]
0x027E	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setRST_1:
0x0280	0x4770    BX	LR
0x0282	0xBF00    NOP
0x0284	0x01884222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setRST_1
easymx_v7_STM32F107VC__setCS_1:
;__em_f107vc_gpio.c, 45 :: 		static void _setCS_1  (uint8_t value) 	{ GPIOD_ODR.B13 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0270	0x4901    LDR	R1, [PC, #4]
0x0272	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setCS_1:
0x0274	0x4770    BX	LR
0x0276	0xBF00    NOP
0x0278	0x81B44222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setCS_1
easymx_v7_STM32F107VC__setSCK_1:
;__em_f107vc_gpio.c, 46 :: 		static void _setSCK_1 (uint8_t value) 	{ GPIOC_ODR.B10 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0294	0x4901    LDR	R1, [PC, #4]
0x0296	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSCK_1:
0x0298	0x4770    BX	LR
0x029A	0xBF00    NOP
0x029C	0x01A84222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setSCK_1
easymx_v7_STM32F107VC__setMISO_1:
;__em_f107vc_gpio.c, 47 :: 		static void _setMISO_1(uint8_t value) 	{ GPIOC_ODR.B11 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x02B8	0x4901    LDR	R1, [PC, #4]
0x02BA	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setMISO_1:
0x02BC	0x4770    BX	LR
0x02BE	0xBF00    NOP
0x02C0	0x01AC4222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setMISO_1
easymx_v7_STM32F107VC__setMOSI_1:
;__em_f107vc_gpio.c, 48 :: 		static void _setMOSI_1(uint8_t value) 	{ GPIOC_ODR.B12 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x02AC	0x4901    LDR	R1, [PC, #4]
0x02AE	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setMOSI_1:
0x02B0	0x4770    BX	LR
0x02B2	0xBF00    NOP
0x02B4	0x01B04222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setMOSI_1
easymx_v7_STM32F107VC__setPWM_1:
;__em_f107vc_gpio.c, 49 :: 		static void _setPWM_1 (uint8_t value) 	{ GPIOA_ODR.B0  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x02A0	0x4901    LDR	R1, [PC, #4]
0x02A2	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setPWM_1:
0x02A4	0x4770    BX	LR
0x02A6	0xBF00    NOP
0x02A8	0x01804221  	GPIOA_ODR+0
; end of easymx_v7_STM32F107VC__setPWM_1
easymx_v7_STM32F107VC__setINT_1:
;__em_f107vc_gpio.c, 50 :: 		static void _setINT_1 (uint8_t value) 	{ GPIOD_ODR.B10 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0264	0x4901    LDR	R1, [PC, #4]
0x0266	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setINT_1:
0x0268	0x4770    BX	LR
0x026A	0xBF00    NOP
0x026C	0x81A84222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setINT_1
easymx_v7_STM32F107VC__setRX_1:
;__em_f107vc_gpio.c, 51 :: 		static void _setRX_1  (uint8_t value) 	{ GPIOD_ODR.B9  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0234	0x4901    LDR	R1, [PC, #4]
0x0236	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setRX_1:
0x0238	0x4770    BX	LR
0x023A	0xBF00    NOP
0x023C	0x81A44222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setRX_1
easymx_v7_STM32F107VC__setTX_1:
;__em_f107vc_gpio.c, 52 :: 		static void _setTX_1  (uint8_t value) 	{ GPIOD_ODR.B8  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0228	0x4901    LDR	R1, [PC, #4]
0x022A	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setTX_1:
0x022C	0x4770    BX	LR
0x022E	0xBF00    NOP
0x0230	0x81A04222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setTX_1
easymx_v7_STM32F107VC__setSCL_1:
;__em_f107vc_gpio.c, 53 :: 		static void _setSCL_1 (uint8_t value) 	{ GPIOB_ODR.B6  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0240	0x4901    LDR	R1, [PC, #4]
0x0242	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSCL_1:
0x0244	0x4770    BX	LR
0x0246	0xBF00    NOP
0x0248	0x81984221  	GPIOB_ODR+0
; end of easymx_v7_STM32F107VC__setSCL_1
easymx_v7_STM32F107VC__setSDA_1:
;__em_f107vc_gpio.c, 54 :: 		static void _setSDA_1 (uint8_t value) 	{ GPIOB_ODR.B7  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0258	0x4901    LDR	R1, [PC, #4]
0x025A	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSDA_1:
0x025C	0x4770    BX	LR
0x025E	0xBF00    NOP
0x0260	0x819C4221  	GPIOB_ODR+0
; end of easymx_v7_STM32F107VC__setSDA_1
easymx_v7_STM32F107VC__setAN_2:
;__em_f107vc_gpio.c, 68 :: 		static void _setAN_2  (uint8_t value)   { GPIOA_ODR.B5  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x024C	0x4901    LDR	R1, [PC, #4]
0x024E	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setAN_2:
0x0250	0x4770    BX	LR
0x0252	0xBF00    NOP
0x0254	0x01944221  	GPIOA_ODR+0
; end of easymx_v7_STM32F107VC__setAN_2
easymx_v7_STM32F107VC__setRST_2:
;__em_f107vc_gpio.c, 69 :: 		static void _setRST_2 (uint8_t value)   { GPIOC_ODR.B3  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x081C	0x4901    LDR	R1, [PC, #4]
0x081E	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setRST_2:
0x0820	0x4770    BX	LR
0x0822	0xBF00    NOP
0x0824	0x018C4222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setRST_2
easymx_v7_STM32F107VC__setCS_2:
;__em_f107vc_gpio.c, 70 :: 		static void _setCS_2  (uint8_t value)   { GPIOD_ODR.B14 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0810	0x4901    LDR	R1, [PC, #4]
0x0812	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setCS_2:
0x0814	0x4770    BX	LR
0x0816	0xBF00    NOP
0x0818	0x81B84222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setCS_2
easymx_v7_STM32F107VC__setSCK_2:
;__em_f107vc_gpio.c, 71 :: 		static void _setSCK_2 (uint8_t value)   { GPIOC_ODR.B10 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0804	0x4901    LDR	R1, [PC, #4]
0x0806	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSCK_2:
0x0808	0x4770    BX	LR
0x080A	0xBF00    NOP
0x080C	0x01A84222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setSCK_2
easymx_v7_STM32F107VC__setMISO_2:
;__em_f107vc_gpio.c, 72 :: 		static void _setMISO_2(uint8_t value)   { GPIOC_ODR.B11 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0828	0x4901    LDR	R1, [PC, #4]
0x082A	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setMISO_2:
0x082C	0x4770    BX	LR
0x082E	0xBF00    NOP
0x0830	0x01AC4222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setMISO_2
easymx_v7_STM32F107VC__setMOSI_2:
;__em_f107vc_gpio.c, 73 :: 		static void _setMOSI_2(uint8_t value)   { GPIOC_ODR.B12 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x084C	0x4901    LDR	R1, [PC, #4]
0x084E	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setMOSI_2:
0x0850	0x4770    BX	LR
0x0852	0xBF00    NOP
0x0854	0x01B04222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setMOSI_2
easymx_v7_STM32F107VC__setPWM_2:
;__em_f107vc_gpio.c, 74 :: 		static void _setPWM_2 (uint8_t value)   { GPIOD_ODR.B12 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0840	0x4901    LDR	R1, [PC, #4]
0x0842	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setPWM_2:
0x0844	0x4770    BX	LR
0x0846	0xBF00    NOP
0x0848	0x81B04222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setPWM_2
easymx_v7_STM32F107VC__setINT_2:
;__em_f107vc_gpio.c, 75 :: 		static void _setINT_2 (uint8_t value)   { GPIOD_ODR.B12 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0834	0x4901    LDR	R1, [PC, #4]
0x0836	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setINT_2:
0x0838	0x4770    BX	LR
0x083A	0xBF00    NOP
0x083C	0x81B04222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setINT_2
easymx_v7_STM32F107VC__setRX_2:
;__em_f107vc_gpio.c, 76 :: 		static void _setRX_2  (uint8_t value)   { GPIOD_ODR.B6  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x02DC	0x4901    LDR	R1, [PC, #4]
0x02DE	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setRX_2:
0x02E0	0x4770    BX	LR
0x02E2	0xBF00    NOP
0x02E4	0x81984222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setRX_2
easymx_v7_STM32F107VC__setTX_2:
;__em_f107vc_gpio.c, 77 :: 		static void _setTX_2  (uint8_t value)   { GPIOD_ODR.B5  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x02D0	0x4901    LDR	R1, [PC, #4]
0x02D2	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setTX_2:
0x02D4	0x4770    BX	LR
0x02D6	0xBF00    NOP
0x02D8	0x81944222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setTX_2
easymx_v7_STM32F107VC__setSCL_2:
;__em_f107vc_gpio.c, 78 :: 		static void _setSCL_2 (uint8_t value)   { GPIOB_ODR.B6  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x02C4	0x4901    LDR	R1, [PC, #4]
0x02C6	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSCL_2:
0x02C8	0x4770    BX	LR
0x02CA	0xBF00    NOP
0x02CC	0x81984221  	GPIOB_ODR+0
; end of easymx_v7_STM32F107VC__setSCL_2
easymx_v7_STM32F107VC__setSDA_2:
;__em_f107vc_gpio.c, 79 :: 		static void _setSDA_2 (uint8_t value)   { GPIOB_ODR.B7  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x02E8	0x4901    LDR	R1, [PC, #4]
0x02EA	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSDA_2:
0x02EC	0x4770    BX	LR
0x02EE	0xBF00    NOP
0x02F0	0x819C4221  	GPIOB_ODR+0
; end of easymx_v7_STM32F107VC__setSDA_2
__Lib_I2C_12_I2Cx_Wait_For_Idle:
;__Lib_I2C_12.c, 172 :: 		
; I2C_BASE start address is: 0 (R0)
0x0774	0xB081    SUB	SP, SP, #4
0x0776	0xF8CDE000  STR	LR, [SP, #0]
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 0 (R0)
;__Lib_I2C_12.c, 173 :: 		
; timeout start address is: 8 (R2)
0x077A	0xF04F0200  MOV	R2, #0
;__Lib_I2C_12.c, 176 :: 		
0x077E	0x4919    LDR	R1, [PC, #100]
0x0780	0x4288    CMP	R0, R1
0x0782	0xD107    BNE	L___Lib_I2C_12_I2Cx_Wait_For_Idle0
; timeout end address is: 8 (R2)
;__Lib_I2C_12.c, 177 :: 		
0x0784	0x4918    LDR	R1, [PC, #96]
; timeout start address is: 12 (R3)
0x0786	0x680B    LDR	R3, [R1, #0]
;__Lib_I2C_12.c, 178 :: 		
0x0788	0x4918    LDR	R1, [PC, #96]
0x078A	0x680A    LDR	R2, [R1, #0]
0x078C	0x4918    LDR	R1, [PC, #96]
0x078E	0x600A    STR	R2, [R1, #0]
;__Lib_I2C_12.c, 179 :: 		
0x0790	0x461C    MOV	R4, R3
; timeout end address is: 12 (R3)
0x0792	0xE00B    B	L___Lib_I2C_12_I2Cx_Wait_For_Idle1
L___Lib_I2C_12_I2Cx_Wait_For_Idle0:
;__Lib_I2C_12.c, 180 :: 		
; timeout start address is: 8 (R2)
0x0794	0x4917    LDR	R1, [PC, #92]
0x0796	0x4288    CMP	R0, R1
0x0798	0xD107    BNE	L___Lib_I2C_12_I2Cx_Wait_For_Idle121
; timeout end address is: 8 (R2)
;__Lib_I2C_12.c, 181 :: 		
0x079A	0x4917    LDR	R1, [PC, #92]
; timeout start address is: 12 (R3)
0x079C	0x680B    LDR	R3, [R1, #0]
;__Lib_I2C_12.c, 182 :: 		
0x079E	0x4917    LDR	R1, [PC, #92]
0x07A0	0x680A    LDR	R2, [R1, #0]
0x07A2	0x4913    LDR	R1, [PC, #76]
0x07A4	0x600A    STR	R2, [R1, #0]
; timeout end address is: 12 (R3)
0x07A6	0x461C    MOV	R4, R3
;__Lib_I2C_12.c, 183 :: 		
0x07A8	0xE000    B	L___Lib_I2C_12_I2Cx_Wait_For_Idle2
L___Lib_I2C_12_I2Cx_Wait_For_Idle121:
;__Lib_I2C_12.c, 180 :: 		
0x07AA	0x4614    MOV	R4, R2
;__Lib_I2C_12.c, 183 :: 		
L___Lib_I2C_12_I2Cx_Wait_For_Idle2:
; timeout start address is: 16 (R4)
; timeout end address is: 16 (R4)
L___Lib_I2C_12_I2Cx_Wait_For_Idle1:
;__Lib_I2C_12.c, 185 :: 		
; timeout start address is: 16 (R4)
0x07AC	0x4914    LDR	R1, [PC, #80]
0x07AE	0x600C    STR	R4, [R1, #0]
; I2C_BASE end address is: 0 (R0)
; timeout end address is: 16 (R4)
0x07B0	0x4603    MOV	R3, R0
;__Lib_I2C_12.c, 187 :: 		
L___Lib_I2C_12_I2Cx_Wait_For_Idle3:
; timeout start address is: 16 (R4)
; I2C_BASE start address is: 12 (R3)
0x07B2	0x4618    MOV	R0, R3
0x07B4	0xF7FFFCCC  BL	_I2Cx_Is_Idle+0
0x07B8	0xB970    CBNZ	R0, L___Lib_I2C_12_I2Cx_Wait_For_Idle4
;__Lib_I2C_12.c, 188 :: 		
0x07BA	0x4911    LDR	R1, [PC, #68]
0x07BC	0x6809    LDR	R1, [R1, #0]
0x07BE	0xB151    CBZ	R1, L___Lib_I2C_12_I2Cx_Wait_For_Idle122
;__Lib_I2C_12.c, 189 :: 		
0x07C0	0xB92C    CBNZ	R4, L___Lib_I2C_12_I2Cx_Wait_For_Idle6
; I2C_BASE end address is: 12 (R3)
; timeout end address is: 16 (R4)
;__Lib_I2C_12.c, 190 :: 		
0x07C2	0x2005    MOVS	R0, #5
0x07C4	0x4C0A    LDR	R4, [PC, #40]
0x07C6	0x6824    LDR	R4, [R4, #0]
0x07C8	0x47A0    BLX	R4
;__Lib_I2C_12.c, 191 :: 		
0x07CA	0x2000    MOVS	R0, #0
0x07CC	0xE005    B	L_end_I2Cx_Wait_For_Idle
;__Lib_I2C_12.c, 192 :: 		
L___Lib_I2C_12_I2Cx_Wait_For_Idle6:
;__Lib_I2C_12.c, 193 :: 		
; timeout start address is: 16 (R4)
; I2C_BASE start address is: 12 (R3)
0x07CE	0x1E61    SUBS	R1, R4, #1
; timeout end address is: 16 (R4)
; timeout start address is: 0 (R0)
0x07D0	0x4608    MOV	R0, R1
; timeout end address is: 0 (R0)
0x07D2	0x4604    MOV	R4, R0
;__Lib_I2C_12.c, 194 :: 		
0x07D4	0xE7FF    B	L___Lib_I2C_12_I2Cx_Wait_For_Idle5
L___Lib_I2C_12_I2Cx_Wait_For_Idle122:
;__Lib_I2C_12.c, 188 :: 		
;__Lib_I2C_12.c, 194 :: 		
L___Lib_I2C_12_I2Cx_Wait_For_Idle5:
;__Lib_I2C_12.c, 195 :: 		
; timeout start address is: 16 (R4)
; I2C_BASE end address is: 12 (R3)
; timeout end address is: 16 (R4)
0x07D6	0xE7EC    B	L___Lib_I2C_12_I2Cx_Wait_For_Idle3
L___Lib_I2C_12_I2Cx_Wait_For_Idle4:
;__Lib_I2C_12.c, 196 :: 		
0x07D8	0x2001    MOVS	R0, #1
;__Lib_I2C_12.c, 197 :: 		
L_end_I2Cx_Wait_For_Idle:
0x07DA	0xF8DDE000  LDR	LR, [SP, #0]
0x07DE	0xB001    ADD	SP, SP, #4
0x07E0	0x4770    BX	LR
0x07E2	0xBF00    NOP
0x07E4	0x54004000  	I2C1_CR1+0
0x07E8	0x01202000  	__Lib_I2C_12__I2C1_TIMEOUT+0
0x07EC	0x01882000  	_I2C1_Timeout_Ptr+0
0x07F0	0x01842000  	_I2Cx_Timeout_Ptr+0
0x07F4	0x58004000  	I2C2_CR1+0
0x07F8	0x01242000  	__Lib_I2C_12__I2C2_TIMEOUT+0
0x07FC	0x018C2000  	_I2C2_Timeout_Ptr+0
0x0800	0x01282000  	__Lib_I2C_12__I2Cx_TIMEOUT+0
; end of __Lib_I2C_12_I2Cx_Wait_For_Idle
_I2Cx_Is_Idle:
;__Lib_I2C_12.c, 167 :: 		
; I2C_BASE start address is: 0 (R0)
0x0150	0xB081    SUB	SP, SP, #4
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 0 (R0)
;__Lib_I2C_12.c, 168 :: 		
0x0152	0xF2000118  ADDW	R1, R0, #24
; I2C_BASE end address is: 0 (R0)
0x0156	0x680A    LDR	R2, [R1, #0]
0x0158	0xF3C20140  UBFX	R1, R2, #1, #1
0x015C	0xF0810101  EOR	R1, R1, #1
0x0160	0xB2C9    UXTB	R1, R1
0x0162	0xB2C8    UXTB	R0, R1
;__Lib_I2C_12.c, 169 :: 		
L_end_I2Cx_Is_Idle:
0x0164	0xB001    ADD	SP, SP, #4
0x0166	0x4770    BX	LR
; end of _I2Cx_Is_Idle
_ChekXForEvent:
;__Lib_I2C_12.c, 199 :: 		
; Event start address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x0750	0xB081    SUB	SP, SP, #4
0x0752	0xF8CDE000  STR	LR, [SP, #0]
0x0756	0x460B    MOV	R3, R1
; Event end address is: 4 (R1)
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 0 (R0)
; Event start address is: 12 (R3)
;__Lib_I2C_12.c, 200 :: 		
; I2C_BASE end address is: 0 (R0)
0x0758	0xF7FFFD58  BL	_I2Cx_Get_Status+0
0x075C	0xEA000203  AND	R2, R0, R3, LSL #0
0x0760	0x429A    CMP	R2, R3
0x0762	0xF2400200  MOVW	R2, #0
0x0766	0xD100    BNE	L__ChekXForEvent156
0x0768	0x2201    MOVS	R2, #1
L__ChekXForEvent156:
; Event end address is: 12 (R3)
0x076A	0xB2D0    UXTB	R0, R2
;__Lib_I2C_12.c, 201 :: 		
L_end_ChekXForEvent:
0x076C	0xF8DDE000  LDR	LR, [SP, #0]
0x0770	0xB001    ADD	SP, SP, #4
0x0772	0x4770    BX	LR
; end of _ChekXForEvent
_I2Cx_Get_Status:
;__Lib_I2C_12.c, 154 :: 		
; I2C_BASE start address is: 0 (R0)
0x020C	0xB081    SUB	SP, SP, #4
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 0 (R0)
;__Lib_I2C_12.c, 157 :: 		
0x020E	0xF2000114  ADDW	R1, R0, #20
0x0212	0x680A    LDR	R2, [R1, #0]
;__Lib_I2C_12.c, 158 :: 		
0x0214	0xF2000118  ADDW	R1, R0, #24
; I2C_BASE end address is: 0 (R0)
0x0218	0x6809    LDR	R1, [R1, #0]
;__Lib_I2C_12.c, 160 :: 		
0x021A	0x0409    LSLS	R1, R1, #16
0x021C	0xEA420101  ORR	R1, R2, R1, LSL #0
0x0220	0x4608    MOV	R0, R1
;__Lib_I2C_12.c, 161 :: 		
L_end_I2Cx_Get_Status:
0x0222	0xB001    ADD	SP, SP, #4
0x0224	0x4770    BX	LR
; end of _I2Cx_Get_Status
_I2C2_Start:
;__Lib_I2C_12.c, 566 :: 		
0x1404	0xB081    SUB	SP, SP, #4
0x1406	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_I2C_12.c, 567 :: 		
0x140A	0x4803    LDR	R0, [PC, #12]
0x140C	0xF7FFFC18  BL	_I2Cx_Start+0
;__Lib_I2C_12.c, 568 :: 		
L_end_I2C2_Start:
0x1410	0xF8DDE000  LDR	LR, [SP, #0]
0x1414	0xB001    ADD	SP, SP, #4
0x1416	0x4770    BX	LR
0x1418	0x58004000  	I2C2_CR1+0
; end of _I2C2_Start
_UART1_Read:
;__Lib_UART_123_45.c, 104 :: 		
0x1464	0xB081    SUB	SP, SP, #4
0x1466	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 105 :: 		
0x146A	0x4803    LDR	R0, [PC, #12]
0x146C	0xF7FFFF82  BL	__Lib_UART_123_45_UARTx_Read+0
;__Lib_UART_123_45.c, 106 :: 		
L_end_UART1_Read:
0x1470	0xF8DDE000  LDR	LR, [SP, #0]
0x1474	0xB001    ADD	SP, SP, #4
0x1476	0x4770    BX	LR
0x1478	0x38004001  	USART1_SR+0
; end of _UART1_Read
__Lib_UART_123_45_UARTx_Read:
;__Lib_UART_123_45.c, 96 :: 		
; UART_Base start address is: 0 (R0)
0x1374	0xB081    SUB	SP, SP, #4
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
; UART_Base end address is: 0 (R0)
;__Lib_UART_123_45.c, 98 :: 		
L___Lib_UART_123_45_UARTx_Read4:
; UART_Base start address is: 0 (R0)
0x1376	0x6802    LDR	R2, [R0, #0]
0x1378	0xF3C21140  UBFX	R1, R2, #5, #1
0x137C	0xB901    CBNZ	R1, L___Lib_UART_123_45_UARTx_Read5
0x137E	0xE7FA    B	L___Lib_UART_123_45_UARTx_Read4
L___Lib_UART_123_45_UARTx_Read5:
;__Lib_UART_123_45.c, 101 :: 		
0x1380	0x1D01    ADDS	R1, R0, #4
; UART_Base end address is: 0 (R0)
0x1382	0x6809    LDR	R1, [R1, #0]
0x1384	0xB288    UXTH	R0, R1
;__Lib_UART_123_45.c, 102 :: 		
L_end_UARTx_Read:
0x1386	0xB001    ADD	SP, SP, #4
0x1388	0x4770    BX	LR
; end of __Lib_UART_123_45_UARTx_Read
_UART1_Data_Ready:
;__Lib_UART_123_45.c, 131 :: 		
0x144C	0xB081    SUB	SP, SP, #4
0x144E	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 132 :: 		
0x1452	0x4803    LDR	R0, [PC, #12]
0x1454	0xF7FFFB22  BL	__Lib_UART_123_45_UARTx_Data_Ready+0
;__Lib_UART_123_45.c, 133 :: 		
L_end_UART1_Data_Ready:
0x1458	0xF8DDE000  LDR	LR, [SP, #0]
0x145C	0xB001    ADD	SP, SP, #4
0x145E	0x4770    BX	LR
0x1460	0x38004001  	USART1_SR+0
; end of _UART1_Data_Ready
__Lib_UART_123_45_UARTx_Data_Ready:
;__Lib_UART_123_45.c, 126 :: 		
; UART_Base start address is: 0 (R0)
0x0A9C	0xB081    SUB	SP, SP, #4
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
;__Lib_UART_123_45.c, 128 :: 		
0x0A9E	0x6801    LDR	R1, [R0, #0]
; UART_Base end address is: 0 (R0)
0x0AA0	0xF3C11040  UBFX	R0, R1, #5, #1
;__Lib_UART_123_45.c, 129 :: 		
L_end_UARTx_Data_Ready:
0x0AA4	0xB001    ADD	SP, SP, #4
0x0AA6	0x4770    BX	LR
; end of __Lib_UART_123_45_UARTx_Data_Ready
_UART1_Tx_Idle:
;__Lib_UART_123_45.c, 212 :: 		
0x1434	0xB081    SUB	SP, SP, #4
0x1436	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 213 :: 		
0x143A	0x4803    LDR	R0, [PC, #12]
0x143C	0xF7FFFE56  BL	__Lib_UART_123_45_UARTx_Tx_Idle+0
;__Lib_UART_123_45.c, 214 :: 		
L_end_UART1_Tx_Idle:
0x1440	0xF8DDE000  LDR	LR, [SP, #0]
0x1444	0xB001    ADD	SP, SP, #4
0x1446	0x4770    BX	LR
0x1448	0x38004001  	USART1_SR+0
; end of _UART1_Tx_Idle
__Lib_UART_123_45_UARTx_Tx_Idle:
;__Lib_UART_123_45.c, 208 :: 		
; UART_Base start address is: 0 (R0)
0x10EC	0xB081    SUB	SP, SP, #4
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
;__Lib_UART_123_45.c, 209 :: 		
0x10EE	0x6801    LDR	R1, [R0, #0]
; UART_Base end address is: 0 (R0)
0x10F0	0xF3C11080  UBFX	R0, R1, #6, #1
;__Lib_UART_123_45.c, 210 :: 		
L_end_UARTx_Tx_Idle:
0x10F4	0xB001    ADD	SP, SP, #4
0x10F6	0x4770    BX	LR
; end of __Lib_UART_123_45_UARTx_Tx_Idle
_UART2_Read:
;__Lib_UART_123_45.c, 108 :: 		
0x147C	0xB081    SUB	SP, SP, #4
0x147E	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 109 :: 		
0x1482	0x4803    LDR	R0, [PC, #12]
0x1484	0xF7FFFF76  BL	__Lib_UART_123_45_UARTx_Read+0
;__Lib_UART_123_45.c, 110 :: 		
L_end_UART2_Read:
0x1488	0xF8DDE000  LDR	LR, [SP, #0]
0x148C	0xB001    ADD	SP, SP, #4
0x148E	0x4770    BX	LR
0x1490	0x44004000  	USART2_SR+0
; end of _UART2_Read
_UART2_Data_Ready:
;__Lib_UART_123_45.c, 135 :: 		
0x13EC	0xB081    SUB	SP, SP, #4
0x13EE	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 136 :: 		
0x13F2	0x4803    LDR	R0, [PC, #12]
0x13F4	0xF7FFFB52  BL	__Lib_UART_123_45_UARTx_Data_Ready+0
;__Lib_UART_123_45.c, 137 :: 		
L_end_UART2_Data_Ready:
0x13F8	0xF8DDE000  LDR	LR, [SP, #0]
0x13FC	0xB001    ADD	SP, SP, #4
0x13FE	0x4770    BX	LR
0x1400	0x44004000  	USART2_SR+0
; end of _UART2_Data_Ready
_UART2_Tx_Idle:
;__Lib_UART_123_45.c, 216 :: 		
0x141C	0xB081    SUB	SP, SP, #4
0x141E	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 217 :: 		
0x1422	0x4803    LDR	R0, [PC, #12]
0x1424	0xF7FFFE62  BL	__Lib_UART_123_45_UARTx_Tx_Idle+0
;__Lib_UART_123_45.c, 218 :: 		
L_end_UART2_Tx_Idle:
0x1428	0xF8DDE000  LDR	LR, [SP, #0]
0x142C	0xB001    ADD	SP, SP, #4
0x142E	0x4770    BX	LR
0x1430	0x44004000  	USART2_SR+0
; end of _UART2_Tx_Idle
_UART3_Read:
;__Lib_UART_123_45.c, 112 :: 		
0x13D4	0xB081    SUB	SP, SP, #4
0x13D6	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 113 :: 		
0x13DA	0x4803    LDR	R0, [PC, #12]
0x13DC	0xF7FFFFCA  BL	__Lib_UART_123_45_UARTx_Read+0
;__Lib_UART_123_45.c, 114 :: 		
L_end_UART3_Read:
0x13E0	0xF8DDE000  LDR	LR, [SP, #0]
0x13E4	0xB001    ADD	SP, SP, #4
0x13E6	0x4770    BX	LR
0x13E8	0x48004000  	USART3_SR+0
; end of _UART3_Read
_UART3_Data_Ready:
;__Lib_UART_123_45.c, 139 :: 		
0x1830	0xB081    SUB	SP, SP, #4
0x1832	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 140 :: 		
0x1836	0x4803    LDR	R0, [PC, #12]
0x1838	0xF7FFF930  BL	__Lib_UART_123_45_UARTx_Data_Ready+0
;__Lib_UART_123_45.c, 141 :: 		
L_end_UART3_Data_Ready:
0x183C	0xF8DDE000  LDR	LR, [SP, #0]
0x1840	0xB001    ADD	SP, SP, #4
0x1842	0x4770    BX	LR
0x1844	0x48004000  	USART3_SR+0
; end of _UART3_Data_Ready
_UART3_Tx_Idle:
;__Lib_UART_123_45.c, 220 :: 		
0x1848	0xB081    SUB	SP, SP, #4
0x184A	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 221 :: 		
0x184E	0x4803    LDR	R0, [PC, #12]
0x1850	0xF7FFFC4C  BL	__Lib_UART_123_45_UARTx_Tx_Idle+0
;__Lib_UART_123_45.c, 222 :: 		
L_end_UART3_Tx_Idle:
0x1854	0xF8DDE000  LDR	LR, [SP, #0]
0x1858	0xB001    ADD	SP, SP, #4
0x185A	0x4770    BX	LR
0x185C	0x48004000  	USART3_SR+0
; end of _UART3_Tx_Idle
_UART4_Read:
;__Lib_UART_123_45.c, 116 :: 		
0x1800	0xB081    SUB	SP, SP, #4
0x1802	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 117 :: 		
0x1806	0x4803    LDR	R0, [PC, #12]
0x1808	0xF7FFFDB4  BL	__Lib_UART_123_45_UARTx_Read+0
;__Lib_UART_123_45.c, 118 :: 		
L_end_UART4_Read:
0x180C	0xF8DDE000  LDR	LR, [SP, #0]
0x1810	0xB001    ADD	SP, SP, #4
0x1812	0x4770    BX	LR
0x1814	0x4C004000  	UART4_SR+0
; end of _UART4_Read
_UART4_Data_Ready:
;__Lib_UART_123_45.c, 143 :: 		
0x1818	0xB081    SUB	SP, SP, #4
0x181A	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 144 :: 		
0x181E	0x4803    LDR	R0, [PC, #12]
0x1820	0xF7FFF93C  BL	__Lib_UART_123_45_UARTx_Data_Ready+0
;__Lib_UART_123_45.c, 145 :: 		
L_end_UART4_Data_Ready:
0x1824	0xF8DDE000  LDR	LR, [SP, #0]
0x1828	0xB001    ADD	SP, SP, #4
0x182A	0x4770    BX	LR
0x182C	0x4C004000  	UART4_SR+0
; end of _UART4_Data_Ready
_UART4_Tx_Idle:
;__Lib_UART_123_45.c, 224 :: 		
0x1890	0xB081    SUB	SP, SP, #4
0x1892	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 225 :: 		
0x1896	0x4803    LDR	R0, [PC, #12]
0x1898	0xF7FFFC28  BL	__Lib_UART_123_45_UARTx_Tx_Idle+0
;__Lib_UART_123_45.c, 226 :: 		
L_end_UART4_Tx_Idle:
0x189C	0xF8DDE000  LDR	LR, [SP, #0]
0x18A0	0xB001    ADD	SP, SP, #4
0x18A2	0x4770    BX	LR
0x18A4	0x4C004000  	UART4_SR+0
; end of _UART4_Tx_Idle
_UART5_Read:
;__Lib_UART_123_45.c, 120 :: 		
0x18A8	0xB081    SUB	SP, SP, #4
0x18AA	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 121 :: 		
0x18AE	0x4803    LDR	R0, [PC, #12]
0x18B0	0xF7FFFD60  BL	__Lib_UART_123_45_UARTx_Read+0
;__Lib_UART_123_45.c, 122 :: 		
L_end_UART5_Read:
0x18B4	0xF8DDE000  LDR	LR, [SP, #0]
0x18B8	0xB001    ADD	SP, SP, #4
0x18BA	0x4770    BX	LR
0x18BC	0x50004000  	UART5_SR+0
; end of _UART5_Read
_UART5_Data_Ready:
;__Lib_UART_123_45.c, 147 :: 		
0x1860	0xB081    SUB	SP, SP, #4
0x1862	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 148 :: 		
0x1866	0x4803    LDR	R0, [PC, #12]
0x1868	0xF7FFF918  BL	__Lib_UART_123_45_UARTx_Data_Ready+0
;__Lib_UART_123_45.c, 149 :: 		
L_end_UART5_Data_Ready:
0x186C	0xF8DDE000  LDR	LR, [SP, #0]
0x1870	0xB001    ADD	SP, SP, #4
0x1872	0x4770    BX	LR
0x1874	0x50004000  	UART5_SR+0
; end of _UART5_Data_Ready
_UART5_Tx_Idle:
;__Lib_UART_123_45.c, 228 :: 		
0x1878	0xB081    SUB	SP, SP, #4
0x187A	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 229 :: 		
0x187E	0x4803    LDR	R0, [PC, #12]
0x1880	0xF7FFFC34  BL	__Lib_UART_123_45_UARTx_Tx_Idle+0
;__Lib_UART_123_45.c, 230 :: 		
L_end_UART5_Tx_Idle:
0x1884	0xF8DDE000  LDR	LR, [SP, #0]
0x1888	0xB001    ADD	SP, SP, #4
0x188A	0x4770    BX	LR
0x188C	0x50004000  	UART5_SR+0
; end of _UART5_Tx_Idle
__color8_driver_hal_i2cWrite:
;__hal_stm32.c, 98 :: 		static int hal_i2cWrite(uint8_t slaveAddress, uint8_t *pBuf, uint16_t nBytes, uint8_t endMode)
; endMode start address is: 12 (R3)
; nBytes start address is: 8 (R2)
; pBuf start address is: 4 (R1)
; slaveAddress start address is: 0 (R0)
0x1A2C	0xB082    SUB	SP, SP, #8
0x1A2E	0xF8CDE000  STR	LR, [SP, #0]
; endMode end address is: 12 (R3)
; nBytes end address is: 8 (R2)
; pBuf end address is: 4 (R1)
; slaveAddress end address is: 0 (R0)
; slaveAddress start address is: 0 (R0)
; pBuf start address is: 4 (R1)
; nBytes start address is: 8 (R2)
; endMode start address is: 12 (R3)
;__hal_stm32.c, 100 :: 		int res = 0;
0x1A32	0xF2400400  MOVW	R4, #0
0x1A36	0xF8AD4004  STRH	R4, [SP, #4]
;__hal_stm32.c, 102 :: 		res |= fp_i2cWrite(slaveAddress, ptr, nBytes, endMode);
; endMode end address is: 12 (R3)
; nBytes end address is: 8 (R2)
; pBuf end address is: 4 (R1)
; slaveAddress end address is: 0 (R0)
0x1A3A	0x4C05    LDR	R4, [PC, #20]
0x1A3C	0x6824    LDR	R4, [R4, #0]
0x1A3E	0x47A0    BLX	R4
0x1A40	0xF9BD4004  LDRSH	R4, [SP, #4]
0x1A44	0x4304    ORRS	R4, R0
;__hal_stm32.c, 103 :: 		return res;
0x1A46	0xB220    SXTH	R0, R4
;__hal_stm32.c, 104 :: 		}
L_end_hal_i2cWrite:
0x1A48	0xF8DDE000  LDR	LR, [SP, #0]
0x1A4C	0xB002    ADD	SP, SP, #8
0x1A4E	0x4770    BX	LR
0x1A50	0x01742000  	__color8_driver_fp_i2cWrite+0
; end of __color8_driver_hal_i2cWrite
_I2C1_Write:
;__Lib_I2C_12.c, 556 :: 		
; END_mode start address is: 12 (R3)
; count start address is: 8 (R2)
; buf start address is: 4 (R1)
; slave_address start address is: 0 (R0)
0x14E4	0xB081    SUB	SP, SP, #4
0x14E6	0xF8CDE000  STR	LR, [SP, #0]
; END_mode end address is: 12 (R3)
; count end address is: 8 (R2)
; buf end address is: 4 (R1)
; slave_address end address is: 0 (R0)
; slave_address start address is: 0 (R0)
; buf start address is: 4 (R1)
; count start address is: 8 (R2)
; END_mode start address is: 12 (R3)
;__Lib_I2C_12.c, 557 :: 		
0x14EA	0xB408    PUSH	(R3)
; count end address is: 8 (R2)
0x14EC	0x4613    MOV	R3, R2
0x14EE	0x460A    MOV	R2, R1
; buf end address is: 4 (R1)
0x14F0	0xB2C1    UXTB	R1, R0
; slave_address end address is: 0 (R0)
0x14F2	0x4804    LDR	R0, [PC, #16]
; END_mode end address is: 12 (R3)
0x14F4	0xF7FFFAD8  BL	_I2Cx_Write+0
0x14F8	0xB001    ADD	SP, SP, #4
;__Lib_I2C_12.c, 558 :: 		
L_end_I2C1_Write:
0x14FA	0xF8DDE000  LDR	LR, [SP, #0]
0x14FE	0xB001    ADD	SP, SP, #4
0x1500	0x4770    BX	LR
0x1502	0xBF00    NOP
0x1504	0x54004000  	I2C1_CR1+0
; end of _I2C1_Write
_I2Cx_Write:
;__Lib_I2C_12.c, 245 :: 		
; count start address is: 12 (R3)
; buf start address is: 8 (R2)
; slave_address start address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x0AA8	0xB082    SUB	SP, SP, #8
0x0AAA	0xF8CDE000  STR	LR, [SP, #0]
; count end address is: 12 (R3)
; buf end address is: 8 (R2)
; slave_address end address is: 4 (R1)
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 0 (R0)
; slave_address start address is: 4 (R1)
; buf start address is: 8 (R2)
; count start address is: 12 (R3)
; END_mode start address is: 24 (R6)
0x0AAE	0x9E02    LDR	R6, [SP, #8]
;__Lib_I2C_12.c, 247 :: 		
; timeout start address is: 20 (R5)
0x0AB0	0xF04F0500  MOV	R5, #0
;__Lib_I2C_12.c, 250 :: 		
0x0AB4	0x4C56    LDR	R4, [PC, #344]
0x0AB6	0x42A0    CMP	R0, R4
0x0AB8	0xD106    BNE	L_I2Cx_Write16
; timeout end address is: 20 (R5)
;__Lib_I2C_12.c, 251 :: 		
0x0ABA	0x4C56    LDR	R4, [PC, #344]
; timeout start address is: 28 (R7)
0x0ABC	0x6827    LDR	R7, [R4, #0]
;__Lib_I2C_12.c, 252 :: 		
0x0ABE	0x4C56    LDR	R4, [PC, #344]
0x0AC0	0x6825    LDR	R5, [R4, #0]
0x0AC2	0x4C56    LDR	R4, [PC, #344]
0x0AC4	0x6025    STR	R5, [R4, #0]
;__Lib_I2C_12.c, 253 :: 		
; timeout end address is: 28 (R7)
0x0AC6	0xE00A    B	L_I2Cx_Write17
L_I2Cx_Write16:
;__Lib_I2C_12.c, 254 :: 		
; timeout start address is: 20 (R5)
0x0AC8	0x4C55    LDR	R4, [PC, #340]
0x0ACA	0x42A0    CMP	R0, R4
0x0ACC	0xD106    BNE	L__I2Cx_Write125
; timeout end address is: 20 (R5)
;__Lib_I2C_12.c, 255 :: 		
0x0ACE	0x4C55    LDR	R4, [PC, #340]
; timeout start address is: 28 (R7)
0x0AD0	0x6827    LDR	R7, [R4, #0]
;__Lib_I2C_12.c, 256 :: 		
0x0AD2	0x4C55    LDR	R4, [PC, #340]
0x0AD4	0x6825    LDR	R5, [R4, #0]
0x0AD6	0x4C51    LDR	R4, [PC, #324]
0x0AD8	0x6025    STR	R5, [R4, #0]
; timeout end address is: 28 (R7)
;__Lib_I2C_12.c, 257 :: 		
0x0ADA	0xE000    B	L_I2Cx_Write18
L__I2Cx_Write125:
;__Lib_I2C_12.c, 254 :: 		
0x0ADC	0x462F    MOV	R7, R5
;__Lib_I2C_12.c, 257 :: 		
L_I2Cx_Write18:
; timeout start address is: 28 (R7)
; timeout end address is: 28 (R7)
L_I2Cx_Write17:
;__Lib_I2C_12.c, 259 :: 		
; timeout start address is: 28 (R7)
0x0ADE	0x4C53    LDR	R4, [PC, #332]
0x0AE0	0x6027    STR	R7, [R4, #0]
;__Lib_I2C_12.c, 261 :: 		
0x0AE2	0xF2000510  ADDW	R5, R0, #16
0x0AE6	0x004C    LSLS	R4, R1, #1
0x0AE8	0xB2A4    UXTH	R4, R4
; slave_address end address is: 4 (R1)
0x0AEA	0x602C    STR	R4, [R5, #0]
; I2C_BASE end address is: 0 (R0)
; buf end address is: 8 (R2)
; count end address is: 12 (R3)
; END_mode end address is: 24 (R6)
; timeout end address is: 28 (R7)
0x0AEC	0x46B9    MOV	R9, R7
0x0AEE	0x4607    MOV	R7, R0
0x0AF0	0x4690    MOV	R8, R2
0x0AF2	0x4635    MOV	R5, R6
0x0AF4	0x461E    MOV	R6, R3
;__Lib_I2C_12.c, 262 :: 		
L_I2Cx_Write19:
; timeout start address is: 36 (R9)
; END_mode start address is: 20 (R5)
; count start address is: 24 (R6)
; buf start address is: 32 (R8)
; I2C_BASE start address is: 28 (R7)
0x0AF6	0x494E    LDR	R1, [PC, #312]
0x0AF8	0x4638    MOV	R0, R7
0x0AFA	0xF7FFFE29  BL	_ChekXForEvent+0
0x0AFE	0xB988    CBNZ	R0, L_I2Cx_Write20
;__Lib_I2C_12.c, 263 :: 		
0x0B00	0x4C4A    LDR	R4, [PC, #296]
0x0B02	0x6824    LDR	R4, [R4, #0]
0x0B04	0xB16C    CBZ	R4, L__I2Cx_Write126
;__Lib_I2C_12.c, 264 :: 		
0x0B06	0xF1B90F00  CMP	R9, #0
0x0B0A	0xD106    BNE	L_I2Cx_Write22
; count end address is: 24 (R6)
; I2C_BASE end address is: 28 (R7)
; buf end address is: 32 (R8)
; timeout end address is: 36 (R9)
; END_mode end address is: 20 (R5)
;__Lib_I2C_12.c, 265 :: 		
0x0B0C	0x2004    MOVS	R0, #4
0x0B0E	0x4C43    LDR	R4, [PC, #268]
0x0B10	0x6824    LDR	R4, [R4, #0]
0x0B12	0x47A0    BLX	R4
;__Lib_I2C_12.c, 266 :: 		
0x0B14	0xF64F70FF  MOVW	R0, #65535
0x0B18	0xE076    B	L_end_I2Cx_Write
;__Lib_I2C_12.c, 267 :: 		
L_I2Cx_Write22:
;__Lib_I2C_12.c, 268 :: 		
; END_mode start address is: 20 (R5)
; timeout start address is: 36 (R9)
; buf start address is: 32 (R8)
; I2C_BASE start address is: 28 (R7)
; count start address is: 24 (R6)
0x0B1A	0xF1A90001  SUB	R0, R9, #1
; timeout end address is: 36 (R9)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x0B1E	0x4681    MOV	R9, R0
;__Lib_I2C_12.c, 269 :: 		
0x0B20	0xE7FF    B	L_I2Cx_Write21
L__I2Cx_Write126:
;__Lib_I2C_12.c, 263 :: 		
;__Lib_I2C_12.c, 269 :: 		
L_I2Cx_Write21:
;__Lib_I2C_12.c, 270 :: 		
; timeout start address is: 36 (R9)
; timeout end address is: 36 (R9)
0x0B22	0xE7E8    B	L_I2Cx_Write19
L_I2Cx_Write20:
;__Lib_I2C_12.c, 271 :: 		
; i start address is: 0 (R0)
0x0B24	0x2000    MOVS	R0, #0
; count end address is: 24 (R6)
; I2C_BASE end address is: 28 (R7)
; buf end address is: 32 (R8)
; i end address is: 0 (R0)
; END_mode end address is: 20 (R5)
0x0B26	0x9701    STR	R7, [SP, #4]
0x0B28	0x4629    MOV	R1, R5
0x0B2A	0x4637    MOV	R7, R6
0x0B2C	0x9E01    LDR	R6, [SP, #4]
L_I2Cx_Write23:
; i start address is: 0 (R0)
; I2C_BASE start address is: 24 (R6)
; buf start address is: 32 (R8)
; count start address is: 28 (R7)
; END_mode start address is: 4 (R1)
0x0B2E	0x1E7C    SUBS	R4, R7, #1
0x0B30	0x42A0    CMP	R0, R4
0x0B32	0xD226    BCS	L_I2Cx_Write24
;__Lib_I2C_12.c, 272 :: 		
0x0B34	0xF2060510  ADDW	R5, R6, #16
0x0B38	0xEB080400  ADD	R4, R8, R0, LSL #0
0x0B3C	0x7824    LDRB	R4, [R4, #0]
0x0B3E	0x602C    STR	R4, [R5, #0]
;__Lib_I2C_12.c, 274 :: 		
0x0B40	0x4C3A    LDR	R4, [PC, #232]
; timeout start address is: 36 (R9)
0x0B42	0xF8D49000  LDR	R9, [R4, #0]
; END_mode end address is: 4 (R1)
; count end address is: 28 (R7)
; buf end address is: 32 (R8)
; timeout end address is: 36 (R9)
; i end address is: 0 (R0)
; I2C_BASE end address is: 24 (R6)
0x0B46	0x4682    MOV	R10, R0
0x0B48	0x460D    MOV	R5, R1
;__Lib_I2C_12.c, 275 :: 		
L_I2Cx_Write26:
; timeout start address is: 36 (R9)
; END_mode start address is: 20 (R5)
; count start address is: 28 (R7)
; buf start address is: 32 (R8)
; I2C_BASE start address is: 24 (R6)
; i start address is: 40 (R10)
0x0B4A	0x493A    LDR	R1, [PC, #232]
0x0B4C	0x4630    MOV	R0, R6
0x0B4E	0xF7FFFDFF  BL	_ChekXForEvent+0
0x0B52	0xB988    CBNZ	R0, L_I2Cx_Write27
;__Lib_I2C_12.c, 276 :: 		
0x0B54	0x4C35    LDR	R4, [PC, #212]
0x0B56	0x6824    LDR	R4, [R4, #0]
0x0B58	0xB16C    CBZ	R4, L__I2Cx_Write127
;__Lib_I2C_12.c, 277 :: 		
0x0B5A	0xF1B90F00  CMP	R9, #0
0x0B5E	0xD106    BNE	L_I2Cx_Write29
; count end address is: 28 (R7)
; buf end address is: 32 (R8)
; i end address is: 40 (R10)
; timeout end address is: 36 (R9)
; END_mode end address is: 20 (R5)
; I2C_BASE end address is: 24 (R6)
;__Lib_I2C_12.c, 278 :: 		
0x0B60	0x2004    MOVS	R0, #4
0x0B62	0x4C2E    LDR	R4, [PC, #184]
0x0B64	0x6824    LDR	R4, [R4, #0]
0x0B66	0x47A0    BLX	R4
;__Lib_I2C_12.c, 279 :: 		
0x0B68	0xF64F70FF  MOVW	R0, #65535
0x0B6C	0xE04C    B	L_end_I2Cx_Write
;__Lib_I2C_12.c, 280 :: 		
L_I2Cx_Write29:
;__Lib_I2C_12.c, 281 :: 		
; I2C_BASE start address is: 24 (R6)
; END_mode start address is: 20 (R5)
; timeout start address is: 36 (R9)
; i start address is: 40 (R10)
; buf start address is: 32 (R8)
; count start address is: 28 (R7)
0x0B6E	0xF1A90001  SUB	R0, R9, #1
; timeout end address is: 36 (R9)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x0B72	0x4681    MOV	R9, R0
;__Lib_I2C_12.c, 282 :: 		
0x0B74	0xE7FF    B	L_I2Cx_Write28
L__I2Cx_Write127:
;__Lib_I2C_12.c, 276 :: 		
;__Lib_I2C_12.c, 282 :: 		
L_I2Cx_Write28:
;__Lib_I2C_12.c, 283 :: 		
; timeout start address is: 36 (R9)
; timeout end address is: 36 (R9)
0x0B76	0xE7E8    B	L_I2Cx_Write26
L_I2Cx_Write27:
;__Lib_I2C_12.c, 271 :: 		
0x0B78	0xF10A0401  ADD	R4, R10, #1
; i end address is: 40 (R10)
; i start address is: 0 (R0)
0x0B7C	0x4620    MOV	R0, R4
;__Lib_I2C_12.c, 284 :: 		
0x0B7E	0x4629    MOV	R1, R5
; count end address is: 28 (R7)
; END_mode end address is: 20 (R5)
0x0B80	0xE7D5    B	L_I2Cx_Write23
L_I2Cx_Write24:
;__Lib_I2C_12.c, 286 :: 		
; END_mode start address is: 4 (R1)
0x0B82	0xF2060510  ADDW	R5, R6, #16
0x0B86	0xEB080400  ADD	R4, R8, R0, LSL #0
; buf end address is: 32 (R8)
; i end address is: 0 (R0)
0x0B8A	0x7824    LDRB	R4, [R4, #0]
0x0B8C	0x602C    STR	R4, [R5, #0]
;__Lib_I2C_12.c, 288 :: 		
0x0B8E	0x4C27    LDR	R4, [PC, #156]
; timeout start address is: 28 (R7)
0x0B90	0x6827    LDR	R7, [R4, #0]
; END_mode end address is: 4 (R1)
; I2C_BASE end address is: 24 (R6)
; timeout end address is: 28 (R7)
0x0B92	0x460D    MOV	R5, R1
;__Lib_I2C_12.c, 289 :: 		
L_I2Cx_Write30:
; timeout start address is: 28 (R7)
; END_mode start address is: 20 (R5)
; I2C_BASE start address is: 24 (R6)
0x0B94	0x4928    LDR	R1, [PC, #160]
0x0B96	0x4630    MOV	R0, R6
0x0B98	0xF7FFFDDA  BL	_ChekXForEvent+0
0x0B9C	0xB970    CBNZ	R0, L_I2Cx_Write31
;__Lib_I2C_12.c, 290 :: 		
0x0B9E	0x4C23    LDR	R4, [PC, #140]
0x0BA0	0x6824    LDR	R4, [R4, #0]
0x0BA2	0xB154    CBZ	R4, L__I2Cx_Write128
;__Lib_I2C_12.c, 291 :: 		
0x0BA4	0xB937    CBNZ	R7, L_I2Cx_Write33
; END_mode end address is: 20 (R5)
; I2C_BASE end address is: 24 (R6)
; timeout end address is: 28 (R7)
;__Lib_I2C_12.c, 292 :: 		
0x0BA6	0x2004    MOVS	R0, #4
0x0BA8	0x4C1C    LDR	R4, [PC, #112]
0x0BAA	0x6824    LDR	R4, [R4, #0]
0x0BAC	0x47A0    BLX	R4
;__Lib_I2C_12.c, 293 :: 		
0x0BAE	0xF64F70FF  MOVW	R0, #65535
0x0BB2	0xE029    B	L_end_I2Cx_Write
;__Lib_I2C_12.c, 294 :: 		
L_I2Cx_Write33:
;__Lib_I2C_12.c, 295 :: 		
; timeout start address is: 28 (R7)
; I2C_BASE start address is: 24 (R6)
; END_mode start address is: 20 (R5)
0x0BB4	0x1E78    SUBS	R0, R7, #1
; timeout end address is: 28 (R7)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x0BB6	0x4607    MOV	R7, R0
;__Lib_I2C_12.c, 296 :: 		
0x0BB8	0xE7FF    B	L_I2Cx_Write32
L__I2Cx_Write128:
;__Lib_I2C_12.c, 290 :: 		
;__Lib_I2C_12.c, 296 :: 		
L_I2Cx_Write32:
;__Lib_I2C_12.c, 297 :: 		
; timeout start address is: 28 (R7)
; timeout end address is: 28 (R7)
0x0BBA	0xE7EB    B	L_I2Cx_Write30
L_I2Cx_Write31:
;__Lib_I2C_12.c, 298 :: 		
0x0BBC	0x2D01    CMP	R5, #1
0x0BBE	0xD105    BNE	L_I2Cx_Write34
; END_mode end address is: 20 (R5)
;__Lib_I2C_12.c, 299 :: 		
0x0BC0	0x2501    MOVS	R5, #1
0x0BC2	0x6834    LDR	R4, [R6, #0]
0x0BC4	0xF3652449  BFI	R4, R5, #9, #1
0x0BC8	0x6034    STR	R4, [R6, #0]
; I2C_BASE end address is: 24 (R6)
0x0BCA	0xE01C    B	L_I2Cx_Write35
L_I2Cx_Write34:
;__Lib_I2C_12.c, 301 :: 		
; I2C_BASE start address is: 24 (R6)
0x0BCC	0x2501    MOVS	R5, #1
0x0BCE	0x6834    LDR	R4, [R6, #0]
0x0BD0	0xF3652408  BFI	R4, R5, #8, #1
0x0BD4	0x6034    STR	R4, [R6, #0]
;__Lib_I2C_12.c, 303 :: 		
0x0BD6	0x4C15    LDR	R4, [PC, #84]
; timeout start address is: 28 (R7)
0x0BD8	0x6827    LDR	R7, [R4, #0]
; I2C_BASE end address is: 24 (R6)
; timeout end address is: 28 (R7)
0x0BDA	0x4635    MOV	R5, R6
;__Lib_I2C_12.c, 304 :: 		
L_I2Cx_Write36:
; timeout start address is: 28 (R7)
; I2C_BASE start address is: 20 (R5)
0x0BDC	0x4917    LDR	R1, [PC, #92]
0x0BDE	0x4628    MOV	R0, R5
0x0BE0	0xF7FFFDB6  BL	_ChekXForEvent+0
0x0BE4	0xB978    CBNZ	R0, L_I2Cx_Write37
;__Lib_I2C_12.c, 305 :: 		
0x0BE6	0x4C11    LDR	R4, [PC, #68]
0x0BE8	0x6824    LDR	R4, [R4, #0]
0x0BEA	0xB15C    CBZ	R4, L__I2Cx_Write129
;__Lib_I2C_12.c, 306 :: 		
0x0BEC	0xB937    CBNZ	R7, L_I2Cx_Write39
; I2C_BASE end address is: 20 (R5)
; timeout end address is: 28 (R7)
;__Lib_I2C_12.c, 307 :: 		
0x0BEE	0x2004    MOVS	R0, #4
0x0BF0	0x4C0A    LDR	R4, [PC, #40]
0x0BF2	0x6824    LDR	R4, [R4, #0]
0x0BF4	0x47A0    BLX	R4
;__Lib_I2C_12.c, 308 :: 		
0x0BF6	0xF64F70FF  MOVW	R0, #65535
0x0BFA	0xE005    B	L_end_I2Cx_Write
;__Lib_I2C_12.c, 309 :: 		
L_I2Cx_Write39:
;__Lib_I2C_12.c, 310 :: 		
; timeout start address is: 28 (R7)
; I2C_BASE start address is: 20 (R5)
0x0BFC	0x1E7C    SUBS	R4, R7, #1
; timeout end address is: 28 (R7)
; timeout start address is: 0 (R0)
0x0BFE	0x4620    MOV	R0, R4
; timeout end address is: 0 (R0)
0x0C00	0x4607    MOV	R7, R0
;__Lib_I2C_12.c, 311 :: 		
0x0C02	0xE7FF    B	L_I2Cx_Write38
L__I2Cx_Write129:
;__Lib_I2C_12.c, 305 :: 		
;__Lib_I2C_12.c, 311 :: 		
L_I2Cx_Write38:
;__Lib_I2C_12.c, 312 :: 		
; timeout start address is: 28 (R7)
; I2C_BASE end address is: 20 (R5)
; timeout end address is: 28 (R7)
0x0C04	0xE7EA    B	L_I2Cx_Write36
L_I2Cx_Write37:
;__Lib_I2C_12.c, 313 :: 		
L_I2Cx_Write35:
;__Lib_I2C_12.c, 314 :: 		
0x0C06	0x2000    MOVS	R0, #0
;__Lib_I2C_12.c, 315 :: 		
L_end_I2Cx_Write:
0x0C08	0xF8DDE000  LDR	LR, [SP, #0]
0x0C0C	0xB002    ADD	SP, SP, #8
0x0C0E	0x4770    BX	LR
0x0C10	0x54004000  	I2C1_CR1+0
0x0C14	0x01202000  	__Lib_I2C_12__I2C1_TIMEOUT+0
0x0C18	0x01882000  	_I2C1_Timeout_Ptr+0
0x0C1C	0x01842000  	_I2Cx_Timeout_Ptr+0
0x0C20	0x58004000  	I2C2_CR1+0
0x0C24	0x01242000  	__Lib_I2C_12__I2C2_TIMEOUT+0
0x0C28	0x018C2000  	_I2C2_Timeout_Ptr+0
0x0C2C	0x01282000  	__Lib_I2C_12__I2Cx_TIMEOUT+0
0x0C30	0x00820007  	#458882
0x0C34	0x00800007  	#458880
0x0C38	0x00840007  	#458884
0x0C3C	0x00010003  	#196609
; end of _I2Cx_Write
_I2C2_Write:
;__Lib_I2C_12.c, 586 :: 		
; END_mode start address is: 12 (R3)
; count start address is: 8 (R2)
; buf start address is: 4 (R1)
; slave_address start address is: 0 (R0)
0x1508	0xB081    SUB	SP, SP, #4
0x150A	0xF8CDE000  STR	LR, [SP, #0]
; END_mode end address is: 12 (R3)
; count end address is: 8 (R2)
; buf end address is: 4 (R1)
; slave_address end address is: 0 (R0)
; slave_address start address is: 0 (R0)
; buf start address is: 4 (R1)
; count start address is: 8 (R2)
; END_mode start address is: 12 (R3)
;__Lib_I2C_12.c, 587 :: 		
0x150E	0xB408    PUSH	(R3)
; count end address is: 8 (R2)
0x1510	0x4613    MOV	R3, R2
0x1512	0x460A    MOV	R2, R1
; buf end address is: 4 (R1)
0x1514	0xB2C1    UXTB	R1, R0
; slave_address end address is: 0 (R0)
0x1516	0x4804    LDR	R0, [PC, #16]
; END_mode end address is: 12 (R3)
0x1518	0xF7FFFAC6  BL	_I2Cx_Write+0
0x151C	0xB001    ADD	SP, SP, #4
;__Lib_I2C_12.c, 588 :: 		
L_end_I2C2_Write:
0x151E	0xF8DDE000  LDR	LR, [SP, #0]
0x1522	0xB001    ADD	SP, SP, #4
0x1524	0x4770    BX	LR
0x1526	0xBF00    NOP
0x1528	0x58004000  	I2C2_CR1+0
; end of _I2C2_Write
_applicationTask:
;Click_Color8_STM.c, 60 :: 		void applicationTask()
0x29F8	0xB081    SUB	SP, SP, #4
0x29FA	0xF8CDE000  STR	LR, [SP, #0]
;Click_Color8_STM.c, 62 :: 		RED_data = color8_readData(_COLOR8_REG_RED_DATA);
0x29FE	0x2050    MOVS	R0, __COLOR8_REG_RED_DATA
0x2A00	0xF7FFFE34  BL	_color8_readData+0
0x2A04	0x495A    LDR	R1, [PC, #360]
0x2A06	0x8008    STRH	R0, [R1, #0]
;Click_Color8_STM.c, 63 :: 		IntToStr(RED_data, demoText);
0x2A08	0xB200    SXTH	R0, R0
0x2A0A	0x495A    LDR	R1, [PC, #360]
0x2A0C	0xF7FFFEF4  BL	_IntToStr+0
;Click_Color8_STM.c, 64 :: 		mikrobus_logWrite(" RED data : ", _LOG_TEXT);
0x2A10	0x4859    LDR	R0, [PC, #356]
0x2A12	0x2101    MOVS	R1, #1
0x2A14	0xF7FFFE5E  BL	_mikrobus_logWrite+0
;Click_Color8_STM.c, 65 :: 		mikrobus_logWrite(demoText, _LOG_LINE);
0x2A18	0x2102    MOVS	R1, #2
0x2A1A	0x4856    LDR	R0, [PC, #344]
0x2A1C	0xF7FFFE5A  BL	_mikrobus_logWrite+0
;Click_Color8_STM.c, 67 :: 		GREEN_data = color8_readData(_COLOR8_REG_GREEN_DATA);
0x2A20	0x2052    MOVS	R0, __COLOR8_REG_GREEN_DATA
0x2A22	0xF7FFFE23  BL	_color8_readData+0
0x2A26	0x4955    LDR	R1, [PC, #340]
0x2A28	0x8008    STRH	R0, [R1, #0]
;Click_Color8_STM.c, 68 :: 		IntToStr(GREEN_data, demoText);
0x2A2A	0xB200    SXTH	R0, R0
0x2A2C	0x4951    LDR	R1, [PC, #324]
0x2A2E	0xF7FFFEE3  BL	_IntToStr+0
;Click_Color8_STM.c, 69 :: 		mikrobus_logWrite(" GREEN data : ", _LOG_TEXT);
0x2A32	0x4853    LDR	R0, [PC, #332]
0x2A34	0x2101    MOVS	R1, #1
0x2A36	0xF7FFFE4D  BL	_mikrobus_logWrite+0
;Click_Color8_STM.c, 70 :: 		mikrobus_logWrite(demoText, _LOG_LINE);
0x2A3A	0x2102    MOVS	R1, #2
0x2A3C	0x484D    LDR	R0, [PC, #308]
0x2A3E	0xF7FFFE49  BL	_mikrobus_logWrite+0
;Click_Color8_STM.c, 72 :: 		BLUE_data = color8_readData(_COLOR8_REG_BLUE_DATA);
0x2A42	0x2054    MOVS	R0, __COLOR8_REG_BLUE_DATA
0x2A44	0xF7FFFE12  BL	_color8_readData+0
0x2A48	0x494E    LDR	R1, [PC, #312]
0x2A4A	0x8008    STRH	R0, [R1, #0]
;Click_Color8_STM.c, 73 :: 		IntToStr(BLUE_data, demoText);
0x2A4C	0xB200    SXTH	R0, R0
0x2A4E	0x4949    LDR	R1, [PC, #292]
0x2A50	0xF7FFFED2  BL	_IntToStr+0
;Click_Color8_STM.c, 74 :: 		mikrobus_logWrite(" BLUE data : ", _LOG_TEXT);
0x2A54	0x484C    LDR	R0, [PC, #304]
0x2A56	0x2101    MOVS	R1, #1
0x2A58	0xF7FFFE3C  BL	_mikrobus_logWrite+0
;Click_Color8_STM.c, 75 :: 		mikrobus_logWrite(demoText, _LOG_LINE);
0x2A5C	0x2102    MOVS	R1, #2
0x2A5E	0x4845    LDR	R0, [PC, #276]
0x2A60	0xF7FFFE38  BL	_mikrobus_logWrite+0
;Click_Color8_STM.c, 77 :: 		IR_data = color8_readData(_COLOR8_REG_IR_DATA);
0x2A64	0x2058    MOVS	R0, __COLOR8_REG_IR_DATA
0x2A66	0xF7FFFE01  BL	_color8_readData+0
0x2A6A	0x4948    LDR	R1, [PC, #288]
0x2A6C	0x8008    STRH	R0, [R1, #0]
;Click_Color8_STM.c, 78 :: 		IntToStr(IR_data, demoText);
0x2A6E	0xB200    SXTH	R0, R0
0x2A70	0x4940    LDR	R1, [PC, #256]
0x2A72	0xF7FFFEC1  BL	_IntToStr+0
;Click_Color8_STM.c, 79 :: 		mikrobus_logWrite(" IR data : ", _LOG_TEXT);
0x2A76	0x4846    LDR	R0, [PC, #280]
0x2A78	0x2101    MOVS	R1, #1
0x2A7A	0xF7FFFE2B  BL	_mikrobus_logWrite+0
;Click_Color8_STM.c, 80 :: 		mikrobus_logWrite(demoText, _LOG_LINE);
0x2A7E	0x2102    MOVS	R1, #2
0x2A80	0x483C    LDR	R0, [PC, #240]
0x2A82	0xF7FFFE27  BL	_mikrobus_logWrite+0
;Click_Color8_STM.c, 82 :: 		colorValue = color8_getColorValue();
0x2A86	0xF7FFFE81  BL	_color8_getColorValue+0
0x2A8A	0x4942    LDR	R1, [PC, #264]
0x2A8C	0x6008    STR	R0, [R1, #0]
;Click_Color8_STM.c, 83 :: 		FloatToStr(colorValue, demoText);
0x2A8E	0x4939    LDR	R1, [PC, #228]
0x2A90	0xF7FFFCF2  BL	_FloatToStr+0
;Click_Color8_STM.c, 84 :: 		mikrobus_logWrite(" HSL color value : ", _LOG_TEXT);
0x2A94	0x4840    LDR	R0, [PC, #256]
0x2A96	0x2101    MOVS	R1, #1
0x2A98	0xF7FFFE1C  BL	_mikrobus_logWrite+0
;Click_Color8_STM.c, 85 :: 		mikrobus_logWrite(demoText, _LOG_LINE);
0x2A9C	0x2102    MOVS	R1, #2
0x2A9E	0x4835    LDR	R0, [PC, #212]
0x2AA0	0xF7FFFE18  BL	_mikrobus_logWrite+0
;Click_Color8_STM.c, 87 :: 		isColor = color8_getColor(colorValue);
0x2AA4	0x483B    LDR	R0, [PC, #236]
0x2AA6	0x6800    LDR	R0, [R0, #0]
0x2AA8	0xF7FFFC02  BL	_color8_getColor+0
0x2AAC	0x493B    LDR	R1, [PC, #236]
0x2AAE	0x7008    STRB	R0, [R1, #0]
;Click_Color8_STM.c, 89 :: 		switch(isColor)
0x2AB0	0xE028    B	L_applicationTask2
;Click_Color8_STM.c, 91 :: 		case 1:
L_applicationTask4:
;Click_Color8_STM.c, 93 :: 		mikrobus_logWrite("--- Color: ORANGE ", _LOG_LINE);
0x2AB2	0x483B    LDR	R0, [PC, #236]
0x2AB4	0x2102    MOVS	R1, #2
0x2AB6	0xF7FFFE0D  BL	_mikrobus_logWrite+0
;Click_Color8_STM.c, 94 :: 		break;
0x2ABA	0xE044    B	L_applicationTask3
;Click_Color8_STM.c, 96 :: 		case 2:
L_applicationTask5:
;Click_Color8_STM.c, 98 :: 		mikrobus_logWrite("--- Color: RED ", _LOG_LINE);
0x2ABC	0x4839    LDR	R0, [PC, #228]
0x2ABE	0x2102    MOVS	R1, #2
0x2AC0	0xF7FFFE08  BL	_mikrobus_logWrite+0
;Click_Color8_STM.c, 99 :: 		break;
0x2AC4	0xE03F    B	L_applicationTask3
;Click_Color8_STM.c, 101 :: 		case 3:
L_applicationTask6:
;Click_Color8_STM.c, 103 :: 		mikrobus_logWrite("--- Color: PINK ", _LOG_LINE);
0x2AC6	0x4838    LDR	R0, [PC, #224]
0x2AC8	0x2102    MOVS	R1, #2
0x2ACA	0xF7FFFE03  BL	_mikrobus_logWrite+0
;Click_Color8_STM.c, 104 :: 		break;
0x2ACE	0xE03A    B	L_applicationTask3
;Click_Color8_STM.c, 106 :: 		case 4:
L_applicationTask7:
;Click_Color8_STM.c, 108 :: 		mikrobus_logWrite("--- Color: PURPLE ", _LOG_LINE);
0x2AD0	0x4836    LDR	R0, [PC, #216]
0x2AD2	0x2102    MOVS	R1, #2
0x2AD4	0xF7FFFDFE  BL	_mikrobus_logWrite+0
;Click_Color8_STM.c, 109 :: 		break;
0x2AD8	0xE035    B	L_applicationTask3
;Click_Color8_STM.c, 111 :: 		case 5:
L_applicationTask8:
;Click_Color8_STM.c, 113 :: 		mikrobus_logWrite("--- Color: BLUE ", _LOG_LINE);
0x2ADA	0x4835    LDR	R0, [PC, #212]
0x2ADC	0x2102    MOVS	R1, #2
0x2ADE	0xF7FFFDF9  BL	_mikrobus_logWrite+0
;Click_Color8_STM.c, 114 :: 		break;
0x2AE2	0xE030    B	L_applicationTask3
;Click_Color8_STM.c, 116 :: 		case 6:
L_applicationTask9:
;Click_Color8_STM.c, 118 :: 		mikrobus_logWrite("--- Color: CYAN ", _LOG_LINE);
0x2AE4	0x4833    LDR	R0, [PC, #204]
0x2AE6	0x2102    MOVS	R1, #2
0x2AE8	0xF7FFFDF4  BL	_mikrobus_logWrite+0
;Click_Color8_STM.c, 119 :: 		break;
0x2AEC	0xE02B    B	L_applicationTask3
;Click_Color8_STM.c, 121 :: 		case 7:
L_applicationTask10:
;Click_Color8_STM.c, 123 :: 		mikrobus_logWrite("--- Color: GREEN ", _LOG_LINE);
0x2AEE	0x4832    LDR	R0, [PC, #200]
0x2AF0	0x2102    MOVS	R1, #2
0x2AF2	0xF7FFFDEF  BL	_mikrobus_logWrite+0
;Click_Color8_STM.c, 124 :: 		break;
0x2AF6	0xE026    B	L_applicationTask3
;Click_Color8_STM.c, 126 :: 		case 8:
L_applicationTask11:
;Click_Color8_STM.c, 128 :: 		mikrobus_logWrite("--- Color: YELLOW ", _LOG_LINE);
0x2AF8	0x4830    LDR	R0, [PC, #192]
0x2AFA	0x2102    MOVS	R1, #2
0x2AFC	0xF7FFFDEA  BL	_mikrobus_logWrite+0
;Click_Color8_STM.c, 129 :: 		break;
0x2B00	0xE021    B	L_applicationTask3
;Click_Color8_STM.c, 131 :: 		default:
L_applicationTask12:
;Click_Color8_STM.c, 133 :: 		break;
0x2B02	0xE020    B	L_applicationTask3
;Click_Color8_STM.c, 135 :: 		}
L_applicationTask2:
0x2B04	0x4825    LDR	R0, [PC, #148]
0x2B06	0x7800    LDRB	R0, [R0, #0]
0x2B08	0x2801    CMP	R0, #1
0x2B0A	0xD0D2    BEQ	L_applicationTask4
0x2B0C	0x4823    LDR	R0, [PC, #140]
0x2B0E	0x7800    LDRB	R0, [R0, #0]
0x2B10	0x2802    CMP	R0, #2
0x2B12	0xD0D3    BEQ	L_applicationTask5
0x2B14	0x4821    LDR	R0, [PC, #132]
0x2B16	0x7800    LDRB	R0, [R0, #0]
0x2B18	0x2803    CMP	R0, #3
0x2B1A	0xD0D4    BEQ	L_applicationTask6
0x2B1C	0x481F    LDR	R0, [PC, #124]
0x2B1E	0x7800    LDRB	R0, [R0, #0]
0x2B20	0x2804    CMP	R0, #4
0x2B22	0xD0D5    BEQ	L_applicationTask7
0x2B24	0x481D    LDR	R0, [PC, #116]
0x2B26	0x7800    LDRB	R0, [R0, #0]
0x2B28	0x2805    CMP	R0, #5
0x2B2A	0xD0D6    BEQ	L_applicationTask8
0x2B2C	0x481B    LDR	R0, [PC, #108]
0x2B2E	0x7800    LDRB	R0, [R0, #0]
0x2B30	0x2806    CMP	R0, #6
0x2B32	0xD0D7    BEQ	L_applicationTask9
0x2B34	0x4819    LDR	R0, [PC, #100]
0x2B36	0x7800    LDRB	R0, [R0, #0]
0x2B38	0x2807    CMP	R0, #7
0x2B3A	0xD0D8    BEQ	L_applicationTask10
0x2B3C	0x4817    LDR	R0, [PC, #92]
0x2B3E	0x7800    LDRB	R0, [R0, #0]
0x2B40	0x2808    CMP	R0, #8
0x2B42	0xD0D9    BEQ	L_applicationTask11
0x2B44	0xE7DD    B	L_applicationTask12
L_applicationTask3:
;Click_Color8_STM.c, 136 :: 		Delay_100ms();
0x2B46	0xF7FFFBA7  BL	_Delay_100ms+0
;Click_Color8_STM.c, 138 :: 		mikrobus_logWrite("  ", _LOG_LINE);
0x2B4A	0x481D    LDR	R0, [PC, #116]
0x2B4C	0x2102    MOVS	R1, #2
0x2B4E	0xF7FFFDC1  BL	_mikrobus_logWrite+0
;Click_Color8_STM.c, 139 :: 		Delay_ms( 1000 );
0x2B52	0xF64127FF  MOVW	R7, #6911
0x2B56	0xF2C007B7  MOVT	R7, #183
L_applicationTask13:
0x2B5A	0x1E7F    SUBS	R7, R7, #1
0x2B5C	0xD1FD    BNE	L_applicationTask13
0x2B5E	0xBF00    NOP
0x2B60	0xBF00    NOP
0x2B62	0xBF00    NOP
0x2B64	0xBF00    NOP
0x2B66	0xBF00    NOP
;Click_Color8_STM.c, 140 :: 		}
L_end_applicationTask:
0x2B68	0xF8DDE000  LDR	LR, [SP, #0]
0x2B6C	0xB001    ADD	SP, SP, #4
0x2B6E	0x4770    BX	LR
0x2B70	0x012C2000  	_RED_data+0
0x2B74	0x012E2000  	_demoText+0
0x2B78	0x00312000  	?lstr3_Click_Color8_STM+0
0x2B7C	0x01602000  	_GREEN_data+0
0x2B80	0x003E2000  	?lstr4_Click_Color8_STM+0
0x2B84	0x01622000  	_BLUE_data+0
0x2B88	0x004D2000  	?lstr5_Click_Color8_STM+0
0x2B8C	0x01642000  	_IR_data+0
0x2B90	0x005B2000  	?lstr6_Click_Color8_STM+0
0x2B94	0x01682000  	_colorValue+0
0x2B98	0x00672000  	?lstr7_Click_Color8_STM+0
0x2B9C	0x011F2000  	_isColor+0
0x2BA0	0x007B2000  	?lstr8_Click_Color8_STM+0
0x2BA4	0x008E2000  	?lstr9_Click_Color8_STM+0
0x2BA8	0x009E2000  	?lstr10_Click_Color8_STM+0
0x2BAC	0x00AF2000  	?lstr11_Click_Color8_STM+0
0x2BB0	0x00C22000  	?lstr12_Click_Color8_STM+0
0x2BB4	0x00D32000  	?lstr13_Click_Color8_STM+0
0x2BB8	0x00E42000  	?lstr14_Click_Color8_STM+0
0x2BBC	0x00F62000  	?lstr15_Click_Color8_STM+0
0x2BC0	0x01092000  	?lstr16_Click_Color8_STM+0
; end of _applicationTask
_color8_readData:
;__color8_driver.c, 247 :: 		uint16_t color8_readData(uint8_t regData)
; regData start address is: 0 (R0)
0x266C	0xB082    SUB	SP, SP, #8
0x266E	0xF8CDE000  STR	LR, [SP, #0]
0x2672	0xB2C2    UXTB	R2, R0
; regData end address is: 0 (R0)
; regData start address is: 8 (R2)
;__color8_driver.c, 251 :: 		readData = color8_readByte(regData + 1);
0x2674	0x1C51    ADDS	R1, R2, #1
0x2676	0xF88D2004  STRB	R2, [SP, #4]
0x267A	0xB2C8    UXTB	R0, R1
0x267C	0xF7FFFA46  BL	_color8_readByte+0
0x2680	0xF89D2004  LDRB	R2, [SP, #4]
; readData start address is: 0 (R0)
;__color8_driver.c, 252 :: 		readData <<= 8;
0x2684	0x0201    LSLS	R1, R0, #8
; readData end address is: 0 (R0)
; readData start address is: 12 (R3)
0x2686	0xB28B    UXTH	R3, R1
;__color8_driver.c, 253 :: 		readData |= color8_readByte(regData);
0x2688	0xF8AD3004  STRH	R3, [SP, #4]
; regData end address is: 8 (R2)
0x268C	0xB2D0    UXTB	R0, R2
0x268E	0xF7FFFA3D  BL	_color8_readByte+0
0x2692	0xF8BD3004  LDRH	R3, [SP, #4]
0x2696	0xEA430100  ORR	R1, R3, R0, LSL #0
; readData end address is: 12 (R3)
;__color8_driver.c, 255 :: 		return readData;
0x269A	0xB288    UXTH	R0, R1
;__color8_driver.c, 256 :: 		}
L_end_color8_readData:
0x269C	0xF8DDE000  LDR	LR, [SP, #0]
0x26A0	0xB002    ADD	SP, SP, #8
0x26A2	0x4770    BX	LR
; end of _color8_readData
_color8_readByte:
;__color8_driver.c, 228 :: 		uint8_t color8_readByte(uint8_t reg)
; reg start address is: 0 (R0)
0x1B0C	0xB082    SUB	SP, SP, #8
0x1B0E	0xF8CDE000  STR	LR, [SP, #0]
; reg end address is: 0 (R0)
; reg start address is: 0 (R0)
;__color8_driver.c, 233 :: 		writeReg[ 0 ] = reg;
0x1B12	0xA901    ADD	R1, SP, #4
0x1B14	0x7008    STRB	R0, [R1, #0]
; reg end address is: 0 (R0)
;__color8_driver.c, 235 :: 		hal_i2cStart();
0x1B16	0xF7FFFF9D  BL	__color8_driver_hal_i2cStart+0
;__color8_driver.c, 236 :: 		hal_i2cWrite(_slaveAddress, writeReg, 1, END_MODE_RESTART);
0x1B1A	0xAA01    ADD	R2, SP, #4
0x1B1C	0x490C    LDR	R1, [PC, #48]
0x1B1E	0x7809    LDRB	R1, [R1, #0]
0x1B20	0x2300    MOVS	R3, #0
0x1B22	0xB2C8    UXTB	R0, R1
0x1B24	0x4611    MOV	R1, R2
0x1B26	0x2201    MOVS	R2, #1
0x1B28	0xF7FFFF80  BL	__color8_driver_hal_i2cWrite+0
;__color8_driver.c, 237 :: 		hal_i2cRead(_slaveAddress, readReg, 1, END_MODE_STOP);
0x1B2C	0xF10D0205  ADD	R2, SP, #5
0x1B30	0x4907    LDR	R1, [PC, #28]
0x1B32	0x7809    LDRB	R1, [R1, #0]
0x1B34	0x2301    MOVS	R3, #1
0x1B36	0xB2C8    UXTB	R0, R1
0x1B38	0x4611    MOV	R1, R2
0x1B3A	0x2201    MOVS	R2, #1
0x1B3C	0xF7FFFCAA  BL	__color8_driver_hal_i2cRead+0
;__color8_driver.c, 239 :: 		return readReg[ 0 ];
0x1B40	0xF10D0105  ADD	R1, SP, #5
0x1B44	0x7809    LDRB	R1, [R1, #0]
0x1B46	0xB2C8    UXTB	R0, R1
;__color8_driver.c, 240 :: 		}
L_end_color8_readByte:
0x1B48	0xF8DDE000  LDR	LR, [SP, #0]
0x1B4C	0xB002    ADD	SP, SP, #8
0x1B4E	0x4770    BX	LR
0x1B50	0x01662000  	__color8_driver__slaveAddress+0
; end of _color8_readByte
__color8_driver_hal_i2cRead:
;__hal_stm32.c, 106 :: 		static int hal_i2cRead(uint8_t slaveAddress, uint8_t *pBuf, uint16_t nBytes, uint8_t endMode)
; endMode start address is: 12 (R3)
; nBytes start address is: 8 (R2)
; pBuf start address is: 4 (R1)
; slaveAddress start address is: 0 (R0)
0x1494	0xB082    SUB	SP, SP, #8
0x1496	0xF8CDE000  STR	LR, [SP, #0]
; endMode end address is: 12 (R3)
; nBytes end address is: 8 (R2)
; pBuf end address is: 4 (R1)
; slaveAddress end address is: 0 (R0)
; slaveAddress start address is: 0 (R0)
; pBuf start address is: 4 (R1)
; nBytes start address is: 8 (R2)
; endMode start address is: 12 (R3)
;__hal_stm32.c, 108 :: 		int res = 0;
0x149A	0xF2400400  MOVW	R4, #0
0x149E	0xF8AD4004  STRH	R4, [SP, #4]
;__hal_stm32.c, 110 :: 		fp_i2cRead(slaveAddress, ptr, nBytes, endMode);
; endMode end address is: 12 (R3)
; nBytes end address is: 8 (R2)
; pBuf end address is: 4 (R1)
; slaveAddress end address is: 0 (R0)
0x14A2	0x4C04    LDR	R4, [PC, #16]
0x14A4	0x6824    LDR	R4, [R4, #0]
0x14A6	0x47A0    BLX	R4
;__hal_stm32.c, 111 :: 		return res;
0x14A8	0xF9BD0004  LDRSH	R0, [SP, #4]
;__hal_stm32.c, 112 :: 		}
L_end_hal_i2cRead:
0x14AC	0xF8DDE000  LDR	LR, [SP, #0]
0x14B0	0xB002    ADD	SP, SP, #8
0x14B2	0x4770    BX	LR
0x14B4	0x01702000  	__color8_driver_fp_i2cRead+0
; end of __color8_driver_hal_i2cRead
_I2C1_Read:
;__Lib_I2C_12.c, 552 :: 		
; END_mode start address is: 12 (R3)
; count start address is: 8 (R2)
; buf start address is: 4 (R1)
; slave_address start address is: 0 (R0)
0x138C	0xB081    SUB	SP, SP, #4
0x138E	0xF8CDE000  STR	LR, [SP, #0]
; END_mode end address is: 12 (R3)
; count end address is: 8 (R2)
; buf end address is: 4 (R1)
; slave_address end address is: 0 (R0)
; slave_address start address is: 0 (R0)
; buf start address is: 4 (R1)
; count start address is: 8 (R2)
; END_mode start address is: 12 (R3)
;__Lib_I2C_12.c, 553 :: 		
0x1392	0xB408    PUSH	(R3)
; count end address is: 8 (R2)
0x1394	0x4613    MOV	R3, R2
0x1396	0x460A    MOV	R2, R1
; buf end address is: 4 (R1)
0x1398	0xB2C1    UXTB	R1, R0
; slave_address end address is: 0 (R0)
0x139A	0x4804    LDR	R0, [PC, #16]
; END_mode end address is: 12 (R3)
0x139C	0xF7FEFFAA  BL	_I2Cx_Read+0
0x13A0	0xB001    ADD	SP, SP, #4
;__Lib_I2C_12.c, 554 :: 		
L_end_I2C1_Read:
0x13A2	0xF8DDE000  LDR	LR, [SP, #0]
0x13A6	0xB001    ADD	SP, SP, #4
0x13A8	0x4770    BX	LR
0x13AA	0xBF00    NOP
0x13AC	0x54004000  	I2C1_CR1+0
; end of _I2C1_Read
_I2Cx_Read:
;__Lib_I2C_12.c, 319 :: 		
; count start address is: 12 (R3)
; buf start address is: 8 (R2)
; slave_address start address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x02F4	0xB082    SUB	SP, SP, #8
0x02F6	0xF8CDE000  STR	LR, [SP, #0]
0x02FA	0xB2CF    UXTB	R7, R1
0x02FC	0x4601    MOV	R1, R0
0x02FE	0x4698    MOV	R8, R3
; count end address is: 12 (R3)
; buf end address is: 8 (R2)
; slave_address end address is: 4 (R1)
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 4 (R1)
; slave_address start address is: 28 (R7)
; buf start address is: 8 (R2)
; count start address is: 32 (R8)
; END_mode start address is: 12 (R3)
0x0300	0x9B02    LDR	R3, [SP, #8]
;__Lib_I2C_12.c, 321 :: 		
; i start address is: 24 (R6)
0x0302	0xF04F0600  MOV	R6, #0
;__Lib_I2C_12.c, 322 :: 		
; timeout start address is: 20 (R5)
0x0306	0xF04F0500  MOV	R5, #0
;__Lib_I2C_12.c, 325 :: 		
0x030A	0x4CC4    LDR	R4, [PC, #784]
0x030C	0x42A1    CMP	R1, R4
0x030E	0xD107    BNE	L_I2Cx_Read40
; timeout end address is: 20 (R5)
;__Lib_I2C_12.c, 326 :: 		
0x0310	0x4CC3    LDR	R4, [PC, #780]
; timeout start address is: 36 (R9)
0x0312	0xF8D49000  LDR	R9, [R4, #0]
;__Lib_I2C_12.c, 327 :: 		
0x0316	0x4CC3    LDR	R4, [PC, #780]
0x0318	0x6825    LDR	R5, [R4, #0]
0x031A	0x4CC3    LDR	R4, [PC, #780]
0x031C	0x6025    STR	R5, [R4, #0]
;__Lib_I2C_12.c, 328 :: 		
; timeout end address is: 36 (R9)
0x031E	0xE00B    B	L_I2Cx_Read41
L_I2Cx_Read40:
;__Lib_I2C_12.c, 329 :: 		
; timeout start address is: 20 (R5)
0x0320	0x4CC2    LDR	R4, [PC, #776]
0x0322	0x42A1    CMP	R1, R4
0x0324	0xD107    BNE	L__I2Cx_Read130
; timeout end address is: 20 (R5)
;__Lib_I2C_12.c, 330 :: 		
0x0326	0x4CC2    LDR	R4, [PC, #776]
; timeout start address is: 0 (R0)
0x0328	0x6820    LDR	R0, [R4, #0]
;__Lib_I2C_12.c, 331 :: 		
0x032A	0x4CC2    LDR	R4, [PC, #776]
0x032C	0x6825    LDR	R5, [R4, #0]
0x032E	0x4CBE    LDR	R4, [PC, #760]
0x0330	0x6025    STR	R5, [R4, #0]
; timeout end address is: 0 (R0)
0x0332	0x4681    MOV	R9, R0
;__Lib_I2C_12.c, 332 :: 		
0x0334	0xE000    B	L_I2Cx_Read42
L__I2Cx_Read130:
;__Lib_I2C_12.c, 329 :: 		
0x0336	0x46A9    MOV	R9, R5
;__Lib_I2C_12.c, 332 :: 		
L_I2Cx_Read42:
; timeout start address is: 36 (R9)
; timeout end address is: 36 (R9)
L_I2Cx_Read41:
;__Lib_I2C_12.c, 334 :: 		
; timeout start address is: 36 (R9)
0x0338	0x4CBF    LDR	R4, [PC, #764]
0x033A	0xF8C49000  STR	R9, [R4, #0]
;__Lib_I2C_12.c, 336 :: 		
0x033E	0xE1F4    B	L_I2Cx_Read43
; count end address is: 32 (R8)
;__Lib_I2C_12.c, 337 :: 		
L_I2Cx_Read45:
;__Lib_I2C_12.c, 338 :: 		
0x0340	0xF2010510  ADDW	R5, R1, #16
0x0344	0x007C    LSLS	R4, R7, #1
0x0346	0xB2A4    UXTH	R4, R4
; slave_address end address is: 28 (R7)
0x0348	0xF0440401  ORR	R4, R4, #1
0x034C	0xB2A4    UXTH	R4, R4
0x034E	0x602C    STR	R4, [R5, #0]
; timeout end address is: 36 (R9)
; buf end address is: 8 (R2)
; i end address is: 24 (R6)
; END_mode end address is: 12 (R3)
; I2C_BASE end address is: 4 (R1)
0x0350	0x9601    STR	R6, [SP, #4]
0x0352	0x4616    MOV	R6, R2
0x0354	0x464F    MOV	R7, R9
0x0356	0x9A01    LDR	R2, [SP, #4]
;__Lib_I2C_12.c, 339 :: 		
L_I2Cx_Read46:
; timeout start address is: 28 (R7)
; i start address is: 8 (R2)
; END_mode start address is: 12 (R3)
; buf start address is: 24 (R6)
; I2C_BASE start address is: 4 (R1)
0x0358	0xF2010414  ADDW	R4, R1, #20
0x035C	0x6825    LDR	R5, [R4, #0]
0x035E	0xF3C50440  UBFX	R4, R5, #1, #1
0x0362	0xB964    CBNZ	R4, L_I2Cx_Read47
;__Lib_I2C_12.c, 340 :: 		
0x0364	0x4CB4    LDR	R4, [PC, #720]
0x0366	0x6824    LDR	R4, [R4, #0]
0x0368	0xB144    CBZ	R4, L__I2Cx_Read131
;__Lib_I2C_12.c, 341 :: 		
0x036A	0xB927    CBNZ	R7, L_I2Cx_Read49
; i end address is: 8 (R2)
; END_mode end address is: 12 (R3)
; buf end address is: 24 (R6)
; I2C_BASE end address is: 4 (R1)
; timeout end address is: 28 (R7)
;__Lib_I2C_12.c, 342 :: 		
0x036C	0x2003    MOVS	R0, #3
0x036E	0x4CAE    LDR	R4, [PC, #696]
0x0370	0x6824    LDR	R4, [R4, #0]
0x0372	0x47A0    BLX	R4
;__Lib_I2C_12.c, 343 :: 		
0x0374	0xE1E2    B	L_end_I2Cx_Read
;__Lib_I2C_12.c, 344 :: 		
L_I2Cx_Read49:
;__Lib_I2C_12.c, 345 :: 		
; timeout start address is: 28 (R7)
; I2C_BASE start address is: 4 (R1)
; buf start address is: 24 (R6)
; END_mode start address is: 12 (R3)
; i start address is: 8 (R2)
0x0376	0x1E78    SUBS	R0, R7, #1
; timeout end address is: 28 (R7)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x0378	0x4607    MOV	R7, R0
;__Lib_I2C_12.c, 346 :: 		
0x037A	0xE7FF    B	L_I2Cx_Read48
L__I2Cx_Read131:
;__Lib_I2C_12.c, 340 :: 		
;__Lib_I2C_12.c, 346 :: 		
L_I2Cx_Read48:
;__Lib_I2C_12.c, 347 :: 		
; timeout start address is: 28 (R7)
; timeout end address is: 28 (R7)
0x037C	0xE7EC    B	L_I2Cx_Read46
L_I2Cx_Read47:
;__Lib_I2C_12.c, 348 :: 		
0x037E	0x2500    MOVS	R5, #0
0x0380	0x680C    LDR	R4, [R1, #0]
0x0382	0xF365248A  BFI	R4, R5, #10, #1
0x0386	0x600C    STR	R4, [R1, #0]
;__Lib_I2C_12.c, 349 :: 		
0x0388	0xF2010414  ADDW	R4, R1, #20
0x038C	0x6820    LDR	R0, [R4, #0]
; temp start address is: 0 (R0)
;__Lib_I2C_12.c, 350 :: 		
0x038E	0xBF00    NOP
;__Lib_I2C_12.c, 351 :: 		
0x0390	0xF2010418  ADDW	R4, R1, #24
0x0394	0x6824    LDR	R4, [R4, #0]
0x0396	0x0424    LSLS	R4, R4, #16
0x0398	0xEA400404  ORR	R4, R0, R4, LSL #0
0x039C	0x4620    MOV	R0, R4
; temp end address is: 0 (R0)
;__Lib_I2C_12.c, 352 :: 		
0x039E	0x2B01    CMP	R3, #1
0x03A0	0xD105    BNE	L_I2Cx_Read50
;__Lib_I2C_12.c, 353 :: 		
0x03A2	0x2501    MOVS	R5, #1
0x03A4	0x680C    LDR	R4, [R1, #0]
0x03A6	0xF3652449  BFI	R4, R5, #9, #1
0x03AA	0x600C    STR	R4, [R1, #0]
0x03AC	0xE004    B	L_I2Cx_Read51
L_I2Cx_Read50:
;__Lib_I2C_12.c, 355 :: 		
0x03AE	0x2501    MOVS	R5, #1
0x03B0	0x680C    LDR	R4, [R1, #0]
0x03B2	0xF3652408  BFI	R4, R5, #8, #1
0x03B6	0x600C    STR	R4, [R1, #0]
;__Lib_I2C_12.c, 356 :: 		
L_I2Cx_Read51:
;__Lib_I2C_12.c, 358 :: 		
0x03B8	0x4C9F    LDR	R4, [PC, #636]
; timeout start address is: 20 (R5)
0x03BA	0x6825    LDR	R5, [R4, #0]
; i end address is: 8 (R2)
; END_mode end address is: 12 (R3)
; buf end address is: 24 (R6)
; I2C_BASE end address is: 4 (R1)
; timeout end address is: 20 (R5)
0x03BC	0x4691    MOV	R9, R2
0x03BE	0x4698    MOV	R8, R3
0x03C0	0x4637    MOV	R7, R6
0x03C2	0x460E    MOV	R6, R1
;__Lib_I2C_12.c, 359 :: 		
L_I2Cx_Read52:
; timeout start address is: 20 (R5)
; I2C_BASE start address is: 24 (R6)
; buf start address is: 28 (R7)
; END_mode start address is: 32 (R8)
; i start address is: 36 (R9)
0x03C4	0x499D    LDR	R1, [PC, #628]
0x03C6	0x4630    MOV	R0, R6
0x03C8	0xF000F9C2  BL	_ChekXForEvent+0
0x03CC	0xB968    CBNZ	R0, L_I2Cx_Read53
;__Lib_I2C_12.c, 360 :: 		
0x03CE	0x4C9A    LDR	R4, [PC, #616]
0x03D0	0x6824    LDR	R4, [R4, #0]
0x03D2	0xB14C    CBZ	R4, L__I2Cx_Read132
;__Lib_I2C_12.c, 361 :: 		
0x03D4	0xB925    CBNZ	R5, L_I2Cx_Read55
; I2C_BASE end address is: 24 (R6)
; buf end address is: 28 (R7)
; END_mode end address is: 32 (R8)
; i end address is: 36 (R9)
; timeout end address is: 20 (R5)
;__Lib_I2C_12.c, 362 :: 		
0x03D6	0x2003    MOVS	R0, #3
0x03D8	0x4C93    LDR	R4, [PC, #588]
0x03DA	0x6824    LDR	R4, [R4, #0]
0x03DC	0x47A0    BLX	R4
;__Lib_I2C_12.c, 363 :: 		
0x03DE	0xE1AD    B	L_end_I2Cx_Read
;__Lib_I2C_12.c, 364 :: 		
L_I2Cx_Read55:
;__Lib_I2C_12.c, 365 :: 		
; timeout start address is: 20 (R5)
; i start address is: 36 (R9)
; END_mode start address is: 32 (R8)
; buf start address is: 28 (R7)
; I2C_BASE start address is: 24 (R6)
0x03E0	0x1E6C    SUBS	R4, R5, #1
; timeout end address is: 20 (R5)
; timeout start address is: 0 (R0)
0x03E2	0x4620    MOV	R0, R4
; timeout end address is: 0 (R0)
0x03E4	0x4605    MOV	R5, R0
;__Lib_I2C_12.c, 366 :: 		
0x03E6	0xE7FF    B	L_I2Cx_Read54
L__I2Cx_Read132:
;__Lib_I2C_12.c, 360 :: 		
;__Lib_I2C_12.c, 366 :: 		
L_I2Cx_Read54:
;__Lib_I2C_12.c, 367 :: 		
; timeout start address is: 20 (R5)
; timeout end address is: 20 (R5)
0x03E8	0xE7EC    B	L_I2Cx_Read52
L_I2Cx_Read53:
;__Lib_I2C_12.c, 368 :: 		
0x03EA	0xEB070509  ADD	R5, R7, R9, LSL #0
; buf end address is: 28 (R7)
; i end address is: 36 (R9)
0x03EE	0xF2060410  ADDW	R4, R6, #16
0x03F2	0x6824    LDR	R4, [R4, #0]
0x03F4	0x702C    STRB	R4, [R5, #0]
;__Lib_I2C_12.c, 369 :: 		
0x03F6	0xF1B80F01  CMP	R8, #1
0x03FA	0xD113    BNE	L_I2Cx_Read56
; END_mode end address is: 32 (R8)
;__Lib_I2C_12.c, 370 :: 		
0x03FC	0x4C8E    LDR	R4, [PC, #568]
; timeout start address is: 4 (R1)
0x03FE	0x6821    LDR	R1, [R4, #0]
; I2C_BASE end address is: 24 (R6)
; timeout end address is: 4 (R1)
0x0400	0x4630    MOV	R0, R6
;__Lib_I2C_12.c, 371 :: 		
L_I2Cx_Read57:
; timeout start address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x0402	0x6805    LDR	R5, [R0, #0]
0x0404	0xF3C52440  UBFX	R4, R5, #9, #1
0x0408	0xB95C    CBNZ	R4, L_I2Cx_Read58
;__Lib_I2C_12.c, 372 :: 		
0x040A	0x4C8B    LDR	R4, [PC, #556]
0x040C	0x6824    LDR	R4, [R4, #0]
0x040E	0xB13C    CBZ	R4, L__I2Cx_Read133
;__Lib_I2C_12.c, 373 :: 		
0x0410	0xB921    CBNZ	R1, L_I2Cx_Read60
; I2C_BASE end address is: 0 (R0)
; timeout end address is: 4 (R1)
;__Lib_I2C_12.c, 374 :: 		
0x0412	0x2003    MOVS	R0, #3
0x0414	0x4C84    LDR	R4, [PC, #528]
0x0416	0x6824    LDR	R4, [R4, #0]
0x0418	0x47A0    BLX	R4
;__Lib_I2C_12.c, 375 :: 		
0x041A	0xE18F    B	L_end_I2Cx_Read
;__Lib_I2C_12.c, 376 :: 		
L_I2Cx_Read60:
;__Lib_I2C_12.c, 377 :: 		
; timeout start address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x041C	0x1E49    SUBS	R1, R1, #1
; timeout end address is: 4 (R1)
;__Lib_I2C_12.c, 378 :: 		
0x041E	0xE7FF    B	L_I2Cx_Read59
L__I2Cx_Read133:
;__Lib_I2C_12.c, 372 :: 		
;__Lib_I2C_12.c, 378 :: 		
L_I2Cx_Read59:
;__Lib_I2C_12.c, 379 :: 		
; timeout start address is: 4 (R1)
; I2C_BASE end address is: 0 (R0)
; timeout end address is: 4 (R1)
0x0420	0xE7EF    B	L_I2Cx_Read57
L_I2Cx_Read58:
;__Lib_I2C_12.c, 380 :: 		
0x0422	0xE012    B	L_I2Cx_Read61
L_I2Cx_Read56:
;__Lib_I2C_12.c, 382 :: 		
; I2C_BASE start address is: 24 (R6)
0x0424	0x4C84    LDR	R4, [PC, #528]
; timeout start address is: 4 (R1)
0x0426	0x6821    LDR	R1, [R4, #0]
; I2C_BASE end address is: 24 (R6)
; timeout end address is: 4 (R1)
0x0428	0x4630    MOV	R0, R6
;__Lib_I2C_12.c, 383 :: 		
L_I2Cx_Read62:
; timeout start address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x042A	0x6805    LDR	R5, [R0, #0]
0x042C	0xF3C52400  UBFX	R4, R5, #8, #1
0x0430	0xB95C    CBNZ	R4, L_I2Cx_Read63
;__Lib_I2C_12.c, 384 :: 		
0x0432	0x4C81    LDR	R4, [PC, #516]
0x0434	0x6824    LDR	R4, [R4, #0]
0x0436	0xB13C    CBZ	R4, L__I2Cx_Read134
;__Lib_I2C_12.c, 385 :: 		
0x0438	0xB921    CBNZ	R1, L_I2Cx_Read65
; I2C_BASE end address is: 0 (R0)
; timeout end address is: 4 (R1)
;__Lib_I2C_12.c, 386 :: 		
0x043A	0x2003    MOVS	R0, #3
0x043C	0x4C7A    LDR	R4, [PC, #488]
0x043E	0x6824    LDR	R4, [R4, #0]
0x0440	0x47A0    BLX	R4
;__Lib_I2C_12.c, 387 :: 		
0x0442	0xE17B    B	L_end_I2Cx_Read
;__Lib_I2C_12.c, 388 :: 		
L_I2Cx_Read65:
;__Lib_I2C_12.c, 389 :: 		
; timeout start address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x0444	0x1E49    SUBS	R1, R1, #1
; timeout end address is: 4 (R1)
;__Lib_I2C_12.c, 390 :: 		
0x0446	0xE7FF    B	L_I2Cx_Read64
L__I2Cx_Read134:
;__Lib_I2C_12.c, 384 :: 		
;__Lib_I2C_12.c, 390 :: 		
L_I2Cx_Read64:
;__Lib_I2C_12.c, 391 :: 		
; timeout start address is: 4 (R1)
; I2C_BASE end address is: 0 (R0)
; timeout end address is: 4 (R1)
0x0448	0xE7EF    B	L_I2Cx_Read62
L_I2Cx_Read63:
;__Lib_I2C_12.c, 392 :: 		
L_I2Cx_Read61:
;__Lib_I2C_12.c, 393 :: 		
0x044A	0xE177    B	L_I2Cx_Read44
;__Lib_I2C_12.c, 395 :: 		
L_I2Cx_Read66:
;__Lib_I2C_12.c, 396 :: 		
; I2C_BASE start address is: 4 (R1)
; END_mode start address is: 12 (R3)
; i start address is: 24 (R6)
; buf start address is: 8 (R2)
; timeout start address is: 36 (R9)
; slave_address start address is: 28 (R7)
0x044C	0x2501    MOVS	R5, #1
0x044E	0x680C    LDR	R4, [R1, #0]
0x0450	0xF365248A  BFI	R4, R5, #10, #1
0x0454	0x600C    STR	R4, [R1, #0]
;__Lib_I2C_12.c, 397 :: 		
0x0456	0x2501    MOVS	R5, #1
0x0458	0x680C    LDR	R4, [R1, #0]
0x045A	0xF36524CB  BFI	R4, R5, #11, #1
0x045E	0x600C    STR	R4, [R1, #0]
;__Lib_I2C_12.c, 398 :: 		
0x0460	0xF2010510  ADDW	R5, R1, #16
0x0464	0x007C    LSLS	R4, R7, #1
0x0466	0xB2A4    UXTH	R4, R4
; slave_address end address is: 28 (R7)
0x0468	0xF0440401  ORR	R4, R4, #1
0x046C	0xB2A4    UXTH	R4, R4
0x046E	0x602C    STR	R4, [R5, #0]
; timeout end address is: 36 (R9)
; buf end address is: 8 (R2)
; i end address is: 24 (R6)
; END_mode end address is: 12 (R3)
; I2C_BASE end address is: 4 (R1)
0x0470	0x464F    MOV	R7, R9
;__Lib_I2C_12.c, 399 :: 		
L_I2Cx_Read67:
; timeout start address is: 28 (R7)
; i start address is: 24 (R6)
; END_mode start address is: 12 (R3)
; buf start address is: 8 (R2)
; I2C_BASE start address is: 4 (R1)
0x0472	0xF2010414  ADDW	R4, R1, #20
0x0476	0x6825    LDR	R5, [R4, #0]
0x0478	0xF3C50440  UBFX	R4, R5, #1, #1
0x047C	0xB964    CBNZ	R4, L_I2Cx_Read68
;__Lib_I2C_12.c, 400 :: 		
0x047E	0x4C6E    LDR	R4, [PC, #440]
0x0480	0x6824    LDR	R4, [R4, #0]
0x0482	0xB144    CBZ	R4, L__I2Cx_Read135
;__Lib_I2C_12.c, 401 :: 		
0x0484	0xB927    CBNZ	R7, L_I2Cx_Read70
; buf end address is: 8 (R2)
; i end address is: 24 (R6)
; END_mode end address is: 12 (R3)
; I2C_BASE end address is: 4 (R1)
; timeout end address is: 28 (R7)
;__Lib_I2C_12.c, 402 :: 		
0x0486	0x2003    MOVS	R0, #3
0x0488	0x4C67    LDR	R4, [PC, #412]
0x048A	0x6824    LDR	R4, [R4, #0]
0x048C	0x47A0    BLX	R4
;__Lib_I2C_12.c, 403 :: 		
0x048E	0xE155    B	L_end_I2Cx_Read
;__Lib_I2C_12.c, 404 :: 		
L_I2Cx_Read70:
;__Lib_I2C_12.c, 405 :: 		
; timeout start address is: 28 (R7)
; I2C_BASE start address is: 4 (R1)
; END_mode start address is: 12 (R3)
; i start address is: 24 (R6)
; buf start address is: 8 (R2)
0x0490	0x1E78    SUBS	R0, R7, #1
; timeout end address is: 28 (R7)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x0492	0x4607    MOV	R7, R0
;__Lib_I2C_12.c, 406 :: 		
0x0494	0xE7FF    B	L_I2Cx_Read69
L__I2Cx_Read135:
;__Lib_I2C_12.c, 400 :: 		
;__Lib_I2C_12.c, 406 :: 		
L_I2Cx_Read69:
;__Lib_I2C_12.c, 407 :: 		
; timeout start address is: 28 (R7)
; timeout end address is: 28 (R7)
0x0496	0xE7EC    B	L_I2Cx_Read67
L_I2Cx_Read68:
;__Lib_I2C_12.c, 408 :: 		
0x0498	0xF2010414  ADDW	R4, R1, #20
0x049C	0x6820    LDR	R0, [R4, #0]
; temp start address is: 0 (R0)
;__Lib_I2C_12.c, 409 :: 		
0x049E	0xBF00    NOP
;__Lib_I2C_12.c, 410 :: 		
0x04A0	0xF2010418  ADDW	R4, R1, #24
0x04A4	0x6824    LDR	R4, [R4, #0]
0x04A6	0x0424    LSLS	R4, R4, #16
0x04A8	0x4320    ORRS	R0, R4
; temp end address is: 0 (R0)
;__Lib_I2C_12.c, 411 :: 		
0x04AA	0x2500    MOVS	R5, #0
0x04AC	0x680C    LDR	R4, [R1, #0]
0x04AE	0xF365248A  BFI	R4, R5, #10, #1
0x04B2	0x600C    STR	R4, [R1, #0]
;__Lib_I2C_12.c, 413 :: 		
0x04B4	0x4C60    LDR	R4, [PC, #384]
; timeout start address is: 28 (R7)
0x04B6	0x6827    LDR	R7, [R4, #0]
; buf end address is: 8 (R2)
; i end address is: 24 (R6)
; END_mode end address is: 12 (R3)
; I2C_BASE end address is: 4 (R1)
; timeout end address is: 28 (R7)
;__Lib_I2C_12.c, 414 :: 		
L_I2Cx_Read71:
; timeout start address is: 28 (R7)
; I2C_BASE start address is: 4 (R1)
; buf start address is: 8 (R2)
; END_mode start address is: 12 (R3)
; i start address is: 24 (R6)
0x04B8	0xF2010414  ADDW	R4, R1, #20
0x04BC	0x6825    LDR	R5, [R4, #0]
0x04BE	0xF3C50480  UBFX	R4, R5, #2, #1
0x04C2	0xB964    CBNZ	R4, L_I2Cx_Read72
;__Lib_I2C_12.c, 415 :: 		
0x04C4	0x4C5C    LDR	R4, [PC, #368]
0x04C6	0x6824    LDR	R4, [R4, #0]
0x04C8	0xB144    CBZ	R4, L__I2Cx_Read136
;__Lib_I2C_12.c, 416 :: 		
0x04CA	0xB927    CBNZ	R7, L_I2Cx_Read74
; buf end address is: 8 (R2)
; i end address is: 24 (R6)
; END_mode end address is: 12 (R3)
; I2C_BASE end address is: 4 (R1)
; timeout end address is: 28 (R7)
;__Lib_I2C_12.c, 417 :: 		
0x04CC	0x2003    MOVS	R0, #3
0x04CE	0x4C56    LDR	R4, [PC, #344]
0x04D0	0x6824    LDR	R4, [R4, #0]
0x04D2	0x47A0    BLX	R4
;__Lib_I2C_12.c, 418 :: 		
0x04D4	0xE132    B	L_end_I2Cx_Read
;__Lib_I2C_12.c, 419 :: 		
L_I2Cx_Read74:
;__Lib_I2C_12.c, 420 :: 		
; timeout start address is: 28 (R7)
; I2C_BASE start address is: 4 (R1)
; END_mode start address is: 12 (R3)
; i start address is: 24 (R6)
; buf start address is: 8 (R2)
0x04D6	0x1E78    SUBS	R0, R7, #1
; timeout end address is: 28 (R7)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x04D8	0x4607    MOV	R7, R0
;__Lib_I2C_12.c, 421 :: 		
0x04DA	0xE7FF    B	L_I2Cx_Read73
L__I2Cx_Read136:
;__Lib_I2C_12.c, 415 :: 		
;__Lib_I2C_12.c, 421 :: 		
L_I2Cx_Read73:
;__Lib_I2C_12.c, 422 :: 		
; timeout start address is: 28 (R7)
; timeout end address is: 28 (R7)
0x04DC	0xE7EC    B	L_I2Cx_Read71
L_I2Cx_Read72:
;__Lib_I2C_12.c, 423 :: 		
0x04DE	0x2B01    CMP	R3, #1
0x04E0	0xD105    BNE	L_I2Cx_Read75
;__Lib_I2C_12.c, 424 :: 		
0x04E2	0x2501    MOVS	R5, #1
0x04E4	0x680C    LDR	R4, [R1, #0]
0x04E6	0xF3652449  BFI	R4, R5, #9, #1
0x04EA	0x600C    STR	R4, [R1, #0]
0x04EC	0xE004    B	L_I2Cx_Read76
L_I2Cx_Read75:
;__Lib_I2C_12.c, 426 :: 		
0x04EE	0x2501    MOVS	R5, #1
0x04F0	0x680C    LDR	R4, [R1, #0]
0x04F2	0xF3652408  BFI	R4, R5, #8, #1
0x04F6	0x600C    STR	R4, [R1, #0]
;__Lib_I2C_12.c, 427 :: 		
L_I2Cx_Read76:
;__Lib_I2C_12.c, 428 :: 		
0x04F8	0x1995    ADDS	R5, R2, R6
0x04FA	0xF2010410  ADDW	R4, R1, #16
0x04FE	0x6824    LDR	R4, [R4, #0]
0x0500	0x702C    STRB	R4, [R5, #0]
0x0502	0x1C74    ADDS	R4, R6, #1
; i end address is: 24 (R6)
;__Lib_I2C_12.c, 429 :: 		
0x0504	0x1915    ADDS	R5, R2, R4
; buf end address is: 8 (R2)
0x0506	0xF2010410  ADDW	R4, R1, #16
0x050A	0x6824    LDR	R4, [R4, #0]
0x050C	0x702C    STRB	R4, [R5, #0]
;__Lib_I2C_12.c, 430 :: 		
0x050E	0x2B01    CMP	R3, #1
0x0510	0xD114    BNE	L_I2Cx_Read77
; END_mode end address is: 12 (R3)
;__Lib_I2C_12.c, 431 :: 		
0x0512	0x4C49    LDR	R4, [PC, #292]
; timeout start address is: 8 (R2)
0x0514	0x6822    LDR	R2, [R4, #0]
; timeout end address is: 8 (R2)
; I2C_BASE end address is: 4 (R1)
;__Lib_I2C_12.c, 432 :: 		
L_I2Cx_Read78:
; timeout start address is: 8 (R2)
; I2C_BASE start address is: 4 (R1)
0x0516	0x680D    LDR	R5, [R1, #0]
0x0518	0xF3C52440  UBFX	R4, R5, #9, #1
0x051C	0xB964    CBNZ	R4, L_I2Cx_Read79
;__Lib_I2C_12.c, 433 :: 		
0x051E	0x4C46    LDR	R4, [PC, #280]
0x0520	0x6824    LDR	R4, [R4, #0]
0x0522	0xB144    CBZ	R4, L__I2Cx_Read137
;__Lib_I2C_12.c, 434 :: 		
0x0524	0xB922    CBNZ	R2, L_I2Cx_Read81
; timeout end address is: 8 (R2)
; I2C_BASE end address is: 4 (R1)
;__Lib_I2C_12.c, 435 :: 		
0x0526	0x2003    MOVS	R0, #3
0x0528	0x4C3F    LDR	R4, [PC, #252]
0x052A	0x6824    LDR	R4, [R4, #0]
0x052C	0x47A0    BLX	R4
;__Lib_I2C_12.c, 436 :: 		
0x052E	0xE105    B	L_end_I2Cx_Read
;__Lib_I2C_12.c, 437 :: 		
L_I2Cx_Read81:
;__Lib_I2C_12.c, 438 :: 		
; I2C_BASE start address is: 4 (R1)
; timeout start address is: 8 (R2)
0x0530	0x1E50    SUBS	R0, R2, #1
; timeout end address is: 8 (R2)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x0532	0x4602    MOV	R2, R0
;__Lib_I2C_12.c, 439 :: 		
0x0534	0xE7FF    B	L_I2Cx_Read80
L__I2Cx_Read137:
;__Lib_I2C_12.c, 433 :: 		
;__Lib_I2C_12.c, 439 :: 		
L_I2Cx_Read80:
;__Lib_I2C_12.c, 440 :: 		
; timeout start address is: 8 (R2)
; timeout end address is: 8 (R2)
0x0536	0xE7EE    B	L_I2Cx_Read78
L_I2Cx_Read79:
;__Lib_I2C_12.c, 441 :: 		
0x0538	0x4608    MOV	R0, R1
0x053A	0xE013    B	L_I2Cx_Read82
L_I2Cx_Read77:
;__Lib_I2C_12.c, 443 :: 		
0x053C	0x4C3E    LDR	R4, [PC, #248]
; timeout start address is: 8 (R2)
0x053E	0x6822    LDR	R2, [R4, #0]
; timeout end address is: 8 (R2)
; I2C_BASE end address is: 4 (R1)
;__Lib_I2C_12.c, 444 :: 		
L_I2Cx_Read83:
; timeout start address is: 8 (R2)
; I2C_BASE start address is: 4 (R1)
0x0540	0x680D    LDR	R5, [R1, #0]
0x0542	0xF3C52400  UBFX	R4, R5, #8, #1
0x0546	0xB964    CBNZ	R4, L_I2Cx_Read84
;__Lib_I2C_12.c, 445 :: 		
0x0548	0x4C3B    LDR	R4, [PC, #236]
0x054A	0x6824    LDR	R4, [R4, #0]
0x054C	0xB144    CBZ	R4, L__I2Cx_Read138
;__Lib_I2C_12.c, 446 :: 		
0x054E	0xB922    CBNZ	R2, L_I2Cx_Read86
; timeout end address is: 8 (R2)
; I2C_BASE end address is: 4 (R1)
;__Lib_I2C_12.c, 447 :: 		
0x0550	0x2003    MOVS	R0, #3
0x0552	0x4C35    LDR	R4, [PC, #212]
0x0554	0x6824    LDR	R4, [R4, #0]
0x0556	0x47A0    BLX	R4
;__Lib_I2C_12.c, 448 :: 		
0x0558	0xE0F0    B	L_end_I2Cx_Read
;__Lib_I2C_12.c, 449 :: 		
L_I2Cx_Read86:
;__Lib_I2C_12.c, 450 :: 		
; I2C_BASE start address is: 4 (R1)
; timeout start address is: 8 (R2)
0x055A	0x1E50    SUBS	R0, R2, #1
; timeout end address is: 8 (R2)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x055C	0x4602    MOV	R2, R0
;__Lib_I2C_12.c, 451 :: 		
0x055E	0xE7FF    B	L_I2Cx_Read85
L__I2Cx_Read138:
;__Lib_I2C_12.c, 445 :: 		
;__Lib_I2C_12.c, 451 :: 		
L_I2Cx_Read85:
;__Lib_I2C_12.c, 452 :: 		
; timeout start address is: 8 (R2)
; timeout end address is: 8 (R2)
0x0560	0xE7EE    B	L_I2Cx_Read83
L_I2Cx_Read84:
;__Lib_I2C_12.c, 453 :: 		
0x0562	0x4608    MOV	R0, R1
L_I2Cx_Read82:
; I2C_BASE end address is: 4 (R1)
;__Lib_I2C_12.c, 455 :: 		
; I2C_BASE start address is: 0 (R0)
0x0564	0x2500    MOVS	R5, #0
0x0566	0x6804    LDR	R4, [R0, #0]
0x0568	0xF36524CB  BFI	R4, R5, #11, #1
0x056C	0x6004    STR	R4, [R0, #0]
; I2C_BASE end address is: 0 (R0)
;__Lib_I2C_12.c, 457 :: 		
0x056E	0xE0E5    B	L_I2Cx_Read44
;__Lib_I2C_12.c, 459 :: 		
L_I2Cx_Read87:
;__Lib_I2C_12.c, 460 :: 		
; I2C_BASE start address is: 4 (R1)
; END_mode start address is: 12 (R3)
; buf start address is: 8 (R2)
; timeout start address is: 36 (R9)
; count start address is: 32 (R8)
; slave_address start address is: 28 (R7)
0x0570	0x2501    MOVS	R5, #1
0x0572	0x680C    LDR	R4, [R1, #0]
0x0574	0xF365248A  BFI	R4, R5, #10, #1
0x0578	0x600C    STR	R4, [R1, #0]
;__Lib_I2C_12.c, 461 :: 		
0x057A	0xF2010510  ADDW	R5, R1, #16
0x057E	0x007C    LSLS	R4, R7, #1
0x0580	0xB2A4    UXTH	R4, R4
; slave_address end address is: 28 (R7)
0x0582	0xF0440401  ORR	R4, R4, #1
0x0586	0xB2A4    UXTH	R4, R4
0x0588	0x602C    STR	R4, [R5, #0]
; count end address is: 32 (R8)
; timeout end address is: 36 (R9)
; buf end address is: 8 (R2)
; END_mode end address is: 12 (R3)
; I2C_BASE end address is: 4 (R1)
0x058A	0x4646    MOV	R6, R8
0x058C	0x46C8    MOV	R8, R9
0x058E	0x4689    MOV	R9, R1
0x0590	0x4617    MOV	R7, R2
0x0592	0x461D    MOV	R5, R3
;__Lib_I2C_12.c, 462 :: 		
L_I2Cx_Read88:
; timeout start address is: 32 (R8)
; END_mode start address is: 20 (R5)
; count start address is: 24 (R6)
; buf start address is: 28 (R7)
; I2C_BASE start address is: 36 (R9)
0x0594	0x492A    LDR	R1, [PC, #168]
0x0596	0x4648    MOV	R0, R9
0x0598	0xF000F8DA  BL	_ChekXForEvent+0
0x059C	0xB978    CBNZ	R0, L_I2Cx_Read89
;__Lib_I2C_12.c, 463 :: 		
0x059E	0x4C26    LDR	R4, [PC, #152]
0x05A0	0x6824    LDR	R4, [R4, #0]
0x05A2	0xB15C    CBZ	R4, L__I2Cx_Read139
;__Lib_I2C_12.c, 464 :: 		
0x05A4	0xF1B80F00  CMP	R8, #0
0x05A8	0xD104    BNE	L_I2Cx_Read91
; END_mode end address is: 20 (R5)
; count end address is: 24 (R6)
; I2C_BASE end address is: 36 (R9)
; timeout end address is: 32 (R8)
; buf end address is: 28 (R7)
;__Lib_I2C_12.c, 465 :: 		
0x05AA	0x2003    MOVS	R0, #3
0x05AC	0x4C1E    LDR	R4, [PC, #120]
0x05AE	0x6824    LDR	R4, [R4, #0]
0x05B0	0x47A0    BLX	R4
;__Lib_I2C_12.c, 466 :: 		
0x05B2	0xE0C3    B	L_end_I2Cx_Read
;__Lib_I2C_12.c, 467 :: 		
L_I2Cx_Read91:
;__Lib_I2C_12.c, 468 :: 		
; buf start address is: 28 (R7)
; timeout start address is: 32 (R8)
; I2C_BASE start address is: 36 (R9)
; count start address is: 24 (R6)
; END_mode start address is: 20 (R5)
0x05B4	0xF1A80001  SUB	R0, R8, #1
; timeout end address is: 32 (R8)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x05B8	0x4680    MOV	R8, R0
;__Lib_I2C_12.c, 469 :: 		
0x05BA	0xE7FF    B	L_I2Cx_Read90
L__I2Cx_Read139:
;__Lib_I2C_12.c, 463 :: 		
;__Lib_I2C_12.c, 469 :: 		
L_I2Cx_Read90:
;__Lib_I2C_12.c, 470 :: 		
; timeout start address is: 32 (R8)
; timeout end address is: 32 (R8)
0x05BC	0xE7EA    B	L_I2Cx_Read88
L_I2Cx_Read89:
;__Lib_I2C_12.c, 471 :: 		
; i start address is: 4 (R1)
0x05BE	0x2100    MOVS	R1, #0
; END_mode end address is: 20 (R5)
; count end address is: 24 (R6)
; I2C_BASE end address is: 36 (R9)
; i end address is: 4 (R1)
; buf end address is: 28 (R7)
0x05C0	0x46A8    MOV	R8, R5
0x05C2	0x464A    MOV	R2, R9
0x05C4	0x46B1    MOV	R9, R6
0x05C6	0x463B    MOV	R3, R7
;__Lib_I2C_12.c, 472 :: 		
L_I2Cx_Read92:
; i start address is: 4 (R1)
; I2C_BASE start address is: 8 (R2)
; buf start address is: 12 (R3)
; count start address is: 36 (R9)
; END_mode start address is: 32 (R8)
0x05C8	0xF1A90403  SUB	R4, R9, #3
0x05CC	0x42A1    CMP	R1, R4
0x05CE	0xD222    BCS	L_I2Cx_Read93
;__Lib_I2C_12.c, 473 :: 		
0x05D0	0x4C19    LDR	R4, [PC, #100]
; timeout start address is: 20 (R5)
0x05D2	0x6825    LDR	R5, [R4, #0]
; buf end address is: 12 (R3)
; count end address is: 36 (R9)
; i end address is: 4 (R1)
; I2C_BASE end address is: 8 (R2)
; END_mode end address is: 32 (R8)
; timeout end address is: 20 (R5)
0x05D4	0x468A    MOV	R10, R1
0x05D6	0x4617    MOV	R7, R2
0x05D8	0x461E    MOV	R6, R3
;__Lib_I2C_12.c, 474 :: 		
L_I2Cx_Read94:
; timeout start address is: 20 (R5)
; END_mode start address is: 32 (R8)
; count start address is: 36 (R9)
; buf start address is: 24 (R6)
; I2C_BASE start address is: 28 (R7)
; i start address is: 40 (R10)
0x05DA	0x4918    LDR	R1, [PC, #96]
0x05DC	0x4638    MOV	R0, R7
0x05DE	0xF000F8B7  BL	_ChekXForEvent+0
0x05E2	0xB960    CBNZ	R0, L_I2Cx_Read95
;__Lib_I2C_12.c, 475 :: 		
0x05E4	0x4C14    LDR	R4, [PC, #80]
0x05E6	0x6824    LDR	R4, [R4, #0]
0x05E8	0xB144    CBZ	R4, L__I2Cx_Read140
;__Lib_I2C_12.c, 476 :: 		
0x05EA	0xB925    CBNZ	R5, L_I2Cx_Read97
; count end address is: 36 (R9)
; I2C_BASE end address is: 28 (R7)
; i end address is: 40 (R10)
; buf end address is: 24 (R6)
; END_mode end address is: 32 (R8)
; timeout end address is: 20 (R5)
;__Lib_I2C_12.c, 477 :: 		
0x05EC	0x2003    MOVS	R0, #3
0x05EE	0x4C0E    LDR	R4, [PC, #56]
0x05F0	0x6824    LDR	R4, [R4, #0]
0x05F2	0x47A0    BLX	R4
;__Lib_I2C_12.c, 478 :: 		
0x05F4	0xE0A2    B	L_end_I2Cx_Read
;__Lib_I2C_12.c, 479 :: 		
L_I2Cx_Read97:
;__Lib_I2C_12.c, 480 :: 		
; timeout start address is: 20 (R5)
; END_mode start address is: 32 (R8)
; buf start address is: 24 (R6)
; i start address is: 40 (R10)
; I2C_BASE start address is: 28 (R7)
; count start address is: 36 (R9)
0x05F6	0x1E68    SUBS	R0, R5, #1
; timeout end address is: 20 (R5)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x05F8	0x4605    MOV	R5, R0
;__Lib_I2C_12.c, 481 :: 		
0x05FA	0xE7FF    B	L_I2Cx_Read96
L__I2Cx_Read140:
;__Lib_I2C_12.c, 475 :: 		
;__Lib_I2C_12.c, 481 :: 		
L_I2Cx_Read96:
;__Lib_I2C_12.c, 482 :: 		
; timeout start address is: 20 (R5)
; timeout end address is: 20 (R5)
0x05FC	0xE7ED    B	L_I2Cx_Read94
L_I2Cx_Read95:
;__Lib_I2C_12.c, 483 :: 		
0x05FE	0xEB06050A  ADD	R5, R6, R10, LSL #0
0x0602	0xF2070410  ADDW	R4, R7, #16
0x0606	0x6824    LDR	R4, [R4, #0]
0x0608	0x702C    STRB	R4, [R5, #0]
0x060A	0xF10A0401  ADD	R4, R10, #1
; i end address is: 40 (R10)
; i start address is: 4 (R1)
0x060E	0x4621    MOV	R1, R4
;__Lib_I2C_12.c, 484 :: 		
; count end address is: 36 (R9)
; I2C_BASE end address is: 28 (R7)
; buf end address is: 24 (R6)
0x0610	0x4633    MOV	R3, R6
0x0612	0x463A    MOV	R2, R7
0x0614	0xE7D8    B	L_I2Cx_Read92
L_I2Cx_Read93:
;__Lib_I2C_12.c, 485 :: 		
; I2C_BASE start address is: 8 (R2)
; buf start address is: 12 (R3)
0x0616	0x4C08    LDR	R4, [PC, #32]
0x0618	0xF000B814  B	#40
0x061C	0x54004000  	I2C1_CR1+0
0x0620	0x01202000  	__Lib_I2C_12__I2C1_TIMEOUT+0
0x0624	0x01882000  	_I2C1_Timeout_Ptr+0
0x0628	0x01842000  	_I2Cx_Timeout_Ptr+0
0x062C	0x58004000  	I2C2_CR1+0
0x0630	0x01242000  	__Lib_I2C_12__I2C2_TIMEOUT+0
0x0634	0x018C2000  	_I2C2_Timeout_Ptr+0
0x0638	0x01282000  	__Lib_I2C_12__I2Cx_TIMEOUT+0
0x063C	0x00400003  	#196672
0x0640	0x00020003  	#196610
; timeout start address is: 28 (R7)
0x0644	0x6827    LDR	R7, [R4, #0]
; buf end address is: 12 (R3)
; i end address is: 4 (R1)
; I2C_BASE end address is: 8 (R2)
; timeout end address is: 28 (R7)
; END_mode end address is: 32 (R8)
0x0646	0x9301    STR	R3, [SP, #4]
0x0648	0x460B    MOV	R3, R1
0x064A	0x4616    MOV	R6, R2
0x064C	0x4642    MOV	R2, R8
0x064E	0x9901    LDR	R1, [SP, #4]
;__Lib_I2C_12.c, 486 :: 		
L_I2Cx_Read98:
; timeout start address is: 28 (R7)
; END_mode start address is: 8 (R2)
; buf start address is: 4 (R1)
; I2C_BASE start address is: 24 (R6)
; i start address is: 12 (R3)
0x0650	0xF2060414  ADDW	R4, R6, #20
0x0654	0x6825    LDR	R5, [R4, #0]
0x0656	0xF3C50480  UBFX	R4, R5, #2, #1
0x065A	0xB964    CBNZ	R4, L_I2Cx_Read99
;__Lib_I2C_12.c, 487 :: 		
0x065C	0x4C39    LDR	R4, [PC, #228]
0x065E	0x6824    LDR	R4, [R4, #0]
0x0660	0xB144    CBZ	R4, L__I2Cx_Read141
;__Lib_I2C_12.c, 488 :: 		
0x0662	0xB927    CBNZ	R7, L_I2Cx_Read101
; END_mode end address is: 8 (R2)
; i end address is: 12 (R3)
; buf end address is: 4 (R1)
; timeout end address is: 28 (R7)
; I2C_BASE end address is: 24 (R6)
;__Lib_I2C_12.c, 489 :: 		
0x0664	0x2003    MOVS	R0, #3
0x0666	0x4C38    LDR	R4, [PC, #224]
0x0668	0x6824    LDR	R4, [R4, #0]
0x066A	0x47A0    BLX	R4
;__Lib_I2C_12.c, 490 :: 		
0x066C	0xE066    B	L_end_I2Cx_Read
;__Lib_I2C_12.c, 491 :: 		
L_I2Cx_Read101:
;__Lib_I2C_12.c, 492 :: 		
; I2C_BASE start address is: 24 (R6)
; timeout start address is: 28 (R7)
; buf start address is: 4 (R1)
; i start address is: 12 (R3)
; END_mode start address is: 8 (R2)
0x066E	0x1E78    SUBS	R0, R7, #1
; timeout end address is: 28 (R7)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x0670	0x4607    MOV	R7, R0
;__Lib_I2C_12.c, 493 :: 		
0x0672	0xE7FF    B	L_I2Cx_Read100
L__I2Cx_Read141:
;__Lib_I2C_12.c, 487 :: 		
;__Lib_I2C_12.c, 493 :: 		
L_I2Cx_Read100:
;__Lib_I2C_12.c, 494 :: 		
; timeout start address is: 28 (R7)
; timeout end address is: 28 (R7)
0x0674	0xE7EC    B	L_I2Cx_Read98
L_I2Cx_Read99:
;__Lib_I2C_12.c, 495 :: 		
0x0676	0x2500    MOVS	R5, #0
0x0678	0x6834    LDR	R4, [R6, #0]
0x067A	0xF365248A  BFI	R4, R5, #10, #1
0x067E	0x6034    STR	R4, [R6, #0]
;__Lib_I2C_12.c, 496 :: 		
0x0680	0x18CD    ADDS	R5, R1, R3
0x0682	0xF2060410  ADDW	R4, R6, #16
0x0686	0x6824    LDR	R4, [R4, #0]
0x0688	0x702C    STRB	R4, [R5, #0]
0x068A	0x1C58    ADDS	R0, R3, #1
; i end address is: 12 (R3)
; i start address is: 0 (R0)
;__Lib_I2C_12.c, 498 :: 		
0x068C	0x4C2D    LDR	R4, [PC, #180]
; timeout start address is: 12 (R3)
0x068E	0x6823    LDR	R3, [R4, #0]
; END_mode end address is: 8 (R2)
; timeout end address is: 12 (R3)
; i end address is: 0 (R0)
; buf end address is: 4 (R1)
; I2C_BASE end address is: 24 (R6)
0x0690	0x4617    MOV	R7, R2
0x0692	0x4602    MOV	R2, R0
;__Lib_I2C_12.c, 499 :: 		
L_I2Cx_Read102:
; timeout start address is: 12 (R3)
; i start address is: 8 (R2)
; I2C_BASE start address is: 24 (R6)
; buf start address is: 4 (R1)
; END_mode start address is: 28 (R7)
0x0694	0xF2060414  ADDW	R4, R6, #20
0x0698	0x6825    LDR	R5, [R4, #0]
0x069A	0xF3C50480  UBFX	R4, R5, #2, #1
0x069E	0xB964    CBNZ	R4, L_I2Cx_Read103
;__Lib_I2C_12.c, 500 :: 		
0x06A0	0x4C28    LDR	R4, [PC, #160]
0x06A2	0x6824    LDR	R4, [R4, #0]
0x06A4	0xB144    CBZ	R4, L__I2Cx_Read142
;__Lib_I2C_12.c, 501 :: 		
0x06A6	0xB923    CBNZ	R3, L_I2Cx_Read105
; END_mode end address is: 28 (R7)
; timeout end address is: 12 (R3)
; buf end address is: 4 (R1)
; i end address is: 8 (R2)
; I2C_BASE end address is: 24 (R6)
;__Lib_I2C_12.c, 502 :: 		
0x06A8	0x2003    MOVS	R0, #3
0x06AA	0x4C27    LDR	R4, [PC, #156]
0x06AC	0x6824    LDR	R4, [R4, #0]
0x06AE	0x47A0    BLX	R4
;__Lib_I2C_12.c, 503 :: 		
0x06B0	0xE044    B	L_end_I2Cx_Read
;__Lib_I2C_12.c, 504 :: 		
L_I2Cx_Read105:
;__Lib_I2C_12.c, 505 :: 		
; I2C_BASE start address is: 24 (R6)
; i start address is: 8 (R2)
; buf start address is: 4 (R1)
; timeout start address is: 12 (R3)
; END_mode start address is: 28 (R7)
0x06B2	0x1E58    SUBS	R0, R3, #1
; timeout end address is: 12 (R3)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x06B4	0x4603    MOV	R3, R0
;__Lib_I2C_12.c, 506 :: 		
0x06B6	0xE7FF    B	L_I2Cx_Read104
L__I2Cx_Read142:
;__Lib_I2C_12.c, 500 :: 		
;__Lib_I2C_12.c, 506 :: 		
L_I2Cx_Read104:
;__Lib_I2C_12.c, 507 :: 		
; timeout start address is: 12 (R3)
; timeout end address is: 12 (R3)
0x06B8	0xE7EC    B	L_I2Cx_Read102
L_I2Cx_Read103:
;__Lib_I2C_12.c, 508 :: 		
0x06BA	0x2F01    CMP	R7, #1
0x06BC	0xD107    BNE	L_I2Cx_Read106
; END_mode end address is: 28 (R7)
;__Lib_I2C_12.c, 509 :: 		
0x06BE	0x2501    MOVS	R5, #1
0x06C0	0x6834    LDR	R4, [R6, #0]
0x06C2	0xF3652449  BFI	R4, R5, #9, #1
0x06C6	0x6034    STR	R4, [R6, #0]
0x06C8	0x4610    MOV	R0, R2
0x06CA	0x4632    MOV	R2, R6
0x06CC	0xE021    B	L_I2Cx_Read107
L_I2Cx_Read106:
;__Lib_I2C_12.c, 511 :: 		
0x06CE	0x2501    MOVS	R5, #1
0x06D0	0x6834    LDR	R4, [R6, #0]
0x06D2	0xF3652408  BFI	R4, R5, #8, #1
0x06D6	0x6034    STR	R4, [R6, #0]
;__Lib_I2C_12.c, 513 :: 		
0x06D8	0x4C1A    LDR	R4, [PC, #104]
; timeout start address is: 32 (R8)
0x06DA	0xF8D48000  LDR	R8, [R4, #0]
; timeout end address is: 32 (R8)
; buf end address is: 4 (R1)
; i end address is: 8 (R2)
; I2C_BASE end address is: 24 (R6)
0x06DE	0x4617    MOV	R7, R2
0x06E0	0x460D    MOV	R5, R1
;__Lib_I2C_12.c, 514 :: 		
L_I2Cx_Read108:
; timeout start address is: 32 (R8)
; buf start address is: 20 (R5)
; I2C_BASE start address is: 24 (R6)
; i start address is: 28 (R7)
0x06E2	0x491A    LDR	R1, [PC, #104]
0x06E4	0x4630    MOV	R0, R6
0x06E6	0xF000F833  BL	_ChekXForEvent+0
0x06EA	0xB978    CBNZ	R0, L_I2Cx_Read109
;__Lib_I2C_12.c, 515 :: 		
0x06EC	0x4C15    LDR	R4, [PC, #84]
0x06EE	0x6824    LDR	R4, [R4, #0]
0x06F0	0xB15C    CBZ	R4, L__I2Cx_Read143
;__Lib_I2C_12.c, 516 :: 		
0x06F2	0xF1B80F00  CMP	R8, #0
0x06F6	0xD104    BNE	L_I2Cx_Read111
; buf end address is: 20 (R5)
; i end address is: 28 (R7)
; timeout end address is: 32 (R8)
; I2C_BASE end address is: 24 (R6)
;__Lib_I2C_12.c, 517 :: 		
0x06F8	0x2003    MOVS	R0, #3
0x06FA	0x4C13    LDR	R4, [PC, #76]
0x06FC	0x6824    LDR	R4, [R4, #0]
0x06FE	0x47A0    BLX	R4
;__Lib_I2C_12.c, 518 :: 		
0x0700	0xE01C    B	L_end_I2Cx_Read
;__Lib_I2C_12.c, 519 :: 		
L_I2Cx_Read111:
;__Lib_I2C_12.c, 520 :: 		
; I2C_BASE start address is: 24 (R6)
; timeout start address is: 32 (R8)
; i start address is: 28 (R7)
; buf start address is: 20 (R5)
0x0702	0xF1A80001  SUB	R0, R8, #1
; timeout end address is: 32 (R8)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x0706	0x4680    MOV	R8, R0
;__Lib_I2C_12.c, 521 :: 		
0x0708	0xE7FF    B	L_I2Cx_Read110
L__I2Cx_Read143:
;__Lib_I2C_12.c, 515 :: 		
;__Lib_I2C_12.c, 521 :: 		
L_I2Cx_Read110:
;__Lib_I2C_12.c, 522 :: 		
; timeout start address is: 32 (R8)
; timeout end address is: 32 (R8)
0x070A	0xE7EA    B	L_I2Cx_Read108
L_I2Cx_Read109:
;__Lib_I2C_12.c, 523 :: 		
0x070C	0x4629    MOV	R1, R5
; i end address is: 28 (R7)
; I2C_BASE end address is: 24 (R6)
0x070E	0x4632    MOV	R2, R6
0x0710	0x4638    MOV	R0, R7
L_I2Cx_Read107:
; buf end address is: 20 (R5)
;__Lib_I2C_12.c, 524 :: 		
; i start address is: 0 (R0)
; I2C_BASE start address is: 8 (R2)
; buf start address is: 4 (R1)
0x0712	0x180D    ADDS	R5, R1, R0
0x0714	0xF2020410  ADDW	R4, R2, #16
0x0718	0x6824    LDR	R4, [R4, #0]
0x071A	0x702C    STRB	R4, [R5, #0]
0x071C	0x1C44    ADDS	R4, R0, #1
; i end address is: 0 (R0)
;__Lib_I2C_12.c, 525 :: 		
0x071E	0x190D    ADDS	R5, R1, R4
; buf end address is: 4 (R1)
0x0720	0xF2020410  ADDW	R4, R2, #16
; I2C_BASE end address is: 8 (R2)
0x0724	0x6824    LDR	R4, [R4, #0]
0x0726	0x702C    STRB	R4, [R5, #0]
;__Lib_I2C_12.c, 526 :: 		
0x0728	0xE008    B	L_I2Cx_Read44
;__Lib_I2C_12.c, 528 :: 		
L_I2Cx_Read43:
; I2C_BASE start address is: 4 (R1)
; END_mode start address is: 12 (R3)
; i start address is: 24 (R6)
; buf start address is: 8 (R2)
; timeout start address is: 36 (R9)
; count start address is: 32 (R8)
; slave_address start address is: 28 (R7)
0x072A	0xF1B80F01  CMP	R8, #1
0x072E	0xF43FAE07  BEQ	L_I2Cx_Read45
0x0732	0xF1B80F02  CMP	R8, #2
0x0736	0xF43FAE89  BEQ	L_I2Cx_Read66
; i end address is: 24 (R6)
0x073A	0xE719    B	L_I2Cx_Read87
; slave_address end address is: 28 (R7)
; count end address is: 32 (R8)
; timeout end address is: 36 (R9)
; buf end address is: 8 (R2)
; END_mode end address is: 12 (R3)
; I2C_BASE end address is: 4 (R1)
L_I2Cx_Read44:
;__Lib_I2C_12.c, 529 :: 		
L_end_I2Cx_Read:
0x073C	0xF8DDE000  LDR	LR, [SP, #0]
0x0740	0xB002    ADD	SP, SP, #8
0x0742	0x4770    BX	LR
0x0744	0x01282000  	__Lib_I2C_12__I2Cx_TIMEOUT+0
0x0748	0x01842000  	_I2Cx_Timeout_Ptr+0
0x074C	0x00010003  	#196609
; end of _I2Cx_Read
_I2C2_Read:
;__Lib_I2C_12.c, 582 :: 		
; END_mode start address is: 12 (R3)
; count start address is: 8 (R2)
; buf start address is: 4 (R1)
; slave_address start address is: 0 (R0)
0x13B0	0xB081    SUB	SP, SP, #4
0x13B2	0xF8CDE000  STR	LR, [SP, #0]
; END_mode end address is: 12 (R3)
; count end address is: 8 (R2)
; buf end address is: 4 (R1)
; slave_address end address is: 0 (R0)
; slave_address start address is: 0 (R0)
; buf start address is: 4 (R1)
; count start address is: 8 (R2)
; END_mode start address is: 12 (R3)
;__Lib_I2C_12.c, 583 :: 		
0x13B6	0xB408    PUSH	(R3)
; count end address is: 8 (R2)
0x13B8	0x4613    MOV	R3, R2
0x13BA	0x460A    MOV	R2, R1
; buf end address is: 4 (R1)
0x13BC	0xB2C1    UXTB	R1, R0
; slave_address end address is: 0 (R0)
0x13BE	0x4804    LDR	R0, [PC, #16]
; END_mode end address is: 12 (R3)
0x13C0	0xF7FEFF98  BL	_I2Cx_Read+0
0x13C4	0xB001    ADD	SP, SP, #4
;__Lib_I2C_12.c, 584 :: 		
L_end_I2C2_Read:
0x13C6	0xF8DDE000  LDR	LR, [SP, #0]
0x13CA	0xB001    ADD	SP, SP, #4
0x13CC	0x4770    BX	LR
0x13CE	0xBF00    NOP
0x13D0	0x58004000  	I2C2_CR1+0
; end of _I2C2_Read
_IntToStr:
;__Lib_Conversions.c, 211 :: 		
; output start address is: 4 (R1)
; input start address is: 0 (R0)
0x27F8	0xB081    SUB	SP, SP, #4
0x27FA	0xF8CDE000  STR	LR, [SP, #0]
0x27FE	0x460E    MOV	R6, R1
; output end address is: 4 (R1)
; input end address is: 0 (R0)
; input start address is: 0 (R0)
; output start address is: 24 (R6)
;__Lib_Conversions.c, 217 :: 		
; negative start address is: 4 (R1)
0x2800	0x2100    MOVS	R1, #0
;__Lib_Conversions.c, 218 :: 		
; inword start address is: 12 (R3)
0x2802	0xB283    UXTH	R3, R0
;__Lib_Conversions.c, 219 :: 		
0x2804	0x2800    CMP	R0, #0
0x2806	0xDA05    BGE	L__IntToStr165
; inword end address is: 12 (R3)
;__Lib_Conversions.c, 220 :: 		
0x2808	0x2101    MOVS	R1, #1
;__Lib_Conversions.c, 221 :: 		
0x280A	0x4240    RSBS	R0, R0, #0
0x280C	0xB280    UXTH	R0, R0
; input end address is: 0 (R0)
; inword start address is: 0 (R0)
0x280E	0xB280    UXTH	R0, R0
; negative end address is: 4 (R1)
; inword end address is: 0 (R0)
0x2810	0xB28F    UXTH	R7, R1
;__Lib_Conversions.c, 222 :: 		
0x2812	0xE001    B	L_IntToStr37
L__IntToStr165:
;__Lib_Conversions.c, 219 :: 		
0x2814	0xB298    UXTH	R0, R3
0x2816	0xB28F    UXTH	R7, R1
;__Lib_Conversions.c, 222 :: 		
L_IntToStr37:
;__Lib_Conversions.c, 223 :: 		
; inword start address is: 0 (R0)
; negative start address is: 28 (R7)
0x2818	0x4631    MOV	R1, R6
; inword end address is: 0 (R0)
0x281A	0xF7FFF99B  BL	_WordToStr+0
;__Lib_Conversions.c, 225 :: 		
; i start address is: 4 (R1)
0x281E	0x2106    MOVS	R1, #6
; output end address is: 24 (R6)
; negative end address is: 28 (R7)
; i end address is: 4 (R1)
0x2820	0x4634    MOV	R4, R6
0x2822	0xB2B8    UXTH	R0, R7
;__Lib_Conversions.c, 226 :: 		
L_IntToStr38:
; i start address is: 4 (R1)
; negative start address is: 0 (R0)
; output start address is: 16 (R4)
0x2824	0x2900    CMP	R1, #0
0x2826	0xD908    BLS	L_IntToStr39
;__Lib_Conversions.c, 227 :: 		
0x2828	0x1863    ADDS	R3, R4, R1
0x282A	0x1E4A    SUBS	R2, R1, #1
0x282C	0xB292    UXTH	R2, R2
0x282E	0x18A2    ADDS	R2, R4, R2
0x2830	0x7812    LDRB	R2, [R2, #0]
0x2832	0x701A    STRB	R2, [R3, #0]
;__Lib_Conversions.c, 228 :: 		
0x2834	0x1E49    SUBS	R1, R1, #1
0x2836	0xB289    UXTH	R1, R1
;__Lib_Conversions.c, 229 :: 		
; i end address is: 4 (R1)
0x2838	0xE7F4    B	L_IntToStr38
L_IntToStr39:
;__Lib_Conversions.c, 230 :: 		
0x283A	0x2220    MOVS	R2, #32
0x283C	0x7022    STRB	R2, [R4, #0]
;__Lib_Conversions.c, 231 :: 		
0x283E	0xB170    CBZ	R0, L_IntToStr40
; negative end address is: 0 (R0)
;__Lib_Conversions.c, 232 :: 		
; i start address is: 0 (R0)
0x2840	0x2000    MOVS	R0, #0
; output end address is: 16 (R4)
; i end address is: 0 (R0)
0x2842	0xB281    UXTH	R1, R0
0x2844	0x4620    MOV	R0, R4
;__Lib_Conversions.c, 233 :: 		
L_IntToStr41:
; i start address is: 4 (R1)
; output start address is: 0 (R0)
0x2846	0x1842    ADDS	R2, R0, R1
0x2848	0x7812    LDRB	R2, [R2, #0]
0x284A	0x2A20    CMP	R2, #32
0x284C	0xD102    BNE	L_IntToStr42
0x284E	0x1C49    ADDS	R1, R1, #1
0x2850	0xB289    UXTH	R1, R1
0x2852	0xE7F8    B	L_IntToStr41
L_IntToStr42:
;__Lib_Conversions.c, 234 :: 		
0x2854	0x1E4A    SUBS	R2, R1, #1
0x2856	0xB292    UXTH	R2, R2
; i end address is: 4 (R1)
;__Lib_Conversions.c, 235 :: 		
0x2858	0x1883    ADDS	R3, R0, R2
; output end address is: 0 (R0)
0x285A	0x222D    MOVS	R2, #45
0x285C	0x701A    STRB	R2, [R3, #0]
L_IntToStr40:
;__Lib_Conversions.c, 236 :: 		
L_end_IntToStr:
0x285E	0xF8DDE000  LDR	LR, [SP, #0]
0x2862	0xB001    ADD	SP, SP, #4
0x2864	0x4770    BX	LR
; end of _IntToStr
_WordToStr:
;__Lib_Conversions.c, 114 :: 		
; output start address is: 4 (R1)
; input start address is: 0 (R0)
0x1B54	0xB081    SUB	SP, SP, #4
0x1B56	0x460A    MOV	R2, R1
0x1B58	0xB281    UXTH	R1, R0
; output end address is: 4 (R1)
; input end address is: 0 (R0)
; input start address is: 4 (R1)
; output start address is: 8 (R2)
;__Lib_Conversions.c, 119 :: 		
; len start address is: 0 (R0)
0x1B5A	0x2000    MOVS	R0, #0
; input end address is: 4 (R1)
; output end address is: 8 (R2)
; len end address is: 0 (R0)
0x1B5C	0xB28D    UXTH	R5, R1
0x1B5E	0x4611    MOV	R1, R2
L_WordToStr11:
; len start address is: 0 (R0)
; output start address is: 4 (R1)
; input start address is: 20 (R5)
0x1B60	0x2805    CMP	R0, #5
0x1B62	0xD205    BCS	L_WordToStr12
;__Lib_Conversions.c, 120 :: 		
0x1B64	0x180B    ADDS	R3, R1, R0
0x1B66	0x2220    MOVS	R2, #32
0x1B68	0x701A    STRB	R2, [R3, #0]
;__Lib_Conversions.c, 119 :: 		
0x1B6A	0x1C40    ADDS	R0, R0, #1
0x1B6C	0xB2C0    UXTB	R0, R0
;__Lib_Conversions.c, 120 :: 		
0x1B6E	0xE7F7    B	L_WordToStr11
L_WordToStr12:
;__Lib_Conversions.c, 121 :: 		
0x1B70	0x180B    ADDS	R3, R1, R0
0x1B72	0x2200    MOVS	R2, #0
0x1B74	0x701A    STRB	R2, [R3, #0]
0x1B76	0x1E40    SUBS	R0, R0, #1
0x1B78	0xB2C0    UXTB	R0, R0
; output end address is: 4 (R1)
; len end address is: 0 (R0)
;__Lib_Conversions.c, 123 :: 		
L_WordToStr14:
;__Lib_Conversions.c, 124 :: 		
; len start address is: 0 (R0)
; input start address is: 20 (R5)
; output start address is: 4 (R1)
0x1B7A	0x180C    ADDS	R4, R1, R0
0x1B7C	0x230A    MOVS	R3, #10
0x1B7E	0xFBB5F2F3  UDIV	R2, R5, R3
0x1B82	0xFB035212  MLS	R2, R3, R2, R5
0x1B86	0xB292    UXTH	R2, R2
0x1B88	0x3230    ADDS	R2, #48
0x1B8A	0x7022    STRB	R2, [R4, #0]
;__Lib_Conversions.c, 125 :: 		
0x1B8C	0x220A    MOVS	R2, #10
0x1B8E	0xFBB5F2F2  UDIV	R2, R5, R2
0x1B92	0xB292    UXTH	R2, R2
0x1B94	0xB295    UXTH	R5, R2
; input end address is: 20 (R5)
;__Lib_Conversions.c, 126 :: 		
0x1B96	0xB902    CBNZ	R2, L_WordToStr16
; output end address is: 4 (R1)
; input end address is: 20 (R5)
; len end address is: 0 (R0)
;__Lib_Conversions.c, 127 :: 		
0x1B98	0xE002    B	L_WordToStr15
L_WordToStr16:
;__Lib_Conversions.c, 128 :: 		
; len start address is: 0 (R0)
; input start address is: 20 (R5)
; output start address is: 4 (R1)
0x1B9A	0x1E40    SUBS	R0, R0, #1
0x1B9C	0xB2C0    UXTB	R0, R0
;__Lib_Conversions.c, 129 :: 		
; output end address is: 4 (R1)
; input end address is: 20 (R5)
; len end address is: 0 (R0)
0x1B9E	0xE7EC    B	L_WordToStr14
L_WordToStr15:
;__Lib_Conversions.c, 130 :: 		
L_end_WordToStr:
0x1BA0	0xB001    ADD	SP, SP, #4
0x1BA2	0x4770    BX	LR
; end of _WordToStr
_color8_getColorValue:
;__color8_driver.c, 258 :: 		float color8_getColorValue()
0x278C	0xB085    SUB	SP, SP, #20
0x278E	0xF8CDE000  STR	LR, [SP, #0]
;__color8_driver.c, 268 :: 		for (counter = 0; counter < 16; counter++)
0x2792	0x2000    MOVS	R0, #0
0x2794	0xF88D0010  STRB	R0, [SP, #16]
L_color8_getColorValue13:
0x2798	0xF89D0010  LDRB	R0, [SP, #16]
0x279C	0x2810    CMP	R0, #16
0x279E	0xD21F    BCS	L_color8_getColorValue14
;__color8_driver.c, 270 :: 		Red_Ratio = color8_readData(_COLOR8_REG_RED_DATA);
0x27A0	0x2050    MOVS	R0, #80
0x27A2	0xF7FFFF63  BL	_color8_readData+0
0x27A6	0xF7FFF9FD  BL	__UnsignedIntegralToFloat+0
0x27AA	0x9001    STR	R0, [SP, #4]
;__color8_driver.c, 271 :: 		Green_Ratio = color8_readData(_COLOR8_REG_GREEN_DATA);
0x27AC	0x2052    MOVS	R0, #82
0x27AE	0xF7FFFF5D  BL	_color8_readData+0
0x27B2	0xF7FFF9F7  BL	__UnsignedIntegralToFloat+0
0x27B6	0x9002    STR	R0, [SP, #8]
;__color8_driver.c, 272 :: 		Blue_Ratio = color8_readData(_COLOR8_REG_BLUE_DATA);
0x27B8	0x2054    MOVS	R0, #84
0x27BA	0xF7FFFF57  BL	_color8_readData+0
0x27BE	0xF7FFF9F1  BL	__UnsignedIntegralToFloat+0
;__color8_driver.c, 274 :: 		ColorData = _RGB_To_HSL(Red_Ratio, Green_Ratio, Blue_Ratio);
0x27C2	0x4602    MOV	R2, R0
0x27C4	0x9902    LDR	R1, [SP, #8]
0x27C6	0x9801    LDR	R0, [SP, #4]
0x27C8	0xF7FFFA02  BL	__color8_driver__RGB_To_HSL+0
;__color8_driver.c, 275 :: 		sumColor = sumColor + ColorData;
0x27CC	0x9A03    LDR	R2, [SP, #12]
0x27CE	0xF7FEFEFF  BL	__Add_FP+0
0x27D2	0x9003    STR	R0, [SP, #12]
;__color8_driver.c, 268 :: 		for (counter = 0; counter < 16; counter++)
0x27D4	0xF89D0010  LDRB	R0, [SP, #16]
0x27D8	0x1C40    ADDS	R0, R0, #1
0x27DA	0xF88D0010  STRB	R0, [SP, #16]
;__color8_driver.c, 276 :: 		}
0x27DE	0xE7DB    B	L_color8_getColorValue13
L_color8_getColorValue14:
;__color8_driver.c, 277 :: 		sumColor = sumColor / 16.0;
0x27E0	0x9803    LDR	R0, [SP, #12]
0x27E2	0xF04F4283  MOV	R2, #1098907648
0x27E6	0xF7FEFEA1  BL	__Div_FP+0
0x27EA	0x9003    STR	R0, [SP, #12]
;__color8_driver.c, 279 :: 		return sumColor;
0x27EC	0x4600    MOV	R0, R0
;__color8_driver.c, 280 :: 		}
L_end_color8_getColorValue:
0x27EE	0xF8DDE000  LDR	LR, [SP, #0]
0x27F2	0xB005    ADD	SP, SP, #20
0x27F4	0x4770    BX	LR
; end of _color8_getColorValue
__UnsignedIntegralToFloat:
;__Lib_MathDouble.c, 262 :: 		
0x1BA4	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 264 :: 		
0x1BA6	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 265 :: 		
0x1BA8	0xBF08    IT	EQ
;__Lib_MathDouble.c, 267 :: 		
0x1BAA	0xE00F    BEQ	__me_lab_end
;__Lib_MathDouble.c, 269 :: 		
0x1BAC	0xB502    PUSH	(R1, R14)
;__Lib_MathDouble.c, 271 :: 		
0x1BAE	0xF04F029E  MOV	R2, #158
;__Lib_MathDouble.c, 272 :: 		
0x1BB2	0xD402    BMI	__me_label_cont
;__Lib_MathDouble.c, 274 :: 		
__me_loop:
0x1BB4	0x1E52    SUBS	R2, R2, #1
;__Lib_MathDouble.c, 275 :: 		
0x1BB6	0x0040    LSLS	R0, R0, #1
;__Lib_MathDouble.c, 277 :: 		
0x1BB8	0xD5FC    BPL	__me_loop
;__Lib_MathDouble.c, 279 :: 		
__me_label_cont:
0x1BBA	0x3080    ADDS	R0, #128
;__Lib_MathDouble.c, 280 :: 		
0x1BBC	0xBF2C    ITE	CS
;__Lib_MathDouble.c, 281 :: 		
0x1BBE	0x1C52    ADDCS	R2, R2, #1
;__Lib_MathDouble.c, 282 :: 		
0x1BC0	0x0040    LSLCC	R0, R0, #1
;__Lib_MathDouble.c, 284 :: 		
0x1BC2	0x0A40    LSRS	R0, R0, #9
;__Lib_MathDouble.c, 285 :: 		
0x1BC4	0xEA4050C2  ORR	R0, R0, R2, LSL #23
;__Lib_MathDouble.c, 287 :: 		
0x1BC8	0xE8BD4002  POP	(R1, R14)
;__Lib_MathDouble.c, 288 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 290 :: 		
L_end__UnsignedIntegralToFloat:
0x1BCC	0xB001    ADD	SP, SP, #4
0x1BCE	0x4770    BX	LR
; end of __UnsignedIntegralToFloat
__color8_driver__RGB_To_HSL:
;__color8_driver.c, 134 :: 		static float _RGB_To_HSL(float red, float green, float blue)
; blue start address is: 8 (R2)
; green start address is: 4 (R1)
; red start address is: 0 (R0)
0x1BD0	0xB085    SUB	SP, SP, #20
0x1BD2	0xF8CDE000  STR	LR, [SP, #0]
0x1BD6	0x4681    MOV	R9, R0
0x1BD8	0x468A    MOV	R10, R1
0x1BDA	0x4693    MOV	R11, R2
; blue end address is: 8 (R2)
; green end address is: 4 (R1)
; red end address is: 0 (R0)
; red start address is: 36 (R9)
; green start address is: 40 (R10)
; blue start address is: 44 (R11)
;__color8_driver.c, 142 :: 		fmax = _maxColor(_maxColor(red, green), blue);
0x1BDC	0x4651    MOV	R1, R10
0x1BDE	0x4648    MOV	R0, R9
0x1BE0	0xF7FFFC6A  BL	__color8_driver__maxColor+0
0x1BE4	0x4659    MOV	R1, R11
0x1BE6	0xF7FFFC67  BL	__color8_driver__maxColor+0
; fmax start address is: 48 (R12)
0x1BEA	0x4684    MOV	R12, R0
;__color8_driver.c, 143 :: 		fmin = _minColor(_minColor(red, green), blue);
0x1BEC	0x4651    MOV	R1, R10
0x1BEE	0x4648    MOV	R0, R9
0x1BF0	0xF7FFFD6E  BL	__color8_driver__minColor+0
0x1BF4	0x4659    MOV	R1, R11
0x1BF6	0xF7FFFD6B  BL	__color8_driver__minColor+0
0x1BFA	0x9001    STR	R0, [SP, #4]
;__color8_driver.c, 147 :: 		if (fmax > 0)
0x1BFC	0xF04F0000  MOV	R0, #0
0x1C00	0x4662    MOV	R2, R12
0x1C02	0xF7FFFB73  BL	__Compare_FP+0
0x1C06	0xF2400000  MOVW	R0, #0
0x1C0A	0xDA00    BGE	L___color8_driver__RGB_To_HSL82
0x1C0C	0x2001    MOVS	R0, #1
L___color8_driver__RGB_To_HSL82:
0x1C0E	0xB148    CBZ	R0, L___color8_driver__RGB_To_HSL4
;__color8_driver.c, 149 :: 		Saturation_Value = (fmax - fmin) / fmax;
0x1C10	0x9A01    LDR	R2, [SP, #4]
0x1C12	0x4660    MOV	R0, R12
0x1C14	0xF7FFFD72  BL	__Sub_FP+0
0x1C18	0x4662    MOV	R2, R12
0x1C1A	0xF7FFFC87  BL	__Div_FP+0
; Saturation_Value start address is: 8 (R2)
0x1C1E	0x4602    MOV	R2, R0
;__color8_driver.c, 150 :: 		}
0x1C20	0x4611    MOV	R1, R2
; Saturation_Value end address is: 8 (R2)
0x1C22	0xE002    B	L___color8_driver__RGB_To_HSL5
L___color8_driver__RGB_To_HSL4:
;__color8_driver.c, 153 :: 		Saturation_Value = 0;
; Saturation_Value start address is: 8 (R2)
0x1C24	0xF04F0200  MOV	R2, #0
; Saturation_Value end address is: 8 (R2)
0x1C28	0x4611    MOV	R1, R2
;__color8_driver.c, 154 :: 		}
L___color8_driver__RGB_To_HSL5:
;__color8_driver.c, 156 :: 		if (Saturation_Value == 0)
; Saturation_Value start address is: 4 (R1)
0x1C2A	0xF04F0000  MOV	R0, #0
0x1C2E	0x460A    MOV	R2, R1
0x1C30	0xF7FFFB5C  BL	__Compare_FP+0
0x1C34	0xF2400000  MOVW	R0, #0
0x1C38	0xD100    BNE	L___color8_driver__RGB_To_HSL83
0x1C3A	0x2001    MOVS	R0, #1
L___color8_driver__RGB_To_HSL83:
; Saturation_Value end address is: 4 (R1)
0x1C3C	0xB110    CBZ	R0, L___color8_driver__RGB_To_HSL6
; red end address is: 36 (R9)
; green end address is: 40 (R10)
; blue end address is: 44 (R11)
; fmax end address is: 48 (R12)
;__color8_driver.c, 158 :: 		Hue_Value = 0;
; Hue_Value start address is: 0 (R0)
0x1C3E	0xF04F0000  MOV	R0, #0
;__color8_driver.c, 159 :: 		}
; Hue_Value end address is: 0 (R0)
0x1C42	0xE05D    B	L___color8_driver__RGB_To_HSL7
L___color8_driver__RGB_To_HSL6:
;__color8_driver.c, 162 :: 		if (fmax == red)
; fmax start address is: 48 (R12)
; blue start address is: 44 (R11)
; green start address is: 40 (R10)
; red start address is: 36 (R9)
0x1C44	0x4648    MOV	R0, R9
0x1C46	0x4662    MOV	R2, R12
0x1C48	0xF7FFFB50  BL	__Compare_FP+0
0x1C4C	0xF2400000  MOVW	R0, #0
0x1C50	0xD100    BNE	L___color8_driver__RGB_To_HSL84
0x1C52	0x2001    MOVS	R0, #1
L___color8_driver__RGB_To_HSL84:
0x1C54	0xB170    CBZ	R0, L___color8_driver__RGB_To_HSL8
; red end address is: 36 (R9)
;__color8_driver.c, 164 :: 		Hue_Value = (green - blue) / (fmax - fmin);
0x1C56	0x465A    MOV	R2, R11
0x1C58	0x4650    MOV	R0, R10
0x1C5A	0xF7FFFD4F  BL	__Sub_FP+0
; green end address is: 40 (R10)
; blue end address is: 44 (R11)
0x1C5E	0x9004    STR	R0, [SP, #16]
0x1C60	0x9A01    LDR	R2, [SP, #4]
0x1C62	0x4660    MOV	R0, R12
0x1C64	0xF7FFFD4A  BL	__Sub_FP+0
; fmax end address is: 48 (R12)
0x1C68	0x9002    STR	R0, [SP, #8]
0x1C6A	0x9A02    LDR	R2, [SP, #8]
0x1C6C	0x9804    LDR	R0, [SP, #16]
0x1C6E	0xF7FFFC5D  BL	__Div_FP+0
; Hue_Value start address is: 0 (R0)
;__color8_driver.c, 165 :: 		}
; Hue_Value end address is: 0 (R0)
0x1C72	0xE02F    B	L___color8_driver__RGB_To_HSL9
L___color8_driver__RGB_To_HSL8:
;__color8_driver.c, 166 :: 		else if (fmax == green)
; fmax start address is: 48 (R12)
; blue start address is: 44 (R11)
; green start address is: 40 (R10)
; red start address is: 36 (R9)
0x1C74	0x4650    MOV	R0, R10
0x1C76	0x4662    MOV	R2, R12
0x1C78	0xF7FFFB38  BL	__Compare_FP+0
0x1C7C	0xF2400000  MOVW	R0, #0
0x1C80	0xD100    BNE	L___color8_driver__RGB_To_HSL85
0x1C82	0x2001    MOVS	R0, #1
L___color8_driver__RGB_To_HSL85:
0x1C84	0xB190    CBZ	R0, L___color8_driver__RGB_To_HSL10
; green end address is: 40 (R10)
;__color8_driver.c, 168 :: 		Hue_Value = 2 + (blue - red) / (fmax - fmin);
0x1C86	0x464A    MOV	R2, R9
0x1C88	0x4658    MOV	R0, R11
0x1C8A	0xF7FFFD37  BL	__Sub_FP+0
; red end address is: 36 (R9)
; blue end address is: 44 (R11)
0x1C8E	0x9004    STR	R0, [SP, #16]
0x1C90	0x9A01    LDR	R2, [SP, #4]
0x1C92	0x4660    MOV	R0, R12
0x1C94	0xF7FFFD32  BL	__Sub_FP+0
; fmax end address is: 48 (R12)
0x1C98	0x9002    STR	R0, [SP, #8]
0x1C9A	0x9A02    LDR	R2, [SP, #8]
0x1C9C	0x9804    LDR	R0, [SP, #16]
0x1C9E	0xF7FFFC45  BL	__Div_FP+0
0x1CA2	0xF04F4280  MOV	R2, #1073741824
0x1CA6	0xF7FFFC93  BL	__Add_FP+0
; Hue_Value start address is: 0 (R0)
;__color8_driver.c, 169 :: 		}
; Hue_Value end address is: 0 (R0)
0x1CAA	0xE013    B	L___color8_driver__RGB_To_HSL11
L___color8_driver__RGB_To_HSL10:
;__color8_driver.c, 172 :: 		Hue_Value = 4 + (red - green) / (fmax - fmin);
; fmax start address is: 48 (R12)
; green start address is: 40 (R10)
; red start address is: 36 (R9)
0x1CAC	0x4652    MOV	R2, R10
0x1CAE	0x4648    MOV	R0, R9
0x1CB0	0xF7FFFD24  BL	__Sub_FP+0
; red end address is: 36 (R9)
; green end address is: 40 (R10)
0x1CB4	0x9004    STR	R0, [SP, #16]
0x1CB6	0x9A01    LDR	R2, [SP, #4]
0x1CB8	0x4660    MOV	R0, R12
0x1CBA	0xF7FFFD1F  BL	__Sub_FP+0
; fmax end address is: 48 (R12)
0x1CBE	0x9002    STR	R0, [SP, #8]
0x1CC0	0x9A02    LDR	R2, [SP, #8]
0x1CC2	0x9804    LDR	R0, [SP, #16]
0x1CC4	0xF7FFFC32  BL	__Div_FP+0
0x1CC8	0xF04F4281  MOV	R2, #1082130432
0x1CCC	0xF7FFFC80  BL	__Add_FP+0
; Hue_Value start address is: 4 (R1)
0x1CD0	0x4601    MOV	R1, R0
; Hue_Value end address is: 4 (R1)
0x1CD2	0x4608    MOV	R0, R1
;__color8_driver.c, 173 :: 		}
L___color8_driver__RGB_To_HSL11:
; Hue_Value start address is: 0 (R0)
; Hue_Value end address is: 0 (R0)
L___color8_driver__RGB_To_HSL9:
;__color8_driver.c, 174 :: 		Hue_Value = Hue_Value / 6;
; Hue_Value start address is: 0 (R0)
0x1CD4	0x4A0C    LDR	R2, [PC, #48]
0x1CD6	0xF7FFFC29  BL	__Div_FP+0
; Hue_Value end address is: 0 (R0)
; Hue_Value start address is: 4 (R1)
0x1CDA	0x4601    MOV	R1, R0
;__color8_driver.c, 176 :: 		if (Hue_Value < 0)
0x1CDC	0xF04F0200  MOV	R2, #0
0x1CE0	0xF7FFFB04  BL	__Compare_FP+0
0x1CE4	0xF2400000  MOVW	R0, #0
0x1CE8	0xDA00    BGE	L___color8_driver__RGB_To_HSL86
0x1CEA	0x2001    MOVS	R0, #1
L___color8_driver__RGB_To_HSL86:
0x1CEC	0xB138    CBZ	R0, L___color8_driver__RGB_To_HSL47
;__color8_driver.c, 178 :: 		Hue_Value = Hue_Value + 1;
0x1CEE	0x4608    MOV	R0, R1
0x1CF0	0xF04F527E  MOV	R2, #1065353216
0x1CF4	0xF7FFFC6C  BL	__Add_FP+0
; Hue_Value end address is: 4 (R1)
; Hue_Value start address is: 8 (R2)
0x1CF8	0x4602    MOV	R2, R0
; Hue_Value end address is: 8 (R2)
0x1CFA	0x4610    MOV	R0, R2
;__color8_driver.c, 179 :: 		}
0x1CFC	0xE000    B	L___color8_driver__RGB_To_HSL12
L___color8_driver__RGB_To_HSL47:
;__color8_driver.c, 176 :: 		if (Hue_Value < 0)
0x1CFE	0x4608    MOV	R0, R1
;__color8_driver.c, 179 :: 		}
L___color8_driver__RGB_To_HSL12:
;__color8_driver.c, 180 :: 		}
; Hue_Value start address is: 0 (R0)
; Hue_Value end address is: 0 (R0)
L___color8_driver__RGB_To_HSL7:
;__color8_driver.c, 181 :: 		return Hue_Value;
; Hue_Value start address is: 0 (R0)
; Hue_Value end address is: 0 (R0)
;__color8_driver.c, 182 :: 		}
L_end__RGB_To_HSL:
0x1D00	0xF8DDE000  LDR	LR, [SP, #0]
0x1D04	0xB005    ADD	SP, SP, #20
0x1D06	0x4770    BX	LR
0x1D08	0x000040C0  	#1086324736
; end of __color8_driver__RGB_To_HSL
__color8_driver__maxColor:
;__color8_driver.c, 110 :: 		static float _maxColor( float color_A, float color_B )
; color_B start address is: 4 (R1)
; color_A start address is: 0 (R0)
0x14B8	0xB081    SUB	SP, SP, #4
0x14BA	0xF8CDE000  STR	LR, [SP, #0]
0x14BE	0x460B    MOV	R3, R1
0x14C0	0x4601    MOV	R1, R0
; color_B end address is: 4 (R1)
; color_A end address is: 0 (R0)
; color_A start address is: 4 (R1)
; color_B start address is: 12 (R3)
;__color8_driver.c, 112 :: 		if(color_A > color_B)
0x14C2	0x4608    MOV	R0, R1
0x14C4	0x461A    MOV	R2, R3
0x14C6	0xF7FFFF11  BL	__Compare_FP+0
0x14CA	0xF2400000  MOVW	R0, #0
0x14CE	0xDD00    BLE	L___color8_driver__maxColor78
0x14D0	0x2001    MOVS	R0, #1
L___color8_driver__maxColor78:
0x14D2	0xB108    CBZ	R0, L___color8_driver__maxColor0
; color_B end address is: 12 (R3)
;__color8_driver.c, 114 :: 		return color_A;
0x14D4	0x4608    MOV	R0, R1
; color_A end address is: 4 (R1)
0x14D6	0xE000    B	L_end__maxColor
;__color8_driver.c, 115 :: 		}
L___color8_driver__maxColor0:
;__color8_driver.c, 118 :: 		return color_B;
; color_B start address is: 12 (R3)
0x14D8	0x4618    MOV	R0, R3
; color_B end address is: 12 (R3)
;__color8_driver.c, 120 :: 		}
L_end__maxColor:
0x14DA	0xF8DDE000  LDR	LR, [SP, #0]
0x14DE	0xB001    ADD	SP, SP, #4
0x14E0	0x4770    BX	LR
; end of __color8_driver__maxColor
__Compare_FP:
;__Lib_MathDouble.c, 839 :: 		
0x12EC	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 841 :: 		
0x12EE	0xB510    PUSH	(R4, R14)
;__Lib_MathDouble.c, 843 :: 		
0x12F0	0x4290    CMP	R0, R2
;__Lib_MathDouble.c, 844 :: 		
0x12F2	0xBF08    IT	EQ
;__Lib_MathDouble.c, 846 :: 		
0x12F4	0xE02A    BEQ	__me_lab_end
;__Lib_MathDouble.c, 848 :: 		
0x12F6	0xEA400402  ORR	R4, R0, R2, LSL #0
;__Lib_MathDouble.c, 849 :: 		
0x12FA	0xEA4F0444  LSL	R4, R4, #1
;__Lib_MathDouble.c, 850 :: 		
0x12FE	0x2C00    CMP	R4, #0
;__Lib_MathDouble.c, 851 :: 		
0x1300	0xBF08    IT	EQ
;__Lib_MathDouble.c, 853 :: 		
0x1302	0xE023    BEQ	__me_lab_end
;__Lib_MathDouble.c, 855 :: 		
0x1304	0x0044    LSLS	R4, R0, #1
;__Lib_MathDouble.c, 856 :: 		
0x1306	0xD104    BNE	__me_ct2_
;__Lib_MathDouble.c, 858 :: 		
0x1308	0x4294    CMP	R4, R2
;__Lib_MathDouble.c, 859 :: 		
0x130A	0xD401    BMI	__me_labop2_pos
;__Lib_MathDouble.c, 860 :: 		
0x130C	0x1CA4    ADDS	R4, R4, #2
;__Lib_MathDouble.c, 861 :: 		
0x130E	0x2C01    CMP	R4, #1
;__Lib_MathDouble.c, 862 :: 		
__me_labop2_pos:
;__Lib_MathDouble.c, 864 :: 		
0x1310	0xE01C    B	__me_lab_end
;__Lib_MathDouble.c, 866 :: 		
__me_ct2_:
0x1312	0xEA4F0440  LSL	R4, R0, #1
;__Lib_MathDouble.c, 867 :: 		
0x1316	0xEA4F6414  LSR	R4, R4, #24
;__Lib_MathDouble.c, 868 :: 		
0x131A	0x2CFF    CMP	R4, #255
;__Lib_MathDouble.c, 869 :: 		
0x131C	0xD10A    BNE	__me_ct1_
;__Lib_MathDouble.c, 870 :: 		
0x131E	0xEA4F0442  LSL	R4, R2, #1
;__Lib_MathDouble.c, 871 :: 		
0x1322	0xEA4F6414  LSR	R4, R4, #24
;__Lib_MathDouble.c, 872 :: 		
0x1326	0x2CFF    CMP	R4, #255
;__Lib_MathDouble.c, 873 :: 		
0x1328	0xD104    BNE	__me_ct1_
;__Lib_MathDouble.c, 875 :: 		
0x132A	0xEA4F74D2  LSR	R4, R2, #31
;__Lib_MathDouble.c, 876 :: 		
0x132E	0xEBB434D0  SUBS	R4, R4, R0, LSR #31
;__Lib_MathDouble.c, 878 :: 		
0x1332	0xE00B    B	__me_lab_end
;__Lib_MathDouble.c, 880 :: 		
__me_ct1_:
0x1334	0x2A00    CMP	R2, #0
;__Lib_MathDouble.c, 881 :: 		
0x1336	0xD406    BMI	__me_op2_m
;__Lib_MathDouble.c, 883 :: 		
0x1338	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 884 :: 		
0x133A	0xDC02    BGT	__me_labop1_pos
;__Lib_MathDouble.c, 885 :: 		
0x133C	0x2400    MOVS	R4, #0
;__Lib_MathDouble.c, 886 :: 		
0x133E	0x2C01    CMP	R4, #1
;__Lib_MathDouble.c, 888 :: 		
0x1340	0xE004    B	__me_lab_end
;__Lib_MathDouble.c, 889 :: 		
__me_labop1_pos:
;__Lib_MathDouble.c, 890 :: 		
0x1342	0x4290    CMP	R0, R2
;__Lib_MathDouble.c, 892 :: 		
0x1344	0xE002    B	__me_lab_end
;__Lib_MathDouble.c, 893 :: 		
__me_op2_m:
0x1346	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 894 :: 		
0x1348	0xBF48    IT	MI
;__Lib_MathDouble.c, 895 :: 		
0x134A	0x4282    CMPMI	R2, R0
;__Lib_MathDouble.c, 896 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 897 :: 		
0x134C	0xE8BD4010  POP	(R4, R14)
;__Lib_MathDouble.c, 899 :: 		
L_end__Compare_FP:
0x1350	0xB001    ADD	SP, SP, #4
0x1352	0x4770    BX	LR
; end of __Compare_FP
__color8_driver__minColor:
;__color8_driver.c, 122 :: 		static float _minColor( float color_A, float color_B )
; color_B start address is: 4 (R1)
; color_A start address is: 0 (R0)
0x16D0	0xB081    SUB	SP, SP, #4
0x16D2	0xF8CDE000  STR	LR, [SP, #0]
0x16D6	0x460B    MOV	R3, R1
0x16D8	0x4601    MOV	R1, R0
; color_B end address is: 4 (R1)
; color_A end address is: 0 (R0)
; color_A start address is: 4 (R1)
; color_B start address is: 12 (R3)
;__color8_driver.c, 124 :: 		if(color_A < color_B)
0x16DA	0x4608    MOV	R0, R1
0x16DC	0x461A    MOV	R2, R3
0x16DE	0xF7FFFE05  BL	__Compare_FP+0
0x16E2	0xF2400000  MOVW	R0, #0
0x16E6	0xDA00    BGE	L___color8_driver__minColor80
0x16E8	0x2001    MOVS	R0, #1
L___color8_driver__minColor80:
0x16EA	0xB108    CBZ	R0, L___color8_driver__minColor2
; color_B end address is: 12 (R3)
;__color8_driver.c, 126 :: 		return color_A;
0x16EC	0x4608    MOV	R0, R1
; color_A end address is: 4 (R1)
0x16EE	0xE000    B	L_end__minColor
;__color8_driver.c, 127 :: 		}
L___color8_driver__minColor2:
;__color8_driver.c, 130 :: 		return color_B;
; color_B start address is: 12 (R3)
0x16F0	0x4618    MOV	R0, R3
; color_B end address is: 12 (R3)
;__color8_driver.c, 132 :: 		}
L_end__minColor:
0x16F2	0xF8DDE000  LDR	LR, [SP, #0]
0x16F6	0xB001    ADD	SP, SP, #4
0x16F8	0x4770    BX	LR
; end of __color8_driver__minColor
__Sub_FP:
;__Lib_MathDouble.c, 539 :: 		
0x16FC	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 541 :: 		
0x16FE	0xF0824200  EOR	R2, R2, #-2147483648
;__Lib_MathDouble.c, 542 :: 		
0x1702	0xE92D41FA  PUSH	(R1, R3, R4, R5, R6, R7, R8, R14)
;__Lib_MathDouble.c, 544 :: 		
0x1706	0xEA4F2402  LSL	R4, R2, #8
;__Lib_MathDouble.c, 545 :: 		
0x170A	0xEA4F0542  LSL	R5, R2, #1
;__Lib_MathDouble.c, 546 :: 		
0x170E	0x0E2D    LSRS	R5, R5, #24
;__Lib_MathDouble.c, 547 :: 		
0x1710	0xD104    BNE	__me_lab1
;__Lib_MathDouble.c, 549 :: 		
0x1712	0x2C00    CMP	R4, #0
;__Lib_MathDouble.c, 550 :: 		
0x1714	0xBF18    IT	NE
;__Lib_MathDouble.c, 551 :: 		
0x1716	0xF04F0000  MOVNE	R0, #0
;__Lib_MathDouble.c, 553 :: 		
0x171A	0xE06C    B	__me_lab_end
;__Lib_MathDouble.c, 555 :: 		
__me_lab1:
0x171C	0xF0444400  ORR	R4, R4, #-2147483648
;__Lib_MathDouble.c, 557 :: 		
0x1720	0x2DFF    CMP	R5, #255
;__Lib_MathDouble.c, 559 :: 		
0x1722	0xD05F    BEQ	__me_ovfl1
;__Lib_MathDouble.c, 561 :: 		
0x1724	0xEA4F0494  LSR	R4, R4, #2
;__Lib_MathDouble.c, 562 :: 		
0x1728	0x2A00    CMP	R2, #0
;__Lib_MathDouble.c, 563 :: 		
0x172A	0xBF48    IT	MI
;__Lib_MathDouble.c, 564 :: 		
0x172C	0x4264    RSBMI	R4, R4, #0
;__Lib_MathDouble.c, 566 :: 		
0x172E	0xEA4F2100  LSL	R1, R0, #8
;__Lib_MathDouble.c, 567 :: 		
0x1732	0xEA4F0340  LSL	R3, R0, #1
;__Lib_MathDouble.c, 568 :: 		
0x1736	0x0E1B    LSRS	R3, R3, #24
;__Lib_MathDouble.c, 569 :: 		
0x1738	0xD105    BNE	__me_lab2
;__Lib_MathDouble.c, 571 :: 		
0x173A	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 572 :: 		
0x173C	0xBF14    ITE	NE
;__Lib_MathDouble.c, 573 :: 		
0x173E	0xF04F0000  MOVNE	R0, #0
;__Lib_MathDouble.c, 574 :: 		
0x1742	0x4610    MOVEQ	R0, R2
;__Lib_MathDouble.c, 576 :: 		
0x1744	0xE057    B	__me_lab_end
;__Lib_MathDouble.c, 578 :: 		
__me_lab2:
0x1746	0xF0414100  ORR	R1, R1, #-2147483648
;__Lib_MathDouble.c, 580 :: 		
0x174A	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 581 :: 		
0x174C	0xD04B    BEQ	__me_ovfl0
;__Lib_MathDouble.c, 583 :: 		
0x174E	0xEA4F0191  LSR	R1, R1, #2
;__Lib_MathDouble.c, 584 :: 		
0x1752	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 585 :: 		
0x1754	0xBF48    IT	MI
;__Lib_MathDouble.c, 586 :: 		
0x1756	0x4249    RSBMI	R1, R1, #0
;__Lib_MathDouble.c, 588 :: 		
0x1758	0x1B5E    SUBS	R6, R3, R5
;__Lib_MathDouble.c, 589 :: 		
0x175A	0xBF41    ITTTT	MI
;__Lib_MathDouble.c, 590 :: 		
0x175C	0x460F    MOVMI	R7, R1
;__Lib_MathDouble.c, 591 :: 		
0x175E	0x4621    MOVMI	R1, R4
;__Lib_MathDouble.c, 592 :: 		
0x1760	0x463C    MOVMI	R4, R7
;__Lib_MathDouble.c, 593 :: 		
0x1762	0x4276    RSBMI	R6, R6, #0
;__Lib_MathDouble.c, 594 :: 		
0x1764	0xBF48    IT	MI
;__Lib_MathDouble.c, 595 :: 		
0x1766	0x462B    MOVMI	R3, R5
;__Lib_MathDouble.c, 597 :: 		
0x1768	0x2E19    CMP	R6, #25
;__Lib_MathDouble.c, 598 :: 		
0x176A	0xBF47    ITTEE	MI
;__Lib_MathDouble.c, 599 :: 		
0x176C	0xFA44F706  ASRMI	R7, R4, R6
;__Lib_MathDouble.c, 600 :: 		
0x1770	0x19C9    ADDMI	R1, R1, R7
;__Lib_MathDouble.c, 601 :: 		
0x1772	0xF04F0800  MOVPL	R8, #0
;__Lib_MathDouble.c, 602 :: 		
0x1776	0xE003    BPL	__me_skip_sticky
;__Lib_MathDouble.c, 603 :: 		
0x1778	0xF1C6071C  RSB	R7, R6, #28
;__Lib_MathDouble.c, 604 :: 		
0x177C	0xFA04F807  LSL	R8, R4, R7
;__Lib_MathDouble.c, 606 :: 		
__me_skip_sticky:
;__Lib_MathDouble.c, 607 :: 		
0x1780	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 608 :: 		
0x1782	0xBF04    ITT	EQ
;__Lib_MathDouble.c, 609 :: 		
0x1784	0xF04F0000  MOVEQ	R0, #0
;__Lib_MathDouble.c, 611 :: 		
0x1788	0xE035    BEQ	__me_lab_end
;__Lib_MathDouble.c, 612 :: 		
0x178A	0xBF46    ITTE	MI
;__Lib_MathDouble.c, 613 :: 		
0x178C	0x4249    RSBMI	R1, R1, #0
;__Lib_MathDouble.c, 614 :: 		
0x178E	0xF04F0701  MOVMI	R7, #1
;__Lib_MathDouble.c, 615 :: 		
0x1792	0xF04F0700  MOVPL	R7, #0
;__Lib_MathDouble.c, 617 :: 		
__me_loop:
0x1796	0xF1A30301  SUB	R3, R3, #1
;__Lib_MathDouble.c, 618 :: 		
0x179A	0x0049    LSLS	R1, R1, #1
;__Lib_MathDouble.c, 619 :: 		
0x179C	0xD5FB    BPL	__me_loop
;__Lib_MathDouble.c, 621 :: 		
0x179E	0xF0110480  ANDS	R4, R1, #128
;__Lib_MathDouble.c, 622 :: 		
0x17A2	0xD00D    BEQ	__me_no_round
;__Lib_MathDouble.c, 623 :: 		
0x17A4	0xF0010520  AND	R5, R1, #32
;__Lib_MathDouble.c, 624 :: 		
0x17A8	0xEA480805  ORR	R8, R8, R5, LSL #0
;__Lib_MathDouble.c, 625 :: 		
0x17AC	0x3180    ADDS	R1, #128
;__Lib_MathDouble.c, 626 :: 		
0x17AE	0xBF28    IT	CS
;__Lib_MathDouble.c, 627 :: 		
0x17B0	0x1C5B    ADDCS	R3, R3, #1
;__Lib_MathDouble.c, 628 :: 		
0x17B2	0xF0010440  AND	R4, R1, #64
;__Lib_MathDouble.c, 629 :: 		
0x17B6	0xEA580804  ORRS	R8, R8, R4, LSL #0
;__Lib_MathDouble.c, 630 :: 		
0x17BA	0xBF08    IT	EQ
;__Lib_MathDouble.c, 631 :: 		
0x17BC	0xF4217180  BICEQ	R1, R1, #256
;__Lib_MathDouble.c, 633 :: 		
__me_no_round:
;__Lib_MathDouble.c, 634 :: 		
0x17C0	0x1C9B    ADDS	R3, R3, #2
;__Lib_MathDouble.c, 635 :: 		
0x17C2	0xBFDC    ITT	LE
;__Lib_MathDouble.c, 636 :: 		
0x17C4	0xF04F0000  MOVLE	R0, #0
;__Lib_MathDouble.c, 638 :: 		
0x17C8	0xE015    BLE	__me_lab_end
;__Lib_MathDouble.c, 639 :: 		
0x17CA	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 640 :: 		
0x17CC	0xD20D    BCS	__me_ovfl
;__Lib_MathDouble.c, 642 :: 		
0x17CE	0xF02101FF  BIC	R1, R1, #255
;__Lib_MathDouble.c, 643 :: 		
0x17D2	0xEA4F0141  LSL	R1, R1, #1
;__Lib_MathDouble.c, 645 :: 		
0x17D6	0xEA4F2051  LSR	R0, R1, #9
;__Lib_MathDouble.c, 646 :: 		
0x17DA	0xEA4050C3  ORR	R0, R0, R3, LSL #23
;__Lib_MathDouble.c, 647 :: 		
0x17DE	0xEA4070C7  ORR	R0, R0, R7, LSL #31
;__Lib_MathDouble.c, 650 :: 		
0x17E2	0xE008    B	__me_lab_end
;__Lib_MathDouble.c, 652 :: 		
__me_ovfl1:
0x17E4	0x4610    MOV	R0, R2
;__Lib_MathDouble.c, 653 :: 		
__me_ovfl0:
0x17E6	0xEA4F77D0  LSR	R7, R0, #31
;__Lib_MathDouble.c, 654 :: 		
__me_ovfl:
0x17EA	0xEA4F77C7  LSL	R7, R7, #31
;__Lib_MathDouble.c, 655 :: 		
0x17EE	0x20FF    MOVS	R0, #255
;__Lib_MathDouble.c, 656 :: 		
0x17F0	0xEA4F50C0  LSL	R0, R0, #23
;__Lib_MathDouble.c, 657 :: 		
0x17F4	0x4338    ORRS	R0, R7
;__Lib_MathDouble.c, 658 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 659 :: 		
0x17F6	0xE8BD41FA  POP	(R1, R3, R4, R5, R6, R7, R8, R14)
;__Lib_MathDouble.c, 661 :: 		
L_end__Sub_FP:
0x17FA	0xB001    ADD	SP, SP, #4
0x17FC	0x4770    BX	LR
; end of __Sub_FP
__Div_FP:
;__Lib_MathDouble.c, 743 :: 		
0x152C	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 745 :: 		
0x152E	0xB5FA    PUSH	(R1, R3, R4, R5, R6, R7, R14)
;__Lib_MathDouble.c, 746 :: 		
0x1530	0xEA900602  EORS	R6, R0, R2, LSL #0
;__Lib_MathDouble.c, 747 :: 		
0x1534	0xBF4C    ITE	MI
;__Lib_MathDouble.c, 748 :: 		
0x1536	0xF04F4600  MOVMI	R6, #-2147483648
;__Lib_MathDouble.c, 749 :: 		
0x153A	0xF04F0600  MOVPL	R6, #0
;__Lib_MathDouble.c, 751 :: 		
0x153E	0x0201    LSLS	R1, R0, #8
;__Lib_MathDouble.c, 752 :: 		
0x1540	0x0043    LSLS	R3, R0, #1
;__Lib_MathDouble.c, 753 :: 		
0x1542	0x0E1B    LSRS	R3, R3, #24
;__Lib_MathDouble.c, 754 :: 		
0x1544	0xBF12    ITEE	NE
;__Lib_MathDouble.c, 755 :: 		
0x1546	0xF0414100  ORRNE	R1, R1, #-2147483648
;__Lib_MathDouble.c, 757 :: 		
0x154A	0xF04F0000  MOVEQ	R0, #0
;__Lib_MathDouble.c, 759 :: 		
0x154E	0xE03B    BEQ	__me_lab_end
;__Lib_MathDouble.c, 761 :: 		
0x1550	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 762 :: 		
0x1552	0xD035    BEQ	__me_ovfl
;__Lib_MathDouble.c, 764 :: 		
0x1554	0xEA5F2402  LSLS	R4, R2, #8
;__Lib_MathDouble.c, 765 :: 		
0x1558	0xEA5F0542  LSLS	R5, R2, #1
;__Lib_MathDouble.c, 766 :: 		
0x155C	0xEA5F6515  LSRS	R5, R5, #24
;__Lib_MathDouble.c, 767 :: 		
0x1560	0xBF11    ITEEE	NE
;__Lib_MathDouble.c, 769 :: 		
0x1562	0xF0444400  ORRNE	R4, R4, #-2147483648
;__Lib_MathDouble.c, 770 :: 		
0x1566	0xF04F40FF  MOVEQ	R0, #2139095040
;__Lib_MathDouble.c, 771 :: 		
0x156A	0x4330    ORREQ	R0, R6
;__Lib_MathDouble.c, 773 :: 		
0x156C	0xE02C    BEQ	__me_lab_end
;__Lib_MathDouble.c, 775 :: 		
0x156E	0x2DFF    CMP	R5, #255
;__Lib_MathDouble.c, 776 :: 		
0x1570	0xD026    BEQ	__me_ovfl
;__Lib_MathDouble.c, 778 :: 		
0x1572	0x1B5B    SUBS	R3, R3, R5
;__Lib_MathDouble.c, 781 :: 		
0x1574	0x2000    MOVS	R0, #0
;__Lib_MathDouble.c, 782 :: 		
0x1576	0x2720    MOVS	R7, #32
;__Lib_MathDouble.c, 783 :: 		
0x1578	0x0864    LSRS	R4, R4, #1
;__Lib_MathDouble.c, 784 :: 		
0x157A	0x0849    LSRS	R1, R1, #1
;__Lib_MathDouble.c, 786 :: 		
__me_fdiv_:
;__Lib_MathDouble.c, 788 :: 		
0x157C	0x42A1    CMP	R1, R4
;__Lib_MathDouble.c, 790 :: 		
0x157E	0xEB400000  ADC	R0, R0, R0, LSL #0
;__Lib_MathDouble.c, 791 :: 		
0x1582	0xBF28    IT	CS
;__Lib_MathDouble.c, 792 :: 		
0x1584	0x1B09    SUBCS	R1, R1, R4
;__Lib_MathDouble.c, 793 :: 		
0x1586	0x1E7F    SUBS	R7, R7, #1
;__Lib_MathDouble.c, 794 :: 		
0x1588	0xD004    BEQ	__me_flb1_
;__Lib_MathDouble.c, 795 :: 		
0x158A	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 796 :: 		
0x158C	0xBF18    IT	NE
;__Lib_MathDouble.c, 797 :: 		
0x158E	0x0049    LSLNE	R1, R1, #1
;__Lib_MathDouble.c, 798 :: 		
0x1590	0xD1F4    BNE	__me_fdiv_
;__Lib_MathDouble.c, 800 :: 		
0x1592	0x40B8    LSLS	R0, R7
;__Lib_MathDouble.c, 802 :: 		
__me_flb1_:
0x1594	0xF0104F00  TST	R0, #-2147483648
;__Lib_MathDouble.c, 803 :: 		
0x1598	0xBF04    ITT	EQ
;__Lib_MathDouble.c, 804 :: 		
0x159A	0x0040    LSLEQ	R0, R0, #1
;__Lib_MathDouble.c, 805 :: 		
0x159C	0xF1B30301  SUBSEQ	R3, R3, #1
;__Lib_MathDouble.c, 807 :: 		
0x15A0	0x3080    ADDS	R0, #128
;__Lib_MathDouble.c, 808 :: 		
0x15A2	0xBF2C    ITE	CS
;__Lib_MathDouble.c, 809 :: 		
0x15A4	0x1C5B    ADDCS	R3, R3, #1
;__Lib_MathDouble.c, 810 :: 		
0x15A6	0x0040    LSLCC	R0, R0, #1
;__Lib_MathDouble.c, 812 :: 		
__me_flb2_:
0x15A8	0x337F    ADDS	R3, #127
;__Lib_MathDouble.c, 813 :: 		
0x15AA	0xBFDC    ITT	LE
;__Lib_MathDouble.c, 814 :: 		
0x15AC	0xF04F0000  MOVLE	R0, #0
;__Lib_MathDouble.c, 816 :: 		
0x15B0	0xE00A    BLE	__me_lab_end
;__Lib_MathDouble.c, 818 :: 		
0x15B2	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 819 :: 		
0x15B4	0xD204    BCS	__me_ovfl
;__Lib_MathDouble.c, 821 :: 		
0x15B6	0x0A40    LSRS	R0, R0, #9
;__Lib_MathDouble.c, 822 :: 		
0x15B8	0xEA4050C3  ORR	R0, R0, R3, LSL #23
;__Lib_MathDouble.c, 823 :: 		
0x15BC	0x4330    ORRS	R0, R6
;__Lib_MathDouble.c, 826 :: 		
0x15BE	0xE003    B	__me_lab_end
;__Lib_MathDouble.c, 828 :: 		
__me_ovfl:
0x15C0	0x27FF    MOVS	R7, #255
;__Lib_MathDouble.c, 829 :: 		
0x15C2	0x05FF    LSLS	R7, R7, #23
;__Lib_MathDouble.c, 830 :: 		
0x15C4	0xEA560007  ORRS	R0, R6, R7, LSL #0
;__Lib_MathDouble.c, 831 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 832 :: 		
0x15C8	0xE8BD40FA  POP	(R1, R3, R4, R5, R6, R7, R14)
;__Lib_MathDouble.c, 834 :: 		
L_end__Div_FP:
0x15CC	0xB001    ADD	SP, SP, #4
0x15CE	0x4770    BX	LR
; end of __Div_FP
__Add_FP:
;__Lib_MathDouble.c, 413 :: 		
0x15D0	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 415 :: 		
0x15D2	0xE92D41FA  PUSH	(R1, R3, R4, R5, R6, R7, R8, R14)
;__Lib_MathDouble.c, 417 :: 		
0x15D6	0xEA4F2402  LSL	R4, R2, #8
;__Lib_MathDouble.c, 418 :: 		
0x15DA	0xEA4F0542  LSL	R5, R2, #1
;__Lib_MathDouble.c, 419 :: 		
0x15DE	0x0E2D    LSRS	R5, R5, #24
;__Lib_MathDouble.c, 420 :: 		
0x15E0	0xD104    BNE	__me_lab1
;__Lib_MathDouble.c, 422 :: 		
0x15E2	0x2C00    CMP	R4, #0
;__Lib_MathDouble.c, 423 :: 		
0x15E4	0xBF18    IT	NE
;__Lib_MathDouble.c, 424 :: 		
0x15E6	0xF04F0000  MOVNE	R0, #0
;__Lib_MathDouble.c, 426 :: 		
0x15EA	0xE06C    B	__me_lab_end
;__Lib_MathDouble.c, 428 :: 		
__me_lab1:
0x15EC	0xF0444400  ORR	R4, R4, #-2147483648
;__Lib_MathDouble.c, 430 :: 		
0x15F0	0x2DFF    CMP	R5, #255
;__Lib_MathDouble.c, 432 :: 		
0x15F2	0xD05F    BEQ	__me_ovfl1
;__Lib_MathDouble.c, 434 :: 		
0x15F4	0xEA4F0494  LSR	R4, R4, #2
;__Lib_MathDouble.c, 435 :: 		
0x15F8	0x2A00    CMP	R2, #0
;__Lib_MathDouble.c, 436 :: 		
0x15FA	0xBF48    IT	MI
;__Lib_MathDouble.c, 437 :: 		
0x15FC	0x4264    RSBMI	R4, R4, #0
;__Lib_MathDouble.c, 439 :: 		
0x15FE	0xEA4F2100  LSL	R1, R0, #8
;__Lib_MathDouble.c, 440 :: 		
0x1602	0xEA4F0340  LSL	R3, R0, #1
;__Lib_MathDouble.c, 441 :: 		
0x1606	0x0E1B    LSRS	R3, R3, #24
;__Lib_MathDouble.c, 442 :: 		
0x1608	0xD105    BNE	__me_lab2
;__Lib_MathDouble.c, 444 :: 		
0x160A	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 445 :: 		
0x160C	0xBF14    ITE	NE
;__Lib_MathDouble.c, 446 :: 		
0x160E	0xF04F0000  MOVNE	R0, #0
;__Lib_MathDouble.c, 447 :: 		
0x1612	0x4610    MOVEQ	R0, R2
;__Lib_MathDouble.c, 449 :: 		
0x1614	0xE057    B	__me_lab_end
;__Lib_MathDouble.c, 451 :: 		
__me_lab2:
0x1616	0xF0414100  ORR	R1, R1, #-2147483648
;__Lib_MathDouble.c, 453 :: 		
0x161A	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 454 :: 		
0x161C	0xD04B    BEQ	__me_ovfl0
;__Lib_MathDouble.c, 456 :: 		
0x161E	0xEA4F0191  LSR	R1, R1, #2
;__Lib_MathDouble.c, 457 :: 		
0x1622	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 458 :: 		
0x1624	0xBF48    IT	MI
;__Lib_MathDouble.c, 459 :: 		
0x1626	0x4249    RSBMI	R1, R1, #0
;__Lib_MathDouble.c, 461 :: 		
0x1628	0x1B5E    SUBS	R6, R3, R5
;__Lib_MathDouble.c, 462 :: 		
0x162A	0xBF41    ITTTT	MI
;__Lib_MathDouble.c, 463 :: 		
0x162C	0x460F    MOVMI	R7, R1
;__Lib_MathDouble.c, 464 :: 		
0x162E	0x4621    MOVMI	R1, R4
;__Lib_MathDouble.c, 465 :: 		
0x1630	0x463C    MOVMI	R4, R7
;__Lib_MathDouble.c, 466 :: 		
0x1632	0x4276    RSBMI	R6, R6, #0
;__Lib_MathDouble.c, 467 :: 		
0x1634	0xBF48    IT	MI
;__Lib_MathDouble.c, 468 :: 		
0x1636	0x462B    MOVMI	R3, R5
;__Lib_MathDouble.c, 470 :: 		
0x1638	0x2E19    CMP	R6, #25
;__Lib_MathDouble.c, 471 :: 		
0x163A	0xBF47    ITTEE	MI
;__Lib_MathDouble.c, 472 :: 		
0x163C	0xFA44F706  ASRMI	R7, R4, R6
;__Lib_MathDouble.c, 473 :: 		
0x1640	0x19C9    ADDMI	R1, R1, R7
;__Lib_MathDouble.c, 474 :: 		
0x1642	0xF04F0800  MOVPL	R8, #0
;__Lib_MathDouble.c, 475 :: 		
0x1646	0xE003    BPL	__me_skip_sticky
;__Lib_MathDouble.c, 476 :: 		
0x1648	0xF1C6071C  RSB	R7, R6, #28
;__Lib_MathDouble.c, 477 :: 		
0x164C	0xFA04F807  LSL	R8, R4, R7
;__Lib_MathDouble.c, 479 :: 		
__me_skip_sticky:
;__Lib_MathDouble.c, 480 :: 		
0x1650	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 481 :: 		
0x1652	0xBF04    ITT	EQ
;__Lib_MathDouble.c, 482 :: 		
0x1654	0xF04F0000  MOVEQ	R0, #0
;__Lib_MathDouble.c, 484 :: 		
0x1658	0xE035    BEQ	__me_lab_end
;__Lib_MathDouble.c, 485 :: 		
0x165A	0xBF46    ITTE	MI
;__Lib_MathDouble.c, 486 :: 		
0x165C	0x4249    RSBMI	R1, R1, #0
;__Lib_MathDouble.c, 487 :: 		
0x165E	0xF04F0701  MOVMI	R7, #1
;__Lib_MathDouble.c, 488 :: 		
0x1662	0xF04F0700  MOVPL	R7, #0
;__Lib_MathDouble.c, 490 :: 		
__me_loop:
0x1666	0xF1A30301  SUB	R3, R3, #1
;__Lib_MathDouble.c, 491 :: 		
0x166A	0x0049    LSLS	R1, R1, #1
;__Lib_MathDouble.c, 492 :: 		
0x166C	0xD5FB    BPL	__me_loop
;__Lib_MathDouble.c, 494 :: 		
0x166E	0xF0110480  ANDS	R4, R1, #128
;__Lib_MathDouble.c, 495 :: 		
0x1672	0xD00D    BEQ	__me_no_round
;__Lib_MathDouble.c, 496 :: 		
0x1674	0xF0010520  AND	R5, R1, #32
;__Lib_MathDouble.c, 497 :: 		
0x1678	0xEA480805  ORR	R8, R8, R5, LSL #0
;__Lib_MathDouble.c, 498 :: 		
0x167C	0x3180    ADDS	R1, #128
;__Lib_MathDouble.c, 499 :: 		
0x167E	0xBF28    IT	CS
;__Lib_MathDouble.c, 500 :: 		
0x1680	0x1C5B    ADDCS	R3, R3, #1
;__Lib_MathDouble.c, 501 :: 		
0x1682	0xF0010440  AND	R4, R1, #64
;__Lib_MathDouble.c, 502 :: 		
0x1686	0xEA580804  ORRS	R8, R8, R4, LSL #0
;__Lib_MathDouble.c, 503 :: 		
0x168A	0xBF08    IT	EQ
;__Lib_MathDouble.c, 504 :: 		
0x168C	0xF4217180  BICEQ	R1, R1, #256
;__Lib_MathDouble.c, 506 :: 		
__me_no_round:
;__Lib_MathDouble.c, 507 :: 		
0x1690	0x1C9B    ADDS	R3, R3, #2
;__Lib_MathDouble.c, 508 :: 		
0x1692	0xBFDC    ITT	LE
;__Lib_MathDouble.c, 509 :: 		
0x1694	0xF04F0000  MOVLE	R0, #0
;__Lib_MathDouble.c, 511 :: 		
0x1698	0xE015    BLE	__me_lab_end
;__Lib_MathDouble.c, 512 :: 		
0x169A	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 513 :: 		
0x169C	0xD20D    BCS	__me_ovfl
;__Lib_MathDouble.c, 515 :: 		
0x169E	0xF02101FF  BIC	R1, R1, #255
;__Lib_MathDouble.c, 516 :: 		
0x16A2	0xEA4F0141  LSL	R1, R1, #1
;__Lib_MathDouble.c, 518 :: 		
0x16A6	0xEA4F2051  LSR	R0, R1, #9
;__Lib_MathDouble.c, 519 :: 		
0x16AA	0xEA4050C3  ORR	R0, R0, R3, LSL #23
;__Lib_MathDouble.c, 520 :: 		
0x16AE	0xEA4070C7  ORR	R0, R0, R7, LSL #31
;__Lib_MathDouble.c, 523 :: 		
0x16B2	0xE008    B	__me_lab_end
;__Lib_MathDouble.c, 525 :: 		
__me_ovfl1:
0x16B4	0x4610    MOV	R0, R2
;__Lib_MathDouble.c, 526 :: 		
__me_ovfl0:
0x16B6	0xEA4F77D0  LSR	R7, R0, #31
;__Lib_MathDouble.c, 527 :: 		
__me_ovfl:
0x16BA	0xEA4F77C7  LSL	R7, R7, #31
;__Lib_MathDouble.c, 528 :: 		
0x16BE	0x20FF    MOVS	R0, #255
;__Lib_MathDouble.c, 529 :: 		
0x16C0	0xEA4F50C0  LSL	R0, R0, #23
;__Lib_MathDouble.c, 530 :: 		
0x16C4	0x4338    ORRS	R0, R7
;__Lib_MathDouble.c, 531 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 532 :: 		
0x16C6	0xE8BD41FA  POP	(R1, R3, R4, R5, R6, R7, R8, R14)
;__Lib_MathDouble.c, 534 :: 		
L_end__Add_FP:
0x16CA	0xB001    ADD	SP, SP, #4
0x16CC	0x4770    BX	LR
; end of __Add_FP
_FloatToStr:
;__Lib_Conversions.c, 631 :: 		
; str start address is: 4 (R1)
; fnum start address is: 0 (R0)
0x2478	0xB082    SUB	SP, SP, #8
0x247A	0xF8CDE000  STR	LR, [SP, #0]
0x247E	0x4602    MOV	R2, R0
0x2480	0x460C    MOV	R4, R1
; str end address is: 4 (R1)
; fnum end address is: 0 (R0)
; fnum start address is: 8 (R2)
; str start address is: 16 (R4)
;__Lib_Conversions.c, 633 :: 		
; bpoint start address is: 0 (R0)
0x2482	0x2000    MOVS	R0, #0
;__Lib_Conversions.c, 635 :: 		
; dexpon start address is: 4 (R1)
0x2484	0x2100    MOVS	R1, #0
0x2486	0xB249    SXTB	R1, R1
;__Lib_Conversions.c, 638 :: 		
0x2488	0x9201    STR	R2, [SP, #4]
; fnum end address is: 8 (R2)
;__Lib_Conversions.c, 639 :: 		
0x248A	0x9A01    LDR	R2, [SP, #4]
0x248C	0xF1B23FFF  CMP	R2, #-1
0x2490	0xD106    BNE	L_FloatToStr117
; bpoint end address is: 0 (R0)
; dexpon end address is: 4 (R1)
;__Lib_Conversions.c, 640 :: 		
0x2492	0x4A71    LDR	R2, [PC, #452]
0x2494	0x4611    MOV	R1, R2
0x2496	0x4620    MOV	R0, R4
; str end address is: 16 (R4)
0x2498	0xF7FFFC56  BL	_strcpy+0
;__Lib_Conversions.c, 641 :: 		
0x249C	0x2003    MOVS	R0, #3
0x249E	0xE0D7    B	L_end_FloatToStr
;__Lib_Conversions.c, 642 :: 		
L_FloatToStr117:
;__Lib_Conversions.c, 643 :: 		
; str start address is: 16 (R4)
; i start address is: 20 (R5)
; dexpon start address is: 4 (R1)
; bpoint start address is: 0 (R0)
0x24A0	0x2501    MOVS	R5, #1
;__Lib_Conversions.c, 644 :: 		
0x24A2	0xAA01    ADD	R2, SP, #4
0x24A4	0x1CD2    ADDS	R2, R2, #3
0x24A6	0x7812    LDRB	R2, [R2, #0]
0x24A8	0xF0020280  AND	R2, R2, #128
0x24AC	0xB2D2    UXTB	R2, R2
0x24AE	0xB172    CBZ	R2, L__FloatToStr179
;__Lib_Conversions.c, 645 :: 		
0x24B0	0xAA01    ADD	R2, SP, #4
0x24B2	0x1CD3    ADDS	R3, R2, #3
0x24B4	0x781A    LDRB	R2, [R3, #0]
0x24B6	0xF0820280  EOR	R2, R2, #128
0x24BA	0x701A    STRB	R2, [R3, #0]
;__Lib_Conversions.c, 646 :: 		
0x24BC	0x1C6A    ADDS	R2, R5, #1
; i end address is: 20 (R5)
; i start address is: 12 (R3)
0x24BE	0xB2D3    UXTB	R3, R2
;__Lib_Conversions.c, 647 :: 		
0x24C0	0x222D    MOVS	R2, #45
0x24C2	0x7022    STRB	R2, [R4, #0]
0x24C4	0x1C62    ADDS	R2, R4, #1
0x24C6	0x4614    MOV	R4, R2
; i end address is: 12 (R3)
; str end address is: 16 (R4)
0x24C8	0xB2DE    UXTB	R6, R3
0x24CA	0x46A2    MOV	R10, R4
;__Lib_Conversions.c, 648 :: 		
0x24CC	0xE001    B	L_FloatToStr118
L__FloatToStr179:
;__Lib_Conversions.c, 644 :: 		
0x24CE	0x46A2    MOV	R10, R4
0x24D0	0xB2EE    UXTB	R6, R5
;__Lib_Conversions.c, 648 :: 		
L_FloatToStr118:
;__Lib_Conversions.c, 649 :: 		
; str start address is: 40 (R10)
; i start address is: 24 (R6)
0x24D2	0x9A01    LDR	R2, [SP, #4]
0x24D4	0xB932    CBNZ	R2, L_FloatToStr119
; bpoint end address is: 0 (R0)
; dexpon end address is: 4 (R1)
; i end address is: 24 (R6)
;__Lib_Conversions.c, 650 :: 		
0x24D6	0x4A61    LDR	R2, [PC, #388]
0x24D8	0x4611    MOV	R1, R2
0x24DA	0x4650    MOV	R0, R10
; str end address is: 40 (R10)
0x24DC	0xF7FFFC34  BL	_strcpy+0
;__Lib_Conversions.c, 651 :: 		
0x24E0	0x2000    MOVS	R0, #0
0x24E2	0xE0B5    B	L_end_FloatToStr
;__Lib_Conversions.c, 652 :: 		
L_FloatToStr119:
;__Lib_Conversions.c, 653 :: 		
; str start address is: 40 (R10)
; i start address is: 24 (R6)
; dexpon start address is: 4 (R1)
; bpoint start address is: 0 (R0)
0x24E4	0x9A01    LDR	R2, [SP, #4]
0x24E6	0xF1B24FFF  CMP	R2, #2139095040
0x24EA	0xD106    BNE	L_FloatToStr120
; bpoint end address is: 0 (R0)
; dexpon end address is: 4 (R1)
;__Lib_Conversions.c, 654 :: 		
0x24EC	0x4A5C    LDR	R2, [PC, #368]
0x24EE	0x4611    MOV	R1, R2
0x24F0	0x4650    MOV	R0, R10
; str end address is: 40 (R10)
0x24F2	0xF7FFFC29  BL	_strcpy+0
;__Lib_Conversions.c, 655 :: 		
0x24F6	0xB2F0    UXTB	R0, R6
; i end address is: 24 (R6)
0x24F8	0xE0AA    B	L_end_FloatToStr
;__Lib_Conversions.c, 656 :: 		
L_FloatToStr120:
;__Lib_Conversions.c, 664 :: 		
; str start address is: 40 (R10)
; dexpon start address is: 4 (R1)
; bpoint start address is: 0 (R0)
0x24FA	0xFA5FF980  UXTB	R9, R0
; dexpon end address is: 4 (R1)
; str end address is: 40 (R10)
0x24FE	0xFA4FF881  SXTB	R8, R1
L_FloatToStr121:
; bpoint end address is: 0 (R0)
; str start address is: 40 (R10)
; dexpon start address is: 32 (R8)
; bpoint start address is: 36 (R9)
0x2502	0x9A01    LDR	R2, [SP, #4]
0x2504	0xF04F507E  MOV	R0, #1065353216
0x2508	0xF7FEFEF0  BL	__Compare_FP+0
0x250C	0xF2400000  MOVW	R0, #0
0x2510	0xDD00    BLE	L__FloatToStr239
0x2512	0x2001    MOVS	R0, #1
L__FloatToStr239:
0x2514	0xB148    CBZ	R0, L_FloatToStr122
;__Lib_Conversions.c, 665 :: 		
0x2516	0x9A01    LDR	R2, [SP, #4]
0x2518	0x4852    LDR	R0, [PC, #328]
0x251A	0xF7FFFAB1  BL	__Mul_FP+0
0x251E	0x9001    STR	R0, [SP, #4]
;__Lib_Conversions.c, 666 :: 		
0x2520	0xF1A80801  SUB	R8, R8, #1
0x2524	0xFA4FF888  SXTB	R8, R8
;__Lib_Conversions.c, 667 :: 		
0x2528	0xE7EB    B	L_FloatToStr121
L_FloatToStr122:
;__Lib_Conversions.c, 672 :: 		
; str end address is: 40 (R10)
; dexpon end address is: 32 (R8)
L_FloatToStr123:
; bpoint end address is: 36 (R9)
; bpoint start address is: 36 (R9)
; dexpon start address is: 32 (R8)
; str start address is: 40 (R10)
0x252A	0x9A01    LDR	R2, [SP, #4]
0x252C	0x484D    LDR	R0, [PC, #308]
0x252E	0xF7FEFEDD  BL	__Compare_FP+0
0x2532	0xF2400000  MOVW	R0, #0
0x2536	0xDC00    BGT	L__FloatToStr240
0x2538	0x2001    MOVS	R0, #1
L__FloatToStr240:
0x253A	0xB148    CBZ	R0, L_FloatToStr124
;__Lib_Conversions.c, 673 :: 		
0x253C	0x9A01    LDR	R2, [SP, #4]
0x253E	0x484A    LDR	R0, [PC, #296]
0x2540	0xF7FFFA9E  BL	__Mul_FP+0
0x2544	0x9001    STR	R0, [SP, #4]
;__Lib_Conversions.c, 674 :: 		
0x2546	0xF1080801  ADD	R8, R8, #1
0x254A	0xFA4FF888  SXTB	R8, R8
;__Lib_Conversions.c, 675 :: 		
0x254E	0xE7EC    B	L_FloatToStr123
L_FloatToStr124:
;__Lib_Conversions.c, 680 :: 		
0x2550	0x9A01    LDR	R2, [SP, #4]
0x2552	0x0052    LSLS	R2, R2, #1
0x2554	0x9201    STR	R2, [SP, #4]
;__Lib_Conversions.c, 689 :: 		
0x2556	0xAA01    ADD	R2, SP, #4
0x2558	0x1CD2    ADDS	R2, R2, #3
0x255A	0x7812    LDRB	R2, [R2, #0]
0x255C	0x3A7F    SUBS	R2, #127
; d start address is: 0 (R0)
0x255E	0xB2D0    UXTB	R0, R2
;__Lib_Conversions.c, 692 :: 		
0x2560	0xAA01    ADD	R2, SP, #4
0x2562	0x1CD3    ADDS	R3, R2, #3
0x2564	0x2201    MOVS	R2, #1
0x2566	0x701A    STRB	R2, [R3, #0]
;__Lib_Conversions.c, 693 :: 		
0x2568	0x9A01    LDR	R2, [SP, #4]
0x256A	0x4082    LSLS	R2, R0
; d end address is: 0 (R0)
0x256C	0x9201    STR	R2, [SP, #4]
;__Lib_Conversions.c, 694 :: 		
0x256E	0xAA01    ADD	R2, SP, #4
0x2570	0x1CD2    ADDS	R2, R2, #3
0x2572	0x7812    LDRB	R2, [R2, #0]
0x2574	0x3230    ADDS	R2, #48
0x2576	0xF88A2000  STRB	R2, [R10, #0]
0x257A	0xF10A0001  ADD	R0, R10, #1
; str end address is: 40 (R10)
; str start address is: 0 (R0)
;__Lib_Conversions.c, 695 :: 		
0x257E	0xF1B80F01  CMP	R8, #1
0x2582	0xDB06    BLT	L__FloatToStr178
0x2584	0xF1B80F06  CMP	R8, #6
0x2588	0xDC03    BGT	L__FloatToStr177
0x258A	0x4605    MOV	R5, R0
; bpoint end address is: 36 (R9)
0x258C	0xFA5FF189  UXTB	R1, R9
0x2590	0xE003    B	L_FloatToStr127
L__FloatToStr178:
L__FloatToStr177:
;__Lib_Conversions.c, 696 :: 		
0x2592	0x222E    MOVS	R2, #46
0x2594	0x7002    STRB	R2, [R0, #0]
0x2596	0x1C45    ADDS	R5, R0, #1
; str end address is: 0 (R0)
; str start address is: 20 (R5)
;__Lib_Conversions.c, 697 :: 		
; bpoint start address is: 4 (R1)
0x2598	0x2101    MOVS	R1, #1
; str end address is: 20 (R5)
; bpoint end address is: 4 (R1)
;__Lib_Conversions.c, 698 :: 		
L_FloatToStr127:
;__Lib_Conversions.c, 699 :: 		
; bpoint start address is: 4 (R1)
; str start address is: 20 (R5)
; d start address is: 0 (R0)
0x259A	0x2006    MOVS	R0, #6
; dexpon end address is: 32 (R8)
; str end address is: 20 (R5)
; bpoint end address is: 4 (R1)
; d end address is: 0 (R0)
0x259C	0xFA4FF488  SXTB	R4, R8
L_FloatToStr128:
; d start address is: 0 (R0)
; str start address is: 20 (R5)
; bpoint start address is: 4 (R1)
; dexpon start address is: 16 (R4)
0x25A0	0xB300    CBZ	R0, L_FloatToStr129
;__Lib_Conversions.c, 700 :: 		
0x25A2	0xAA01    ADD	R2, SP, #4
0x25A4	0x1CD3    ADDS	R3, R2, #3
0x25A6	0x2200    MOVS	R2, #0
0x25A8	0x701A    STRB	R2, [R3, #0]
;__Lib_Conversions.c, 701 :: 		
0x25AA	0x9A01    LDR	R2, [SP, #4]
0x25AC	0x0093    LSLS	R3, R2, #2
0x25AE	0x9A01    LDR	R2, [SP, #4]
0x25B0	0x18D2    ADDS	R2, R2, R3
0x25B2	0x9201    STR	R2, [SP, #4]
;__Lib_Conversions.c, 702 :: 		
0x25B4	0x9A01    LDR	R2, [SP, #4]
0x25B6	0x0052    LSLS	R2, R2, #1
0x25B8	0x9201    STR	R2, [SP, #4]
;__Lib_Conversions.c, 703 :: 		
0x25BA	0xAA01    ADD	R2, SP, #4
0x25BC	0x1CD2    ADDS	R2, R2, #3
0x25BE	0x7812    LDRB	R2, [R2, #0]
0x25C0	0x3230    ADDS	R2, #48
0x25C2	0x702A    STRB	R2, [R5, #0]
0x25C4	0x1C6D    ADDS	R5, R5, #1
;__Lib_Conversions.c, 704 :: 		
0x25C6	0xB951    CBNZ	R1, L__FloatToStr181
;__Lib_Conversions.c, 705 :: 		
0x25C8	0x1E62    SUBS	R2, R4, #1
0x25CA	0xB252    SXTB	R2, R2
; dexpon end address is: 16 (R4)
; dexpon start address is: 12 (R3)
0x25CC	0xB253    SXTB	R3, R2
0x25CE	0xB922    CBNZ	R2, L__FloatToStr180
; bpoint end address is: 4 (R1)
;__Lib_Conversions.c, 706 :: 		
0x25D0	0x222E    MOVS	R2, #46
0x25D2	0x702A    STRB	R2, [R5, #0]
0x25D4	0x1C6D    ADDS	R5, R5, #1
;__Lib_Conversions.c, 707 :: 		
; bpoint start address is: 4 (R1)
0x25D6	0x2101    MOVS	R1, #1
; str end address is: 20 (R5)
; bpoint end address is: 4 (R1)
;__Lib_Conversions.c, 708 :: 		
0x25D8	0xE7FF    B	L_FloatToStr132
L__FloatToStr180:
;__Lib_Conversions.c, 705 :: 		
;__Lib_Conversions.c, 708 :: 		
L_FloatToStr132:
; bpoint start address is: 4 (R1)
; str start address is: 20 (R5)
0x25DA	0xB25C    SXTB	R4, R3
; str end address is: 20 (R5)
; bpoint end address is: 4 (R1)
; dexpon end address is: 12 (R3)
0x25DC	0xE7FF    B	L_FloatToStr131
L__FloatToStr181:
;__Lib_Conversions.c, 704 :: 		
;__Lib_Conversions.c, 708 :: 		
L_FloatToStr131:
;__Lib_Conversions.c, 699 :: 		
; str start address is: 20 (R5)
; bpoint start address is: 4 (R1)
; dexpon start address is: 16 (R4)
0x25DE	0x1E40    SUBS	R0, R0, #1
0x25E0	0xB2C0    UXTB	R0, R0
;__Lib_Conversions.c, 709 :: 		
; bpoint end address is: 4 (R1)
; d end address is: 0 (R0)
0x25E2	0xE7DD    B	L_FloatToStr128
L_FloatToStr129:
;__Lib_Conversions.c, 710 :: 		
0x25E4	0x4629    MOV	R1, R5
; dexpon end address is: 16 (R4)
0x25E6	0xB260    SXTB	R0, R4
L_FloatToStr133:
; str end address is: 20 (R5)
; dexpon start address is: 0 (R0)
; str start address is: 4 (R1)
0x25E8	0x1E4A    SUBS	R2, R1, #1
0x25EA	0x7812    LDRB	R2, [R2, #0]
0x25EC	0x2A30    CMP	R2, #48
0x25EE	0xD101    BNE	L_FloatToStr134
;__Lib_Conversions.c, 711 :: 		
0x25F0	0x1E49    SUBS	R1, R1, #1
0x25F2	0xE7F9    B	L_FloatToStr133
L_FloatToStr134:
;__Lib_Conversions.c, 712 :: 		
0x25F4	0x1E4A    SUBS	R2, R1, #1
0x25F6	0x7812    LDRB	R2, [R2, #0]
0x25F8	0x2A2E    CMP	R2, #46
0x25FA	0xD101    BNE	L__FloatToStr182
;__Lib_Conversions.c, 713 :: 		
0x25FC	0x1E49    SUBS	R1, R1, #1
; str end address is: 4 (R1)
0x25FE	0xE7FF    B	L_FloatToStr135
L__FloatToStr182:
;__Lib_Conversions.c, 712 :: 		
;__Lib_Conversions.c, 713 :: 		
L_FloatToStr135:
;__Lib_Conversions.c, 714 :: 		
; str start address is: 4 (R1)
0x2600	0xB310    CBZ	R0, L__FloatToStr185
;__Lib_Conversions.c, 715 :: 		
0x2602	0x2265    MOVS	R2, #101
0x2604	0x700A    STRB	R2, [R1, #0]
0x2606	0x1C49    ADDS	R1, R1, #1
;__Lib_Conversions.c, 716 :: 		
0x2608	0x2800    CMP	R0, #0
0x260A	0xDA06    BGE	L__FloatToStr183
;__Lib_Conversions.c, 717 :: 		
0x260C	0x222D    MOVS	R2, #45
0x260E	0x700A    STRB	R2, [R1, #0]
0x2610	0x1C49    ADDS	R1, R1, #1
;__Lib_Conversions.c, 718 :: 		
0x2612	0x4242    RSBS	R2, R0, #0
0x2614	0xB250    SXTB	R0, R2
; dexpon end address is: 0 (R0)
; str end address is: 4 (R1)
0x2616	0xB243    SXTB	R3, R0
;__Lib_Conversions.c, 719 :: 		
0x2618	0xE000    B	L_FloatToStr137
L__FloatToStr183:
;__Lib_Conversions.c, 716 :: 		
0x261A	0xB243    SXTB	R3, R0
;__Lib_Conversions.c, 719 :: 		
L_FloatToStr137:
;__Lib_Conversions.c, 720 :: 		
; dexpon start address is: 12 (R3)
; str start address is: 4 (R1)
; d start address is: 0 (R0)
0x261C	0xB2D8    UXTB	R0, R3
;__Lib_Conversions.c, 721 :: 		
0x261E	0xB2DA    UXTB	R2, R3
; dexpon end address is: 12 (R3)
0x2620	0x2A09    CMP	R2, #9
0x2622	0xD907    BLS	L__FloatToStr184
;__Lib_Conversions.c, 722 :: 		
0x2624	0x220A    MOVS	R2, #10
0x2626	0xFBB0F2F2  UDIV	R2, R0, R2
0x262A	0xB2D2    UXTB	R2, R2
0x262C	0x3230    ADDS	R2, #48
0x262E	0x700A    STRB	R2, [R1, #0]
0x2630	0x1C49    ADDS	R1, R1, #1
; str end address is: 4 (R1)
0x2632	0xE7FF    B	L_FloatToStr138
L__FloatToStr184:
;__Lib_Conversions.c, 721 :: 		
;__Lib_Conversions.c, 722 :: 		
L_FloatToStr138:
;__Lib_Conversions.c, 723 :: 		
; str start address is: 4 (R1)
0x2634	0x230A    MOVS	R3, #10
0x2636	0xFBB0F2F3  UDIV	R2, R0, R3
0x263A	0xFB030212  MLS	R2, R3, R2, R0
0x263E	0xB2D2    UXTB	R2, R2
; d end address is: 0 (R0)
0x2640	0x3230    ADDS	R2, #48
0x2642	0x700A    STRB	R2, [R1, #0]
0x2644	0x1C48    ADDS	R0, R1, #1
; str end address is: 4 (R1)
; str start address is: 0 (R0)
; str end address is: 0 (R0)
;__Lib_Conversions.c, 724 :: 		
0x2646	0xE000    B	L_FloatToStr136
L__FloatToStr185:
;__Lib_Conversions.c, 714 :: 		
0x2648	0x4608    MOV	R0, R1
;__Lib_Conversions.c, 724 :: 		
L_FloatToStr136:
;__Lib_Conversions.c, 725 :: 		
; str start address is: 0 (R0)
0x264A	0x2200    MOVS	R2, #0
0x264C	0x7002    STRB	R2, [R0, #0]
; str end address is: 0 (R0)
;__Lib_Conversions.c, 726 :: 		
0x264E	0x2000    MOVS	R0, #0
;__Lib_Conversions.c, 727 :: 		
L_end_FloatToStr:
0x2650	0xF8DDE000  LDR	LR, [SP, #0]
0x2654	0xB002    ADD	SP, SP, #8
0x2656	0x4770    BX	LR
0x2658	0x01152000  	?lstr1___Lib_Conversions+0
0x265C	0x01192000  	?lstr2___Lib_Conversions+0
0x2660	0x011B2000  	?lstr3___Lib_Conversions+0
0x2664	0x00004120  	#1092616192
0x2668	0xCCCD3DCC  	#1036831949
; end of _FloatToStr
_strcpy:
;__Lib_CString.c, 133 :: 		
; from start address is: 4 (R1)
; to start address is: 0 (R0)
0x1D48	0xB081    SUB	SP, SP, #4
0x1D4A	0x9100    STR	R1, [SP, #0]
0x1D4C	0x4601    MOV	R1, R0
0x1D4E	0x9800    LDR	R0, [SP, #0]
; from end address is: 4 (R1)
; to end address is: 0 (R0)
; to start address is: 4 (R1)
; from start address is: 0 (R0)
;__Lib_CString.c, 136 :: 		
; cp start address is: 12 (R3)
0x1D50	0x460B    MOV	R3, R1
; cp end address is: 12 (R3)
; to end address is: 4 (R1)
;__Lib_CString.c, 137 :: 		
L_strcpy34:
; cp start address is: 20 (R5)
; cp start address is: 12 (R3)
; from start address is: 0 (R0)
; to start address is: 4 (R1)
0x1D52	0x461C    MOV	R4, R3
0x1D54	0x1C5A    ADDS	R2, R3, #1
; cp end address is: 12 (R3)
; cp start address is: 20 (R5)
0x1D56	0x4615    MOV	R5, R2
; cp end address is: 20 (R5)
0x1D58	0x4603    MOV	R3, R0
0x1D5A	0x1C42    ADDS	R2, R0, #1
0x1D5C	0x4610    MOV	R0, R2
; from end address is: 0 (R0)
0x1D5E	0x781A    LDRB	R2, [R3, #0]
0x1D60	0x7022    STRB	R2, [R4, #0]
0x1D62	0x7822    LDRB	R2, [R4, #0]
0x1D64	0xB10A    CBZ	R2, L_strcpy35
; cp end address is: 20 (R5)
; from end address is: 0 (R0)
;__Lib_CString.c, 138 :: 		
; from start address is: 0 (R0)
; cp start address is: 20 (R5)
; cp end address is: 20 (R5)
; from end address is: 0 (R0)
0x1D66	0x462B    MOV	R3, R5
0x1D68	0xE7F3    B	L_strcpy34
L_strcpy35:
;__Lib_CString.c, 139 :: 		
0x1D6A	0x4608    MOV	R0, R1
; to end address is: 4 (R1)
;__Lib_CString.c, 140 :: 		
L_end_strcpy:
0x1D6C	0xB001    ADD	SP, SP, #4
0x1D6E	0x4770    BX	LR
; end of _strcpy
__Mul_FP:
;__Lib_MathDouble.c, 666 :: 		
0x1A80	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 668 :: 		
0x1A82	0xB5FA    PUSH	(R1, R3, R4, R5, R6, R7, R14)
;__Lib_MathDouble.c, 670 :: 		
0x1A84	0xEA900602  EORS	R6, R0, R2, LSL #0
;__Lib_MathDouble.c, 671 :: 		
0x1A88	0xBF4C    ITE	MI
;__Lib_MathDouble.c, 672 :: 		
0x1A8A	0xF04F4600  MOVMI	R6, #-2147483648
;__Lib_MathDouble.c, 673 :: 		
0x1A8E	0xF04F0600  MOVPL	R6, #0
;__Lib_MathDouble.c, 675 :: 		
0x1A92	0xEA4F2100  LSL	R1, R0, #8
;__Lib_MathDouble.c, 676 :: 		
0x1A96	0xEA4F0340  LSL	R3, R0, #1
;__Lib_MathDouble.c, 677 :: 		
0x1A9A	0x0E1B    LSRS	R3, R3, #24
;__Lib_MathDouble.c, 678 :: 		
0x1A9C	0xBF12    ITEE	NE
;__Lib_MathDouble.c, 679 :: 		
0x1A9E	0xF0414100  ORRNE	R1, R1, #-2147483648
;__Lib_MathDouble.c, 681 :: 		
0x1AA2	0xF04F0000  MOVEQ	R0, #0
;__Lib_MathDouble.c, 683 :: 		
0x1AA6	0xE02C    BEQ	__me_lab_end
;__Lib_MathDouble.c, 685 :: 		
0x1AA8	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 686 :: 		
0x1AAA	0xD026    BEQ	__me_ovfl
;__Lib_MathDouble.c, 688 :: 		
0x1AAC	0xEA4F2402  LSL	R4, R2, #8
;__Lib_MathDouble.c, 689 :: 		
0x1AB0	0xEA4F0542  LSL	R5, R2, #1
;__Lib_MathDouble.c, 690 :: 		
0x1AB4	0x0E2D    LSRS	R5, R5, #24
;__Lib_MathDouble.c, 691 :: 		
0x1AB6	0xBF12    ITEE	NE
;__Lib_MathDouble.c, 692 :: 		
0x1AB8	0xF0444400  ORRNE	R4, R4, #-2147483648
;__Lib_MathDouble.c, 694 :: 		
0x1ABC	0xF04F0000  MOVEQ	R0, #0
;__Lib_MathDouble.c, 696 :: 		
0x1AC0	0xE01F    BEQ	__me_lab_end
;__Lib_MathDouble.c, 698 :: 		
0x1AC2	0x2DFF    CMP	R5, #255
;__Lib_MathDouble.c, 699 :: 		
0x1AC4	0xD019    BEQ	__me_ovfl
;__Lib_MathDouble.c, 701 :: 		
0x1AC6	0x195B    ADDS	R3, R3, R5
;__Lib_MathDouble.c, 703 :: 		
0x1AC8	0xFBA15404  UMULL	R5, R4, R1, R4
;__Lib_MathDouble.c, 705 :: 		
0x1ACC	0x2C00    CMP	R4, #0
;__Lib_MathDouble.c, 706 :: 		
0x1ACE	0xBF5C    ITT	PL
;__Lib_MathDouble.c, 707 :: 		
0x1AD0	0x0064    LSLPL	R4, R4, #1
;__Lib_MathDouble.c, 708 :: 		
0x1AD2	0x1E5B    SUBPL	R3, R3, #1
;__Lib_MathDouble.c, 710 :: 		
0x1AD4	0x3480    ADDS	R4, #128
;__Lib_MathDouble.c, 711 :: 		
0x1AD6	0xBF24    ITT	CS
;__Lib_MathDouble.c, 712 :: 		
0x1AD8	0x1C5B    ADDCS	R3, R3, #1
;__Lib_MathDouble.c, 713 :: 		
0x1ADA	0x0864    LSRCS	R4, R4, #1
;__Lib_MathDouble.c, 715 :: 		
0x1ADC	0x3B7E    SUBS	R3, #126
;__Lib_MathDouble.c, 716 :: 		
0x1ADE	0xBFDC    ITT	LE
;__Lib_MathDouble.c, 717 :: 		
0x1AE0	0xF04F0000  MOVLE	R0, #0
;__Lib_MathDouble.c, 719 :: 		
0x1AE4	0xE00D    BLE	__me_lab_end
;__Lib_MathDouble.c, 721 :: 		
0x1AE6	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 722 :: 		
0x1AE8	0xD207    BCS	__me_ovfl
;__Lib_MathDouble.c, 724 :: 		
0x1AEA	0xEA4F2014  LSR	R0, R4, #8
;__Lib_MathDouble.c, 725 :: 		
0x1AEE	0xF4300000  BICS	R0, R0, #8388608
;__Lib_MathDouble.c, 726 :: 		
0x1AF2	0xEA4050C3  ORR	R0, R0, R3, LSL #23
;__Lib_MathDouble.c, 727 :: 		
0x1AF6	0x4330    ORRS	R0, R6
;__Lib_MathDouble.c, 730 :: 		
0x1AF8	0xE003    B	__me_lab_end
;__Lib_MathDouble.c, 732 :: 		
__me_ovfl:
0x1AFA	0x27FF    MOVS	R7, #255
;__Lib_MathDouble.c, 733 :: 		
0x1AFC	0x05FF    LSLS	R7, R7, #23
;__Lib_MathDouble.c, 734 :: 		
0x1AFE	0xEA460007  ORR	R0, R6, R7, LSL #0
;__Lib_MathDouble.c, 735 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 736 :: 		
0x1B02	0xE8BD40FA  POP	(R1, R3, R4, R5, R6, R7, R14)
;__Lib_MathDouble.c, 738 :: 		
L_end__Mul_FP:
0x1B06	0xB001    ADD	SP, SP, #4
0x1B08	0x4770    BX	LR
; end of __Mul_FP
_color8_getColor:
;__color8_driver.c, 282 :: 		uint8_t color8_getColor(float color_value)
; color_value start address is: 0 (R0)
0x22B0	0xB081    SUB	SP, SP, #4
0x22B2	0xF8CDE000  STR	LR, [SP, #0]
0x22B6	0x4601    MOV	R1, R0
; color_value end address is: 0 (R0)
; color_value start address is: 4 (R1)
;__color8_driver.c, 284 :: 		if ((color_value >= 0.920) && (color_value <= 0.9749))
0x22B8	0x4856    LDR	R0, [PC, #344]
0x22BA	0x460A    MOV	R2, R1
0x22BC	0xF7FFF816  BL	__Compare_FP+0
0x22C0	0xF2400000  MOVW	R0, #0
0x22C4	0xDC00    BGT	L__color8_getColor94
0x22C6	0x2001    MOVS	R0, #1
L__color8_getColor94:
0x22C8	0xB158    CBZ	R0, L__color8_getColor57
0x22CA	0x4853    LDR	R0, [PC, #332]
0x22CC	0x460A    MOV	R2, R1
0x22CE	0xF7FFF80D  BL	__Compare_FP+0
0x22D2	0xF2400000  MOVW	R0, #0
0x22D6	0xDB00    BLT	L__color8_getColor95
0x22D8	0x2001    MOVS	R0, #1
L__color8_getColor95:
0x22DA	0xB110    CBZ	R0, L__color8_getColor56
; color_value end address is: 4 (R1)
L__color8_getColor55:
;__color8_driver.c, 286 :: 		return _PINK_COLOR_FLAG;
0x22DC	0x494F    LDR	R1, [PC, #316]
0x22DE	0x7808    LDRB	R0, [R1, #0]
0x22E0	0xE094    B	L_end_color8_getColor
;__color8_driver.c, 284 :: 		if ((color_value >= 0.920) && (color_value <= 0.9749))
L__color8_getColor57:
; color_value start address is: 4 (R1)
L__color8_getColor56:
;__color8_driver.c, 288 :: 		else if ((color_value >= 0.6201) && (color_value <= 0.919))
0x22E2	0x484F    LDR	R0, [PC, #316]
0x22E4	0x460A    MOV	R2, R1
0x22E6	0xF7FFF801  BL	__Compare_FP+0
0x22EA	0xF2400000  MOVW	R0, #0
0x22EE	0xDC00    BGT	L__color8_getColor96
0x22F0	0x2001    MOVS	R0, #1
L__color8_getColor96:
0x22F2	0xB158    CBZ	R0, L__color8_getColor59
0x22F4	0x484B    LDR	R0, [PC, #300]
0x22F6	0x460A    MOV	R2, R1
0x22F8	0xF7FEFFF8  BL	__Compare_FP+0
0x22FC	0xF2400000  MOVW	R0, #0
0x2300	0xDB00    BLT	L__color8_getColor97
0x2302	0x2001    MOVS	R0, #1
L__color8_getColor97:
0x2304	0xB110    CBZ	R0, L__color8_getColor58
; color_value end address is: 4 (R1)
L__color8_getColor54:
;__color8_driver.c, 290 :: 		return _PURPLE_COLOR_FLAG;
0x2306	0x4948    LDR	R1, [PC, #288]
0x2308	0x7808    LDRB	R0, [R1, #0]
0x230A	0xE07F    B	L_end_color8_getColor
;__color8_driver.c, 288 :: 		else if ((color_value >= 0.6201) && (color_value <= 0.919))
L__color8_getColor59:
; color_value start address is: 4 (R1)
L__color8_getColor58:
;__color8_driver.c, 292 :: 		else if ((color_value >= 0.521) && (color_value <= 0.6200))
0x230C	0x4847    LDR	R0, [PC, #284]
0x230E	0x460A    MOV	R2, R1
0x2310	0xF7FEFFEC  BL	__Compare_FP+0
0x2314	0xF2400000  MOVW	R0, #0
0x2318	0xDC00    BGT	L__color8_getColor98
0x231A	0x2001    MOVS	R0, #1
L__color8_getColor98:
0x231C	0xB158    CBZ	R0, L__color8_getColor61
0x231E	0x4844    LDR	R0, [PC, #272]
0x2320	0x460A    MOV	R2, R1
0x2322	0xF7FEFFE3  BL	__Compare_FP+0
0x2326	0xF2400000  MOVW	R0, #0
0x232A	0xDB00    BLT	L__color8_getColor99
0x232C	0x2001    MOVS	R0, #1
L__color8_getColor99:
0x232E	0xB110    CBZ	R0, L__color8_getColor60
; color_value end address is: 4 (R1)
L__color8_getColor53:
;__color8_driver.c, 294 :: 		return _BLUE_COLOR_FLAG;
0x2330	0x4940    LDR	R1, [PC, #256]
0x2332	0x7808    LDRB	R0, [R1, #0]
0x2334	0xE06A    B	L_end_color8_getColor
;__color8_driver.c, 292 :: 		else if ((color_value >= 0.521) && (color_value <= 0.6200))
L__color8_getColor61:
; color_value start address is: 4 (R1)
L__color8_getColor60:
;__color8_driver.c, 296 :: 		else if ((color_value >= 0.430) && (color_value < 0.520))
0x2336	0x4840    LDR	R0, [PC, #256]
0x2338	0x460A    MOV	R2, R1
0x233A	0xF7FEFFD7  BL	__Compare_FP+0
0x233E	0xF2400000  MOVW	R0, #0
0x2342	0xDC00    BGT	L__color8_getColor100
0x2344	0x2001    MOVS	R0, #1
L__color8_getColor100:
0x2346	0xB158    CBZ	R0, L__color8_getColor63
0x2348	0x483C    LDR	R0, [PC, #240]
0x234A	0x460A    MOV	R2, R1
0x234C	0xF7FEFFCE  BL	__Compare_FP+0
0x2350	0xF2400000  MOVW	R0, #0
0x2354	0xDD00    BLE	L__color8_getColor101
0x2356	0x2001    MOVS	R0, #1
L__color8_getColor101:
0x2358	0xB110    CBZ	R0, L__color8_getColor62
; color_value end address is: 4 (R1)
L__color8_getColor52:
;__color8_driver.c, 298 :: 		return _CYAN_COLOR_FLAG;
0x235A	0x4939    LDR	R1, [PC, #228]
0x235C	0x7808    LDRB	R0, [R1, #0]
0x235E	0xE055    B	L_end_color8_getColor
;__color8_driver.c, 296 :: 		else if ((color_value >= 0.430) && (color_value < 0.520))
L__color8_getColor63:
; color_value start address is: 4 (R1)
L__color8_getColor62:
;__color8_driver.c, 300 :: 		else if ((color_value >= 0.300) && (color_value <= 0.429))
0x2360	0x4838    LDR	R0, [PC, #224]
0x2362	0x460A    MOV	R2, R1
0x2364	0xF7FEFFC2  BL	__Compare_FP+0
0x2368	0xF2400000  MOVW	R0, #0
0x236C	0xDC00    BGT	L__color8_getColor102
0x236E	0x2001    MOVS	R0, #1
L__color8_getColor102:
0x2370	0xB158    CBZ	R0, L__color8_getColor65
0x2372	0x4835    LDR	R0, [PC, #212]
0x2374	0x460A    MOV	R2, R1
0x2376	0xF7FEFFB9  BL	__Compare_FP+0
0x237A	0xF2400000  MOVW	R0, #0
0x237E	0xDB00    BLT	L__color8_getColor103
0x2380	0x2001    MOVS	R0, #1
L__color8_getColor103:
0x2382	0xB110    CBZ	R0, L__color8_getColor64
; color_value end address is: 4 (R1)
L__color8_getColor51:
;__color8_driver.c, 302 :: 		return _GREEN_COLOR_FLAG;
0x2384	0x4931    LDR	R1, [PC, #196]
0x2386	0x7808    LDRB	R0, [R1, #0]
0x2388	0xE040    B	L_end_color8_getColor
;__color8_driver.c, 300 :: 		else if ((color_value >= 0.300) && (color_value <= 0.429))
L__color8_getColor65:
; color_value start address is: 4 (R1)
L__color8_getColor64:
;__color8_driver.c, 304 :: 		else if ((color_value >= 0.205) && (color_value <= 0.299))
0x238A	0x4831    LDR	R0, [PC, #196]
0x238C	0x460A    MOV	R2, R1
0x238E	0xF7FEFFAD  BL	__Compare_FP+0
0x2392	0xF2400000  MOVW	R0, #0
0x2396	0xDC00    BGT	L__color8_getColor104
0x2398	0x2001    MOVS	R0, #1
L__color8_getColor104:
0x239A	0xB158    CBZ	R0, L__color8_getColor67
0x239C	0x482D    LDR	R0, [PC, #180]
0x239E	0x460A    MOV	R2, R1
0x23A0	0xF7FEFFA4  BL	__Compare_FP+0
0x23A4	0xF2400000  MOVW	R0, #0
0x23A8	0xDB00    BLT	L__color8_getColor105
0x23AA	0x2001    MOVS	R0, #1
L__color8_getColor105:
0x23AC	0xB110    CBZ	R0, L__color8_getColor66
; color_value end address is: 4 (R1)
L__color8_getColor50:
;__color8_driver.c, 306 :: 		return _YELLOW_COLOR_FLAG;
0x23AE	0x492A    LDR	R1, [PC, #168]
0x23B0	0x7808    LDRB	R0, [R1, #0]
0x23B2	0xE02B    B	L_end_color8_getColor
;__color8_driver.c, 304 :: 		else if ((color_value >= 0.205) && (color_value <= 0.299))
L__color8_getColor67:
; color_value start address is: 4 (R1)
L__color8_getColor66:
;__color8_driver.c, 308 :: 		else if((color_value >= 0.019) && (color_value <= 0.200))
0x23B4	0x4829    LDR	R0, [PC, #164]
0x23B6	0x460A    MOV	R2, R1
0x23B8	0xF7FEFF98  BL	__Compare_FP+0
0x23BC	0xF2400000  MOVW	R0, #0
0x23C0	0xDC00    BGT	L__color8_getColor106
0x23C2	0x2001    MOVS	R0, #1
L__color8_getColor106:
0x23C4	0xB158    CBZ	R0, L__color8_getColor69
0x23C6	0x4826    LDR	R0, [PC, #152]
0x23C8	0x460A    MOV	R2, R1
0x23CA	0xF7FEFF8F  BL	__Compare_FP+0
0x23CE	0xF2400000  MOVW	R0, #0
0x23D2	0xDB00    BLT	L__color8_getColor107
0x23D4	0x2001    MOVS	R0, #1
L__color8_getColor107:
0x23D6	0xB110    CBZ	R0, L__color8_getColor68
; color_value end address is: 4 (R1)
L__color8_getColor49:
;__color8_driver.c, 310 :: 		return _ORANGE_COLOR_FLAG;
0x23D8	0x4922    LDR	R1, [PC, #136]
0x23DA	0x7808    LDRB	R0, [R1, #0]
0x23DC	0xE016    B	L_end_color8_getColor
;__color8_driver.c, 308 :: 		else if((color_value >= 0.019) && (color_value <= 0.200))
L__color8_getColor69:
; color_value start address is: 4 (R1)
L__color8_getColor68:
;__color8_driver.c, 312 :: 		else if ((color_value >= 0.0005) && (color_value <= 0.018))
0x23DE	0x4822    LDR	R0, [PC, #136]
0x23E0	0x460A    MOV	R2, R1
0x23E2	0xF7FEFF83  BL	__Compare_FP+0
0x23E6	0xF2400000  MOVW	R0, #0
0x23EA	0xDC00    BGT	L__color8_getColor108
0x23EC	0x2001    MOVS	R0, #1
L__color8_getColor108:
0x23EE	0xB158    CBZ	R0, L__color8_getColor71
0x23F0	0x481E    LDR	R0, [PC, #120]
0x23F2	0x460A    MOV	R2, R1
0x23F4	0xF7FEFF7A  BL	__Compare_FP+0
0x23F8	0xF2400000  MOVW	R0, #0
0x23FC	0xDB00    BLT	L__color8_getColor109
0x23FE	0x2001    MOVS	R0, #1
L__color8_getColor109:
; color_value end address is: 4 (R1)
0x2400	0xB110    CBZ	R0, L__color8_getColor70
L__color8_getColor48:
;__color8_driver.c, 314 :: 		return _RED_COLOR_FLAG;
0x2402	0x491B    LDR	R1, [PC, #108]
0x2404	0x7808    LDRB	R0, [R1, #0]
0x2406	0xE001    B	L_end_color8_getColor
;__color8_driver.c, 312 :: 		else if ((color_value >= 0.0005) && (color_value <= 0.018))
L__color8_getColor71:
L__color8_getColor70:
;__color8_driver.c, 316 :: 		return _NON_COLOR_FLAG;
0x2408	0x491A    LDR	R1, [PC, #104]
0x240A	0x7808    LDRB	R0, [R1, #0]
;__color8_driver.c, 317 :: 		}
L_end_color8_getColor:
0x240C	0xF8DDE000  LDR	LR, [SP, #0]
0x2410	0xB001    ADD	SP, SP, #4
0x2412	0x4770    BX	LR
0x2414	0x851F3F6B  	#1064011039
0x2418	0x930C3F79  	#1064932108
0x241C	0x010C2000  	__color8_driver__PINK_COLOR_FLAG+0
0x2420	0xBEE03F1E  	#1058979552
0x2424	0x43963F6B  	#1063994262
0x2428	0x010D2000  	__color8_driver__PURPLE_COLOR_FLAG+0
0x242C	0x60423F05  	#1057316930
0x2430	0xB8523F1E  	#1058977874
0x2434	0x010E2000  	__color8_driver__BLUE_COLOR_FLAG+0
0x2438	0x28F63EDC  	#1054615798
0x243C	0x1EB83F05  	#1057300152
0x2440	0x010F2000  	__color8_driver__CYAN_COLOR_FLAG+0
0x2444	0x999A3E99  	#1050253722
0x2448	0xA5E33EDB  	#1054582243
0x244C	0x01102000  	__color8_driver__GREEN_COLOR_FLAG+0
0x2450	0xEB853E51  	#1045556101
0x2454	0x16873E99  	#1050220167
0x2458	0x01112000  	__color8_driver__YELLOW_COLOR_FLAG+0
0x245C	0xA5E33C9B  	#1016833507
0x2460	0xCCCD3E4C  	#1045220557
0x2464	0x01122000  	__color8_driver__ORANGE_COLOR_FLAG+0
0x2468	0x126F3A03  	#973279855
0x246C	0x74BC3C93  	#1016296636
0x2470	0x01132000  	__color8_driver__RED_COLOR_FLAG+0
0x2474	0x01142000  	__color8_driver__NON_COLOR_FLAG+0
; end of _color8_getColor
_Delay_100ms:
;__Lib_Delays.c, 53 :: 		void Delay_100ms() {
;__Lib_Delays.c, 54 :: 		Delay_ms(100);
0x2298	0xF644777F  MOVW	R7, #20351
0x229C	0xF2C00712  MOVT	R7, #18
L_Delay_100ms20:
0x22A0	0x1E7F    SUBS	R7, R7, #1
0x22A2	0xD1FD    BNE	L_Delay_100ms20
0x22A4	0xBF00    NOP
0x22A6	0xBF00    NOP
0x22A8	0xBF00    NOP
0x22AA	0xBF00    NOP
0x22AC	0xBF00    NOP
;__Lib_Delays.c, 55 :: 		}
L_end_Delay_100ms:
0x22AE	0x4770    BX	LR
; end of _Delay_100ms
__Lib_System_105_107_InitialSetUpRCCRCC2:
;__Lib_System_105_107.c, 383 :: 		
0x2C00	0xB081    SUB	SP, SP, #4
0x2C02	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_System_105_107.c, 386 :: 		
; ulRCC_CR start address is: 8 (R2)
0x2C06	0x4A46    LDR	R2, [PC, #280]
;__Lib_System_105_107.c, 387 :: 		
; ulRCC_CFGR start address is: 12 (R3)
0x2C08	0x4B46    LDR	R3, [PC, #280]
;__Lib_System_105_107.c, 388 :: 		
; ulRCC_CFGR2 start address is: 16 (R4)
0x2C0A	0x4C47    LDR	R4, [PC, #284]
;__Lib_System_105_107.c, 389 :: 		
; Fosc_kHz start address is: 4 (R1)
0x2C0C	0x4947    LDR	R1, [PC, #284]
;__Lib_System_105_107.c, 396 :: 		
0x2C0E	0xF64B3080  MOVW	R0, #48000
0x2C12	0x4281    CMP	R1, R0
0x2C14	0xD906    BLS	L___Lib_System_105_107_InitialSetUpRCCRCC232
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_105_107.c, 397 :: 		
0x2C16	0x4846    LDR	R0, [PC, #280]
0x2C18	0x6800    LDR	R0, [R0, #0]
0x2C1A	0xF0400102  ORR	R1, R0, #2
0x2C1E	0x4844    LDR	R0, [PC, #272]
0x2C20	0x6001    STR	R1, [R0, #0]
0x2C22	0xE011    B	L___Lib_System_105_107_InitialSetUpRCCRCC233
L___Lib_System_105_107_InitialSetUpRCCRCC232:
;__Lib_System_105_107.c, 398 :: 		
; Fosc_kHz start address is: 4 (R1)
0x2C24	0xF64550C0  MOVW	R0, #24000
0x2C28	0x4281    CMP	R1, R0
0x2C2A	0xD906    BLS	L___Lib_System_105_107_InitialSetUpRCCRCC234
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_105_107.c, 399 :: 		
0x2C2C	0x4840    LDR	R0, [PC, #256]
0x2C2E	0x6800    LDR	R0, [R0, #0]
0x2C30	0xF0400101  ORR	R1, R0, #1
0x2C34	0x483E    LDR	R0, [PC, #248]
0x2C36	0x6001    STR	R1, [R0, #0]
0x2C38	0xE006    B	L___Lib_System_105_107_InitialSetUpRCCRCC235
L___Lib_System_105_107_InitialSetUpRCCRCC234:
;__Lib_System_105_107.c, 401 :: 		
0x2C3A	0x483D    LDR	R0, [PC, #244]
0x2C3C	0x6801    LDR	R1, [R0, #0]
0x2C3E	0xF06F0007  MVN	R0, #7
0x2C42	0x4001    ANDS	R1, R0
0x2C44	0x483A    LDR	R0, [PC, #232]
0x2C46	0x6001    STR	R1, [R0, #0]
L___Lib_System_105_107_InitialSetUpRCCRCC235:
L___Lib_System_105_107_InitialSetUpRCCRCC233:
;__Lib_System_105_107.c, 403 :: 		
0x2C48	0xF7FFFE20  BL	__Lib_System_105_107_SystemClockSetDefault+0
;__Lib_System_105_107.c, 405 :: 		
0x2C4C	0x4839    LDR	R0, [PC, #228]
0x2C4E	0x6003    STR	R3, [R0, #0]
;__Lib_System_105_107.c, 406 :: 		
0x2C50	0x4839    LDR	R0, [PC, #228]
0x2C52	0x6004    STR	R4, [R0, #0]
; ulRCC_CFGR2 end address is: 16 (R4)
;__Lib_System_105_107.c, 407 :: 		
0x2C54	0x4839    LDR	R0, [PC, #228]
0x2C56	0xEA020100  AND	R1, R2, R0, LSL #0
0x2C5A	0x4839    LDR	R0, [PC, #228]
0x2C5C	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 409 :: 		
0x2C5E	0xF0020001  AND	R0, R2, #1
0x2C62	0xB140    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC253
; ulRCC_CFGR end address is: 12 (R3)
; ulRCC_CR end address is: 8 (R2)
0x2C64	0x4619    MOV	R1, R3
;__Lib_System_105_107.c, 410 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC237:
; ulRCC_CFGR start address is: 4 (R1)
; ulRCC_CR start address is: 8 (R2)
0x2C66	0x4836    LDR	R0, [PC, #216]
0x2C68	0x6800    LDR	R0, [R0, #0]
0x2C6A	0xF0000002  AND	R0, R0, #2
0x2C6E	0x2800    CMP	R0, #0
0x2C70	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC238
;__Lib_System_105_107.c, 411 :: 		
0x2C72	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC237
L___Lib_System_105_107_InitialSetUpRCCRCC238:
;__Lib_System_105_107.c, 412 :: 		
; ulRCC_CFGR end address is: 4 (R1)
0x2C74	0xE000    B	L___Lib_System_105_107_InitialSetUpRCCRCC236
; ulRCC_CR end address is: 8 (R2)
L___Lib_System_105_107_InitialSetUpRCCRCC253:
;__Lib_System_105_107.c, 409 :: 		
0x2C76	0x4619    MOV	R1, R3
;__Lib_System_105_107.c, 412 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC236:
;__Lib_System_105_107.c, 414 :: 		
; ulRCC_CFGR start address is: 4 (R1)
; ulRCC_CR start address is: 8 (R2)
0x2C78	0xF4023080  AND	R0, R2, #65536
0x2C7C	0xB140    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC254
; ulRCC_CR end address is: 8 (R2)
; ulRCC_CFGR end address is: 4 (R1)
0x2C7E	0x460B    MOV	R3, R1
;__Lib_System_105_107.c, 415 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC240:
; ulRCC_CR start address is: 8 (R2)
; ulRCC_CFGR start address is: 12 (R3)
0x2C80	0x482F    LDR	R0, [PC, #188]
0x2C82	0x6800    LDR	R0, [R0, #0]
0x2C84	0xF4003000  AND	R0, R0, #131072
0x2C88	0x2800    CMP	R0, #0
0x2C8A	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC241
;__Lib_System_105_107.c, 416 :: 		
0x2C8C	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC240
L___Lib_System_105_107_InitialSetUpRCCRCC241:
;__Lib_System_105_107.c, 417 :: 		
; ulRCC_CR end address is: 8 (R2)
0x2C8E	0xE000    B	L___Lib_System_105_107_InitialSetUpRCCRCC239
; ulRCC_CFGR end address is: 12 (R3)
L___Lib_System_105_107_InitialSetUpRCCRCC254:
;__Lib_System_105_107.c, 414 :: 		
0x2C90	0x460B    MOV	R3, R1
;__Lib_System_105_107.c, 417 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC239:
;__Lib_System_105_107.c, 419 :: 		
; ulRCC_CR start address is: 8 (R2)
; ulRCC_CFGR start address is: 12 (R3)
0x2C92	0xF0025080  AND	R0, R2, #268435456
0x2C96	0xB168    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC255
;__Lib_System_105_107.c, 420 :: 		
0x2C98	0x4829    LDR	R0, [PC, #164]
0x2C9A	0x6800    LDR	R0, [R0, #0]
0x2C9C	0xF0405180  ORR	R1, R0, #268435456
0x2CA0	0x4827    LDR	R0, [PC, #156]
0x2CA2	0x6001    STR	R1, [R0, #0]
; ulRCC_CFGR end address is: 12 (R3)
; ulRCC_CR end address is: 8 (R2)
;__Lib_System_105_107.c, 421 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC243:
; ulRCC_CFGR start address is: 12 (R3)
; ulRCC_CR start address is: 8 (R2)
0x2CA4	0x4826    LDR	R0, [PC, #152]
0x2CA6	0x6800    LDR	R0, [R0, #0]
0x2CA8	0xF0005000  AND	R0, R0, #536870912
0x2CAC	0x2800    CMP	R0, #0
0x2CAE	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC244
;__Lib_System_105_107.c, 422 :: 		
0x2CB0	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC243
L___Lib_System_105_107_InitialSetUpRCCRCC244:
;__Lib_System_105_107.c, 423 :: 		
; ulRCC_CR end address is: 8 (R2)
0x2CB2	0xE7FF    B	L___Lib_System_105_107_InitialSetUpRCCRCC242
; ulRCC_CFGR end address is: 12 (R3)
L___Lib_System_105_107_InitialSetUpRCCRCC255:
;__Lib_System_105_107.c, 419 :: 		
;__Lib_System_105_107.c, 423 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC242:
;__Lib_System_105_107.c, 425 :: 		
; ulRCC_CFGR start address is: 12 (R3)
; ulRCC_CR start address is: 8 (R2)
0x2CB4	0xF0026080  AND	R0, R2, #67108864
0x2CB8	0xB178    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC256
;__Lib_System_105_107.c, 426 :: 		
0x2CBA	0x4821    LDR	R0, [PC, #132]
0x2CBC	0x6800    LDR	R0, [R0, #0]
0x2CBE	0xF0406180  ORR	R1, R0, #67108864
0x2CC2	0x481F    LDR	R0, [PC, #124]
0x2CC4	0x6001    STR	R1, [R0, #0]
; ulRCC_CFGR end address is: 12 (R3)
; ulRCC_CR end address is: 8 (R2)
0x2CC6	0x4611    MOV	R1, R2
0x2CC8	0x461A    MOV	R2, R3
;__Lib_System_105_107.c, 427 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC246:
; ulRCC_CR start address is: 4 (R1)
; ulRCC_CFGR start address is: 8 (R2)
0x2CCA	0x481D    LDR	R0, [PC, #116]
0x2CCC	0x6800    LDR	R0, [R0, #0]
0x2CCE	0xF0006000  AND	R0, R0, #134217728
0x2CD2	0x2800    CMP	R0, #0
0x2CD4	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC247
;__Lib_System_105_107.c, 428 :: 		
0x2CD6	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC246
L___Lib_System_105_107_InitialSetUpRCCRCC247:
;__Lib_System_105_107.c, 429 :: 		
; ulRCC_CFGR end address is: 8 (R2)
0x2CD8	0xE001    B	L___Lib_System_105_107_InitialSetUpRCCRCC245
; ulRCC_CR end address is: 4 (R1)
L___Lib_System_105_107_InitialSetUpRCCRCC256:
;__Lib_System_105_107.c, 425 :: 		
0x2CDA	0x4611    MOV	R1, R2
0x2CDC	0x461A    MOV	R2, R3
;__Lib_System_105_107.c, 429 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC245:
;__Lib_System_105_107.c, 431 :: 		
; ulRCC_CR start address is: 4 (R1)
; ulRCC_CFGR start address is: 8 (R2)
0x2CDE	0xF0017080  AND	R0, R1, #16777216
; ulRCC_CR end address is: 4 (R1)
0x2CE2	0xB170    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC257
;__Lib_System_105_107.c, 432 :: 		
0x2CE4	0x4816    LDR	R0, [PC, #88]
0x2CE6	0x6800    LDR	R0, [R0, #0]
0x2CE8	0xF0407180  ORR	R1, R0, #16777216
0x2CEC	0x4814    LDR	R0, [PC, #80]
0x2CEE	0x6001    STR	R1, [R0, #0]
; ulRCC_CFGR end address is: 8 (R2)
0x2CF0	0x4611    MOV	R1, R2
;__Lib_System_105_107.c, 433 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC249:
; ulRCC_CFGR start address is: 4 (R1)
0x2CF2	0x4813    LDR	R0, [PC, #76]
0x2CF4	0x6800    LDR	R0, [R0, #0]
0x2CF6	0xF0007000  AND	R0, R0, #33554432
0x2CFA	0xB900    CBNZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC250
;__Lib_System_105_107.c, 434 :: 		
0x2CFC	0xE7F9    B	L___Lib_System_105_107_InitialSetUpRCCRCC249
L___Lib_System_105_107_InitialSetUpRCCRCC250:
;__Lib_System_105_107.c, 435 :: 		
0x2CFE	0x460A    MOV	R2, R1
0x2D00	0xE7FF    B	L___Lib_System_105_107_InitialSetUpRCCRCC248
; ulRCC_CFGR end address is: 4 (R1)
L___Lib_System_105_107_InitialSetUpRCCRCC257:
;__Lib_System_105_107.c, 431 :: 		
;__Lib_System_105_107.c, 435 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC248:
;__Lib_System_105_107.c, 439 :: 		
; ulRCC_CFGR start address is: 8 (R2)
; ulRCC_CFGR end address is: 8 (R2)
L___Lib_System_105_107_InitialSetUpRCCRCC251:
; ulRCC_CFGR start address is: 8 (R2)
0x2D02	0x480C    LDR	R0, [PC, #48]
0x2D04	0x6800    LDR	R0, [R0, #0]
0x2D06	0xF000010C  AND	R1, R0, #12
0x2D0A	0x0090    LSLS	R0, R2, #2
0x2D0C	0xF000000C  AND	R0, R0, #12
0x2D10	0x4281    CMP	R1, R0
0x2D12	0xD000    BEQ	L___Lib_System_105_107_InitialSetUpRCCRCC252
;__Lib_System_105_107.c, 440 :: 		
; ulRCC_CFGR end address is: 8 (R2)
0x2D14	0xE7F5    B	L___Lib_System_105_107_InitialSetUpRCCRCC251
L___Lib_System_105_107_InitialSetUpRCCRCC252:
;__Lib_System_105_107.c, 441 :: 		
L_end_InitialSetUpRCCRCC2:
0x2D16	0xF8DDE000  LDR	LR, [SP, #0]
0x2D1A	0xB001    ADD	SP, SP, #4
0x2D1C	0x4770    BX	LR
0x2D1E	0xBF00    NOP
0x2D20	0x00810501  	#83951745
0x2D24	0x8402001D  	#1934338
0x2D28	0x06440001  	#67140
0x2D2C	0x19400001  	#72000
0x2D30	0x20004002  	FLASH_ACR+0
0x2D34	0x10044002  	RCC_CFGR+0
0x2D38	0x102C4002  	RCC_CFGR2+0
0x2D3C	0xFFFF000F  	#1048575
0x2D40	0x10004002  	RCC_CR+0
; end of __Lib_System_105_107_InitialSetUpRCCRCC2
__Lib_System_105_107_SystemClockSetDefault:
;__Lib_System_105_107.c, 356 :: 		
0x288C	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 359 :: 		
0x288E	0x4815    LDR	R0, [PC, #84]
0x2890	0x6800    LDR	R0, [R0, #0]
0x2892	0xF0400101  ORR	R1, R0, #1
0x2896	0x4813    LDR	R0, [PC, #76]
0x2898	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 362 :: 		
0x289A	0x4913    LDR	R1, [PC, #76]
0x289C	0x4813    LDR	R0, [PC, #76]
0x289E	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 365 :: 		
0x28A0	0x4810    LDR	R0, [PC, #64]
0x28A2	0x6801    LDR	R1, [R0, #0]
0x28A4	0x4812    LDR	R0, [PC, #72]
0x28A6	0x4001    ANDS	R1, R0
0x28A8	0x480E    LDR	R0, [PC, #56]
0x28AA	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 368 :: 		
0x28AC	0x480D    LDR	R0, [PC, #52]
0x28AE	0x6801    LDR	R1, [R0, #0]
0x28B0	0xF46F2080  MVN	R0, #262144
0x28B4	0x4001    ANDS	R1, R0
0x28B6	0x480B    LDR	R0, [PC, #44]
0x28B8	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 371 :: 		
0x28BA	0x480C    LDR	R0, [PC, #48]
0x28BC	0x6801    LDR	R1, [R0, #0]
0x28BE	0xF46F00FE  MVN	R0, #8323072
0x28C2	0x4001    ANDS	R1, R0
0x28C4	0x4809    LDR	R0, [PC, #36]
0x28C6	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 374 :: 		
0x28C8	0x4806    LDR	R0, [PC, #24]
0x28CA	0x6801    LDR	R1, [R0, #0]
0x28CC	0xF06F50A0  MVN	R0, #335544320
0x28D0	0x4001    ANDS	R1, R0
0x28D2	0x4804    LDR	R0, [PC, #16]
0x28D4	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 377 :: 		
0x28D6	0xF04F0100  MOV	R1, #0
0x28DA	0x4806    LDR	R0, [PC, #24]
0x28DC	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 381 :: 		
L_end_SystemClockSetDefault:
0x28DE	0xB001    ADD	SP, SP, #4
0x28E0	0x4770    BX	LR
0x28E2	0xBF00    NOP
0x28E4	0x10004002  	RCC_CR+0
0x28E8	0x0000F0FF  	#-251723776
0x28EC	0x10044002  	RCC_CFGR+0
0x28F0	0xFFFFFEF6  	#-17367041
0x28F4	0x102C4002  	RCC_CFGR2+0
; end of __Lib_System_105_107_SystemClockSetDefault
__Lib_System_105_107_InitialSetUpFosc:
;__Lib_System_105_107.c, 443 :: 		
0x2BC4	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 444 :: 		
0x2BC6	0x4902    LDR	R1, [PC, #8]
0x2BC8	0x4802    LDR	R0, [PC, #8]
0x2BCA	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 445 :: 		
L_end_InitialSetUpFosc:
0x2BCC	0xB001    ADD	SP, SP, #4
0x2BCE	0x4770    BX	LR
0x2BD0	0x19400001  	#72000
0x2BD4	0x01802000  	___System_CLOCK_IN_KHZ+0
; end of __Lib_System_105_107_InitialSetUpFosc
___GenExcept:
;__Lib_System_105_107.c, 307 :: 		
0x2BD8	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 308 :: 		
L___GenExcept28:
0x2BDA	0xE7FE    B	L___GenExcept28
;__Lib_System_105_107.c, 309 :: 		
L_end___GenExcept:
0x2BDC	0xB001    ADD	SP, SP, #4
0x2BDE	0x4770    BX	LR
; end of ___GenExcept
0x309C	0xB500    PUSH	(R14)
0x309E	0xF8DFB024  LDR	R11, [PC, #36]
0x30A2	0xF8DFA024  LDR	R10, [PC, #36]
0x30A6	0xF8DFC024  LDR	R12, [PC, #36]
0x30AA	0xF7FFFC25  BL	10488
0x30AE	0xF8DFB020  LDR	R11, [PC, #32]
0x30B2	0xF8DFA020  LDR	R10, [PC, #32]
0x30B6	0xF8DFC020  LDR	R12, [PC, #32]
0x30BA	0xF7FFFC1D  BL	10488
0x30BE	0xBD00    POP	(R15)
0x30C0	0x4770    BX	LR
0x30C2	0xBF00    NOP
0x30C4	0x00002000  	#536870912
0x30C8	0x011F2000  	#536871199
0x30CC	0x2D440000  	#11588
0x30D0	0x01202000  	#536871200
0x30D4	0x012C2000  	#536871212
0x30D8	0x30840000  	#12420
0x3138	0xB500    PUSH	(R14)
0x313A	0xF8DFB010  LDR	R11, [PC, #16]
0x313E	0xF8DFA010  LDR	R10, [PC, #16]
0x3142	0xF7FFFBE3  BL	10508
0x3146	0xBD00    POP	(R15)
0x3148	0x4770    BX	LR
0x314A	0xBF00    NOP
0x314C	0x00002000  	#536870912
0x3150	0x01AC2000  	#536871340
;Click_Color8_STM.c,19 :: __COLOR8_I2C_CFG [4]
0x2294	0x000186A0 ;__COLOR8_I2C_CFG+0
; end of __COLOR8_I2C_CFG
;__Lib_System_105_107.c,448 :: __Lib_System_105_107_ADCPrescTable [4]
0x29F4	0x08060402 ;__Lib_System_105_107_ADCPrescTable+0
; end of __Lib_System_105_107_ADCPrescTable
;Click_Color8_STM.c,0 :: ?ICS?lstr1_Click_Color8_STM [22]
0x2D44	0x2D2D2D20 ;?ICS?lstr1_Click_Color8_STM+0
0x2D48	0x73795320 ;?ICS?lstr1_Click_Color8_STM+4
0x2D4C	0x206D6574 ;?ICS?lstr1_Click_Color8_STM+8
0x2D50	0x74696E49 ;?ICS?lstr1_Click_Color8_STM+12
0x2D54	0x2D2D2D20 ;?ICS?lstr1_Click_Color8_STM+16
0x2D58	0x0020 ;?ICS?lstr1_Click_Color8_STM+20
; end of ?ICS?lstr1_Click_Color8_STM
;,0 :: _initBlock_3 [40]
; Containing: ?ICS?lstr2_Click_Color8_STM [27]
;             ?ICS?lstr3_Click_Color8_STM [13]
0x2D5A	0x2D2D2D20 ;_initBlock_3+0 : ?ICS?lstr2_Click_Color8_STM at 0x2D5A
0x2D5E	0x61745320 ;_initBlock_3+4
0x2D62	0x6D207472 ;_initBlock_3+8
0x2D66	0x75736165 ;_initBlock_3+12
0x2D6A	0x656D6572 ;_initBlock_3+16
0x2D6E	0x2D20746E ;_initBlock_3+20
0x2D72	0x20002D2D ;_initBlock_3+24 : ?ICS?lstr3_Click_Color8_STM at 0x2D75
0x2D76	0x20444552 ;_initBlock_3+28
0x2D7A	0x61746164 ;_initBlock_3+32
0x2D7E	0x00203A20 ;_initBlock_3+36
; end of _initBlock_3
;,0 :: _initBlock_4 [80]
; Containing: ?ICS?lstr4_Click_Color8_STM [15]
;             ?ICS?lstr5_Click_Color8_STM [14]
;             ?ICS?lstr6_Click_Color8_STM [12]
;             ?ICS?lstr7_Click_Color8_STM [20]
;             ?ICS?lstr8_Click_Color8_STM [19]
0x2D82	0x45524720 ;_initBlock_4+0 : ?ICS?lstr4_Click_Color8_STM at 0x2D82
0x2D86	0x64204E45 ;_initBlock_4+4
0x2D8A	0x20617461 ;_initBlock_4+8
0x2D8E	0x2000203A ;_initBlock_4+12 : ?ICS?lstr5_Click_Color8_STM at 0x2D91
0x2D92	0x45554C42 ;_initBlock_4+16
0x2D96	0x74616420 ;_initBlock_4+20
0x2D9A	0x203A2061 ;_initBlock_4+24
0x2D9E	0x52492000 ;_initBlock_4+28 : ?ICS?lstr6_Click_Color8_STM at 0x2D9F
0x2DA2	0x74616420 ;_initBlock_4+32
0x2DA6	0x203A2061 ;_initBlock_4+36
0x2DAA	0x53482000 ;_initBlock_4+40 : ?ICS?lstr7_Click_Color8_STM at 0x2DAB
0x2DAE	0x6F63204C ;_initBlock_4+44
0x2DB2	0x20726F6C ;_initBlock_4+48
0x2DB6	0x756C6176 ;_initBlock_4+52
0x2DBA	0x203A2065 ;_initBlock_4+56
0x2DBE	0x2D2D2D00 ;_initBlock_4+60 : ?ICS?lstr8_Click_Color8_STM at 0x2DBF
0x2DC2	0x6C6F4320 ;_initBlock_4+64
0x2DC6	0x203A726F ;_initBlock_4+68
0x2DCA	0x4E41524F ;_initBlock_4+72
0x2DCE	0x00204547 ;_initBlock_4+76
; end of _initBlock_4
;Click_Color8_STM.c,0 :: ?ICS?lstr9_Click_Color8_STM [16]
0x2DD2	0x202D2D2D ;?ICS?lstr9_Click_Color8_STM+0
0x2DD6	0x6F6C6F43 ;?ICS?lstr9_Click_Color8_STM+4
0x2DDA	0x52203A72 ;?ICS?lstr9_Click_Color8_STM+8
0x2DDE	0x00204445 ;?ICS?lstr9_Click_Color8_STM+12
; end of ?ICS?lstr9_Click_Color8_STM
;,0 :: _initBlock_6 [36]
; Containing: ?ICS?lstr10_Click_Color8_STM [17]
;             ?ICS?lstr11_Click_Color8_STM [19]
0x2DE2	0x202D2D2D ;_initBlock_6+0 : ?ICS?lstr10_Click_Color8_STM at 0x2DE2
0x2DE6	0x6F6C6F43 ;_initBlock_6+4
0x2DEA	0x50203A72 ;_initBlock_6+8
0x2DEE	0x204B4E49 ;_initBlock_6+12
0x2DF2	0x2D2D2D00 ;_initBlock_6+16 : ?ICS?lstr11_Click_Color8_STM at 0x2DF3
0x2DF6	0x6C6F4320 ;_initBlock_6+20
0x2DFA	0x203A726F ;_initBlock_6+24
0x2DFE	0x50525550 ;_initBlock_6+28
0x2E02	0x0020454C ;_initBlock_6+32
; end of _initBlock_6
;,0 :: _initBlock_7 [34]
; Containing: ?ICS?lstr12_Click_Color8_STM [17]
;             ?ICS?lstr13_Click_Color8_STM [17]
0x2E06	0x202D2D2D ;_initBlock_7+0 : ?ICS?lstr12_Click_Color8_STM at 0x2E06
0x2E0A	0x6F6C6F43 ;_initBlock_7+4
0x2E0E	0x42203A72 ;_initBlock_7+8
0x2E12	0x2045554C ;_initBlock_7+12
0x2E16	0x2D2D2D00 ;_initBlock_7+16 : ?ICS?lstr13_Click_Color8_STM at 0x2E17
0x2E1A	0x6C6F4320 ;_initBlock_7+20
0x2E1E	0x203A726F ;_initBlock_7+24
0x2E22	0x4E415943 ;_initBlock_7+28
0x2E26	0x0020 ;_initBlock_7+32
; end of _initBlock_7
;Click_Color8_STM.c,0 :: ?ICS?lstr14_Click_Color8_STM [18]
0x2E28	0x202D2D2D ;?ICS?lstr14_Click_Color8_STM+0
0x2E2C	0x6F6C6F43 ;?ICS?lstr14_Click_Color8_STM+4
0x2E30	0x47203A72 ;?ICS?lstr14_Click_Color8_STM+8
0x2E34	0x4E454552 ;?ICS?lstr14_Click_Color8_STM+12
0x2E38	0x0020 ;?ICS?lstr14_Click_Color8_STM+16
; end of ?ICS?lstr14_Click_Color8_STM
;,0 :: _initBlock_9 [22]
; Containing: ?ICS?lstr15_Click_Color8_STM [19]
;             ?ICS?lstr16_Click_Color8_STM [3]
0x2E3A	0x202D2D2D ;_initBlock_9+0 : ?ICS?lstr15_Click_Color8_STM at 0x2E3A
0x2E3E	0x6F6C6F43 ;_initBlock_9+4
0x2E42	0x59203A72 ;_initBlock_9+8
0x2E46	0x4F4C4C45 ;_initBlock_9+12
0x2E4A	0x20002057 ;_initBlock_9+16 : ?ICS?lstr16_Click_Color8_STM at 0x2E4D
0x2E4E	0x0020 ;_initBlock_9+20
; end of _initBlock_9
;,0 :: _initBlock_10 [2]
; Containing: ?ICS__color8_driver__PINK_COLOR_FLAG [1]
;             ?ICS__color8_driver__PURPLE_COLOR_FLAG [1]
0x2E50	0x0403 ;_initBlock_10+0 : ?ICS__color8_driver__PINK_COLOR_FLAG at 0x2E50 : ?ICS__color8_driver__PURPLE_COLOR_FLAG at 0x2E51
; end of _initBlock_10
;,0 :: _initBlock_11 [2]
; Containing: ?ICS__color8_driver__BLUE_COLOR_FLAG [1]
;             ?ICS__color8_driver__CYAN_COLOR_FLAG [1]
0x2E52	0x0605 ;_initBlock_11+0 : ?ICS__color8_driver__BLUE_COLOR_FLAG at 0x2E52 : ?ICS__color8_driver__CYAN_COLOR_FLAG at 0x2E53
; end of _initBlock_11
;,0 :: _initBlock_12 [2]
; Containing: ?ICS__color8_driver__GREEN_COLOR_FLAG [1]
;             ?ICS__color8_driver__YELLOW_COLOR_FLAG [1]
0x2E54	0x0807 ;_initBlock_12+0 : ?ICS__color8_driver__GREEN_COLOR_FLAG at 0x2E54 : ?ICS__color8_driver__YELLOW_COLOR_FLAG at 0x2E55
; end of _initBlock_12
;,0 :: _initBlock_13 [2]
; Containing: ?ICS__color8_driver__ORANGE_COLOR_FLAG [1]
;             ?ICS__color8_driver__RED_COLOR_FLAG [1]
0x2E56	0x0201 ;_initBlock_13+0 : ?ICS__color8_driver__ORANGE_COLOR_FLAG at 0x2E56 : ?ICS__color8_driver__RED_COLOR_FLAG at 0x2E57
; end of _initBlock_13
;,0 :: _initBlock_14 [11]
; Containing: ?ICS__color8_driver__NON_COLOR_FLAG [1]
;             ?ICS?lstr1___Lib_Conversions [4]
;             ?ICS?lstr2___Lib_Conversions [2]
;             ?ICS?lstr3___Lib_Conversions [4]
0x2E58	0x4E614E00 ;_initBlock_14+0 : ?ICS__color8_driver__NON_COLOR_FLAG at 0x2E58 : ?ICS?lstr1___Lib_Conversions at 0x2E59
0x2E5C	0x49003000 ;_initBlock_14+4 : ?ICS?lstr2___Lib_Conversions at 0x2E5D : ?ICS?lstr3___Lib_Conversions at 0x2E5F
0x2E60	0x00464E ;_initBlock_14+8
; end of _initBlock_14
;__Lib_GPIO_32F10x_Defs.c,680 :: __GPIO_MODULE_I2C1_PB67 [108]
0x2E64	0x00000016 ;__GPIO_MODULE_I2C1_PB67+0
0x2E68	0x00000017 ;__GPIO_MODULE_I2C1_PB67+4
0x2E6C	0xFFFFFFFF ;__GPIO_MODULE_I2C1_PB67+8
0x2E70	0x00000000 ;__GPIO_MODULE_I2C1_PB67+12
0x2E74	0x00000000 ;__GPIO_MODULE_I2C1_PB67+16
0x2E78	0x00000000 ;__GPIO_MODULE_I2C1_PB67+20
0x2E7C	0x00000000 ;__GPIO_MODULE_I2C1_PB67+24
0x2E80	0x00000000 ;__GPIO_MODULE_I2C1_PB67+28
0x2E84	0x00000000 ;__GPIO_MODULE_I2C1_PB67+32
0x2E88	0x00000000 ;__GPIO_MODULE_I2C1_PB67+36
0x2E8C	0x00000000 ;__GPIO_MODULE_I2C1_PB67+40
0x2E90	0x00000000 ;__GPIO_MODULE_I2C1_PB67+44
0x2E94	0x00000000 ;__GPIO_MODULE_I2C1_PB67+48
0x2E98	0x00000828 ;__GPIO_MODULE_I2C1_PB67+52
0x2E9C	0x00000828 ;__GPIO_MODULE_I2C1_PB67+56
0x2EA0	0x00000000 ;__GPIO_MODULE_I2C1_PB67+60
0x2EA4	0x00000000 ;__GPIO_MODULE_I2C1_PB67+64
0x2EA8	0x00000000 ;__GPIO_MODULE_I2C1_PB67+68
0x2EAC	0x00000000 ;__GPIO_MODULE_I2C1_PB67+72
0x2EB0	0x00000000 ;__GPIO_MODULE_I2C1_PB67+76
0x2EB4	0x00000000 ;__GPIO_MODULE_I2C1_PB67+80
0x2EB8	0x00000000 ;__GPIO_MODULE_I2C1_PB67+84
0x2EBC	0x00000000 ;__GPIO_MODULE_I2C1_PB67+88
0x2EC0	0x00000000 ;__GPIO_MODULE_I2C1_PB67+92
0x2EC4	0x00000000 ;__GPIO_MODULE_I2C1_PB67+96
0x2EC8	0x00000000 ;__GPIO_MODULE_I2C1_PB67+100
0x2ECC	0x00000002 ;__GPIO_MODULE_I2C1_PB67+104
; end of __GPIO_MODULE_I2C1_PB67
;__Lib_GPIO_32F10x_Defs.c,696 :: __GPIO_MODULE_USART1_PA9_10 [108]
0x2ED0	0x00000009 ;__GPIO_MODULE_USART1_PA9_10+0
0x2ED4	0x0000000A ;__GPIO_MODULE_USART1_PA9_10+4
0x2ED8	0xFFFFFFFF ;__GPIO_MODULE_USART1_PA9_10+8
0x2EDC	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+12
0x2EE0	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+16
0x2EE4	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+20
0x2EE8	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+24
0x2EEC	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+28
0x2EF0	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+32
0x2EF4	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+36
0x2EF8	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+40
0x2EFC	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+44
0x2F00	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+48
0x2F04	0x00000818 ;__GPIO_MODULE_USART1_PA9_10+52
0x2F08	0x00000018 ;__GPIO_MODULE_USART1_PA9_10+56
0x2F0C	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+60
0x2F10	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+64
0x2F14	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+68
0x2F18	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+72
0x2F1C	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+76
0x2F20	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+80
0x2F24	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+84
0x2F28	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+88
0x2F2C	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+92
0x2F30	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+96
0x2F34	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+100
0x2F38	0x00000004 ;__GPIO_MODULE_USART1_PA9_10+104
; end of __GPIO_MODULE_USART1_PA9_10
;__Lib_GPIO_32F10x_Defs.c,726 :: __GPIO_MODULE_USART3_PD89 [108]
0x2F3C	0x00000038 ;__GPIO_MODULE_USART3_PD89+0
0x2F40	0x00000039 ;__GPIO_MODULE_USART3_PD89+4
0x2F44	0xFFFFFFFF ;__GPIO_MODULE_USART3_PD89+8
0x2F48	0x00000000 ;__GPIO_MODULE_USART3_PD89+12
0x2F4C	0x00000000 ;__GPIO_MODULE_USART3_PD89+16
0x2F50	0x00000000 ;__GPIO_MODULE_USART3_PD89+20
0x2F54	0x00000000 ;__GPIO_MODULE_USART3_PD89+24
0x2F58	0x00000000 ;__GPIO_MODULE_USART3_PD89+28
0x2F5C	0x00000000 ;__GPIO_MODULE_USART3_PD89+32
0x2F60	0x00000000 ;__GPIO_MODULE_USART3_PD89+36
0x2F64	0x00000000 ;__GPIO_MODULE_USART3_PD89+40
0x2F68	0x00000000 ;__GPIO_MODULE_USART3_PD89+44
0x2F6C	0x00000000 ;__GPIO_MODULE_USART3_PD89+48
0x2F70	0x00000818 ;__GPIO_MODULE_USART3_PD89+52
0x2F74	0x00000018 ;__GPIO_MODULE_USART3_PD89+56
0x2F78	0x00000000 ;__GPIO_MODULE_USART3_PD89+60
0x2F7C	0x00000000 ;__GPIO_MODULE_USART3_PD89+64
0x2F80	0x00000000 ;__GPIO_MODULE_USART3_PD89+68
0x2F84	0x00000000 ;__GPIO_MODULE_USART3_PD89+72
0x2F88	0x00000000 ;__GPIO_MODULE_USART3_PD89+76
0x2F8C	0x00000000 ;__GPIO_MODULE_USART3_PD89+80
0x2F90	0x00000000 ;__GPIO_MODULE_USART3_PD89+84
0x2F94	0x00000000 ;__GPIO_MODULE_USART3_PD89+88
0x2F98	0x00000000 ;__GPIO_MODULE_USART3_PD89+92
0x2F9C	0x00000000 ;__GPIO_MODULE_USART3_PD89+96
0x2FA0	0x00000000 ;__GPIO_MODULE_USART3_PD89+100
0x2FA4	0x08140030 ;__GPIO_MODULE_USART3_PD89+104
; end of __GPIO_MODULE_USART3_PD89
;__Lib_GPIO_32F10x_Defs.c,711 :: __GPIO_MODULE_USART2_PD56 [108]
0x2FA8	0x00000035 ;__GPIO_MODULE_USART2_PD56+0
0x2FAC	0x00000036 ;__GPIO_MODULE_USART2_PD56+4
0x2FB0	0xFFFFFFFF ;__GPIO_MODULE_USART2_PD56+8
0x2FB4	0x00000000 ;__GPIO_MODULE_USART2_PD56+12
0x2FB8	0x00000000 ;__GPIO_MODULE_USART2_PD56+16
0x2FBC	0x00000000 ;__GPIO_MODULE_USART2_PD56+20
0x2FC0	0x00000000 ;__GPIO_MODULE_USART2_PD56+24
0x2FC4	0x00000000 ;__GPIO_MODULE_USART2_PD56+28
0x2FC8	0x00000000 ;__GPIO_MODULE_USART2_PD56+32
0x2FCC	0x00000000 ;__GPIO_MODULE_USART2_PD56+36
0x2FD0	0x00000000 ;__GPIO_MODULE_USART2_PD56+40
0x2FD4	0x00000000 ;__GPIO_MODULE_USART2_PD56+44
0x2FD8	0x00000000 ;__GPIO_MODULE_USART2_PD56+48
0x2FDC	0x00000818 ;__GPIO_MODULE_USART2_PD56+52
0x2FE0	0x00000018 ;__GPIO_MODULE_USART2_PD56+56
0x2FE4	0x00000000 ;__GPIO_MODULE_USART2_PD56+60
0x2FE8	0x00000000 ;__GPIO_MODULE_USART2_PD56+64
0x2FEC	0x00000000 ;__GPIO_MODULE_USART2_PD56+68
0x2FF0	0x00000000 ;__GPIO_MODULE_USART2_PD56+72
0x2FF4	0x00000000 ;__GPIO_MODULE_USART2_PD56+76
0x2FF8	0x00000000 ;__GPIO_MODULE_USART2_PD56+80
0x2FFC	0x00000000 ;__GPIO_MODULE_USART2_PD56+84
0x3000	0x00000000 ;__GPIO_MODULE_USART2_PD56+88
0x3004	0x00000000 ;__GPIO_MODULE_USART2_PD56+92
0x3008	0x00000000 ;__GPIO_MODULE_USART2_PD56+96
0x300C	0x00000000 ;__GPIO_MODULE_USART2_PD56+100
0x3010	0x08000008 ;__GPIO_MODULE_USART2_PD56+104
; end of __GPIO_MODULE_USART2_PD56
;easymx_v7_STM32F107VC.c,47 :: __MIKROBUS1_GPIO [96]
0x3014	0x00000289 ;__MIKROBUS1_GPIO+0
0x3018	0x0000027D ;__MIKROBUS1_GPIO+4
0x301C	0x00000271 ;__MIKROBUS1_GPIO+8
0x3020	0x00000295 ;__MIKROBUS1_GPIO+12
0x3024	0x000002B9 ;__MIKROBUS1_GPIO+16
0x3028	0x000002AD ;__MIKROBUS1_GPIO+20
0x302C	0x000002A1 ;__MIKROBUS1_GPIO+24
0x3030	0x00000265 ;__MIKROBUS1_GPIO+28
0x3034	0x00000235 ;__MIKROBUS1_GPIO+32
0x3038	0x00000229 ;__MIKROBUS1_GPIO+36
0x303C	0x00000241 ;__MIKROBUS1_GPIO+40
0x3040	0x00000259 ;__MIKROBUS1_GPIO+44
0x3044	0xFFFFFFFF ;__MIKROBUS1_GPIO+48
0x3048	0xFFFFFFFF ;__MIKROBUS1_GPIO+52
0x304C	0xFFFFFFFF ;__MIKROBUS1_GPIO+56
0x3050	0xFFFFFFFF ;__MIKROBUS1_GPIO+60
0x3054	0xFFFFFFFF ;__MIKROBUS1_GPIO+64
0x3058	0xFFFFFFFF ;__MIKROBUS1_GPIO+68
0x305C	0xFFFFFFFF ;__MIKROBUS1_GPIO+72
0x3060	0xFFFFFFFF ;__MIKROBUS1_GPIO+76
0x3064	0xFFFFFFFF ;__MIKROBUS1_GPIO+80
0x3068	0xFFFFFFFF ;__MIKROBUS1_GPIO+84
0x306C	0xFFFFFFFF ;__MIKROBUS1_GPIO+88
0x3070	0xFFFFFFFF ;__MIKROBUS1_GPIO+92
; end of __MIKROBUS1_GPIO
;__Lib_System_105_107.c,447 :: __Lib_System_105_107_APBAHBPrescTable [16]
0x3074	0x00000000 ;__Lib_System_105_107_APBAHBPrescTable+0
0x3078	0x04030201 ;__Lib_System_105_107_APBAHBPrescTable+4
0x307C	0x04030201 ;__Lib_System_105_107_APBAHBPrescTable+8
0x3080	0x09080706 ;__Lib_System_105_107_APBAHBPrescTable+12
; end of __Lib_System_105_107_APBAHBPrescTable
;__Lib_I2C_12.c,0 :: ?ICS__Lib_I2C_12__I2C1_TIMEOUT [4]
0x3084	0x00000000 ;?ICS__Lib_I2C_12__I2C1_TIMEOUT+0
; end of ?ICS__Lib_I2C_12__I2C1_TIMEOUT
;__Lib_I2C_12.c,0 :: ?ICS__Lib_I2C_12__I2C2_TIMEOUT [4]
0x3088	0x00000000 ;?ICS__Lib_I2C_12__I2C2_TIMEOUT+0
; end of ?ICS__Lib_I2C_12__I2C2_TIMEOUT
;__Lib_I2C_12.c,0 :: ?ICS__Lib_I2C_12__I2Cx_TIMEOUT [4]
0x308C	0x00000000 ;?ICS__Lib_I2C_12__I2Cx_TIMEOUT+0
; end of ?ICS__Lib_I2C_12__I2Cx_TIMEOUT
;easymx_v7_STM32F107VC.c,15 :: __MIKROBUS1_I2C [12]
0x3090	0x00001921 ;__MIKROBUS1_I2C+0
0x3094	0x000014E5 ;__MIKROBUS1_I2C+4
0x3098	0x0000138D ;__MIKROBUS1_I2C+8
; end of __MIKROBUS1_I2C
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0150      [24]    _I2Cx_Is_Idle
0x0168     [152]    __Lib_GPIO_32F10x_GPIO_Configure_Pin
0x0200      [12]    _Get_Fosc_kHz
0x020C      [26]    _I2Cx_Get_Status
0x0228      [12]    easymx_v7_STM32F107VC__setTX_1
0x0234      [12]    easymx_v7_STM32F107VC__setRX_1
0x0240      [12]    easymx_v7_STM32F107VC__setSCL_1
0x024C      [12]    easymx_v7_STM32F107VC__setAN_2
0x0258      [12]    easymx_v7_STM32F107VC__setSDA_1
0x0264      [12]    easymx_v7_STM32F107VC__setINT_1
0x0270      [12]    easymx_v7_STM32F107VC__setCS_1
0x027C      [12]    easymx_v7_STM32F107VC__setRST_1
0x0288      [12]    easymx_v7_STM32F107VC__setAN_1
0x0294      [12]    easymx_v7_STM32F107VC__setSCK_1
0x02A0      [12]    easymx_v7_STM32F107VC__setPWM_1
0x02AC      [12]    easymx_v7_STM32F107VC__setMOSI_1
0x02B8      [12]    easymx_v7_STM32F107VC__setMISO_1
0x02C4      [12]    easymx_v7_STM32F107VC__setSCL_2
0x02D0      [12]    easymx_v7_STM32F107VC__setTX_2
0x02DC      [12]    easymx_v7_STM32F107VC__setRX_2
0x02E8      [12]    easymx_v7_STM32F107VC__setSDA_2
0x02F4    [1116]    _I2Cx_Read
0x0750      [36]    _ChekXForEvent
0x0774     [144]    __Lib_I2C_12_I2Cx_Wait_For_Idle
0x0804      [12]    easymx_v7_STM32F107VC__setSCK_2
0x0810      [12]    easymx_v7_STM32F107VC__setCS_2
0x081C      [12]    easymx_v7_STM32F107VC__setRST_2
0x0828      [12]    easymx_v7_STM32F107VC__setMISO_2
0x0834      [12]    easymx_v7_STM32F107VC__setINT_2
0x0840      [12]    easymx_v7_STM32F107VC__setPWM_2
0x084C      [12]    easymx_v7_STM32F107VC__setMOSI_2
0x0858     [168]    _RCC_GetClocksFrequency
0x0900     [140]    _GPIO_Clk_Enable
0x098C     [272]    _GPIO_Alternate_Function_Enable
0x0A9C      [12]    __Lib_UART_123_45_UARTx_Data_Ready
0x0AA8     [408]    _I2Cx_Write
0x0C40     [204]    _I2Cx_Start
0x0D0C     [580]    __Lib_UART_123_45_UARTx_Init_Advanced
0x0F50     [412]    _I2Cx_Init_Advanced
0x10EC      [12]    __Lib_UART_123_45_UARTx_Tx_Idle
0x10F8     [500]    _GPIO_Config
0x12EC     [104]    __Compare_FP
0x1354      [30]    __Lib_UART_123_45_UARTx_Write
0x1374      [22]    __Lib_UART_123_45_UARTx_Read
0x138C      [36]    _I2C1_Read
0x13B0      [36]    _I2C2_Read
0x13D4      [24]    _UART3_Read
0x13EC      [24]    _UART2_Data_Ready
0x1404      [24]    _I2C2_Start
0x141C      [24]    _UART2_Tx_Idle
0x1434      [24]    _UART1_Tx_Idle
0x144C      [24]    _UART1_Data_Ready
0x1464      [24]    _UART1_Read
0x147C      [24]    _UART2_Read
0x1494      [36]    __color8_driver_hal_i2cRead
0x14B8      [42]    __color8_driver__maxColor
0x14E4      [36]    _I2C1_Write
0x1508      [36]    _I2C2_Write
0x152C     [164]    __Div_FP
0x15D0     [254]    __Add_FP
0x16D0      [42]    __color8_driver__minColor
0x16FC     [258]    __Sub_FP
0x1800      [24]    _UART4_Read
0x1818      [24]    _UART4_Data_Ready
0x1830      [24]    _UART3_Data_Ready
0x1848      [24]    _UART3_Tx_Idle
0x1860      [24]    _UART5_Data_Ready
0x1878      [24]    _UART5_Tx_Idle
0x1890      [24]    _UART4_Tx_Idle
0x18A8      [24]    _UART5_Read
0x18C0      [40]    _UART3_Init_Advanced
0x18E8      [28]    _I2C1_Init_Advanced
0x1904      [28]    _GPIO_Digital_Output
0x1920      [24]    _I2C1_Start
0x1938      [40]    _UART1_Init_Advanced
0x1960      [40]    _UART2_Init_Advanced
0x1988      [28]    _UART2_Write
0x19A4      [28]    _UART5_Write
0x19C0      [28]    _UART4_Write
0x19DC      [28]    _UART3_Write
0x19F8      [28]    _UART1_Write
0x1A14      [24]    _GPIO_Digital_Input
0x1A2C      [40]    __color8_driver_hal_i2cWrite
0x1A54      [44]    __color8_driver_hal_i2cStart
0x1A80     [138]    __Mul_FP
0x1B0C      [72]    _color8_readByte
0x1B54      [80]    _WordToStr
0x1BA4      [44]    __UnsignedIntegralToFloat
0x1BD0     [316]    __color8_driver__RGB_To_HSL
0x1D0C      [20]    __color8_driver_hal_gpioMap
0x1D20      [40]    __color8_driver_hal_i2cMap
0x1D48      [40]    _strcpy
0x1D70     [440]    easymx_v7_STM32F107VC__gpioInit_1
0x1F28      [56]    easymx_v7_STM32F107VC__log_init1
0x1F60      [56]    easymx_v7_STM32F107VC__log_init2
0x1F98      [32]    easymx_v7_STM32F107VC__i2cInit_1
0x1FB8     [440]    easymx_v7_STM32F107VC__gpioInit_2
0x2170      [32]    easymx_v7_STM32F107VC__i2cInit_2
0x2190      [56]    easymx_v7_STM32F107VC__log_initUartB
0x21C8      [32]    easymx_v7_STM32F107VC__log_write
0x21E8      [56]    easymx_v7_STM32F107VC__log_initUartA
0x2220      [66]    _mikrobus_gpioInit
0x2264      [48]    _mikrobus_i2cInit
0x2298      [24]    _Delay_100ms
0x22B0     [456]    _color8_getColor
0x2478     [500]    _FloatToStr
0x266C      [56]    _color8_readData
0x26A4      [48]    _color8_writeByte
0x26D4     [112]    _mikrobus_logWrite
0x2744      [70]    _mikrobus_logInit
0x278C     [106]    _color8_getColorValue
0x27F8     [110]    _IntToStr
0x2868      [36]    _color8_i2cDriverInit
0x288C     [108]    __Lib_System_105_107_SystemClockSetDefault
0x28F8      [20]    ___CC2DW
0x290C      [58]    ___FillZeros
0x2948      [84]    _systemInit
0x299C      [88]    _applicationInit
0x29F8     [460]    _applicationTask
0x2BC4      [20]    __Lib_System_105_107_InitialSetUpFosc
0x2BD8       [8]    ___GenExcept
0x2BE0      [32]    _main
0x2C00     [324]    __Lib_System_105_107_InitialSetUpRCCRCC2
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x20000000      [22]    ?lstr1_Click_Color8_STM
0x20000016      [27]    ?lstr2_Click_Color8_STM
0x20000031      [13]    ?lstr3_Click_Color8_STM
0x2000003E      [15]    ?lstr4_Click_Color8_STM
0x2000004D      [14]    ?lstr5_Click_Color8_STM
0x2000005B      [12]    ?lstr6_Click_Color8_STM
0x20000067      [20]    ?lstr7_Click_Color8_STM
0x2000007B      [19]    ?lstr8_Click_Color8_STM
0x2000008E      [16]    ?lstr9_Click_Color8_STM
0x2000009E      [17]    ?lstr10_Click_Color8_STM
0x200000AF      [19]    ?lstr11_Click_Color8_STM
0x200000C2      [17]    ?lstr12_Click_Color8_STM
0x200000D3      [17]    ?lstr13_Click_Color8_STM
0x200000E4      [18]    ?lstr14_Click_Color8_STM
0x200000F6      [19]    ?lstr15_Click_Color8_STM
0x20000109       [3]    ?lstr16_Click_Color8_STM
0x2000010C       [1]    __color8_driver__PINK_COLOR_FLAG
0x2000010D       [1]    __color8_driver__PURPLE_COLOR_FLAG
0x2000010E       [1]    __color8_driver__BLUE_COLOR_FLAG
0x2000010F       [1]    __color8_driver__CYAN_COLOR_FLAG
0x20000110       [1]    __color8_driver__GREEN_COLOR_FLAG
0x20000111       [1]    __color8_driver__YELLOW_COLOR_FLAG
0x20000112       [1]    __color8_driver__ORANGE_COLOR_FLAG
0x20000113       [1]    __color8_driver__RED_COLOR_FLAG
0x20000114       [1]    __color8_driver__NON_COLOR_FLAG
0x20000115       [4]    ?lstr1___Lib_Conversions
0x20000119       [2]    ?lstr2___Lib_Conversions
0x2000011B       [4]    ?lstr3___Lib_Conversions
0x2000011F       [1]    _isColor
0x20000120       [4]    __Lib_I2C_12__I2C1_TIMEOUT
0x20000124       [4]    __Lib_I2C_12__I2C2_TIMEOUT
0x20000128       [4]    __Lib_I2C_12__I2Cx_TIMEOUT
0x2000012C       [2]    _RED_data
0x2000012E      [50]    _demoText
0x20000160       [2]    _GREEN_data
0x20000162       [2]    _BLUE_data
0x20000164       [2]    _IR_data
0x20000166       [1]    __color8_driver__slaveAddress
0x20000168       [4]    _colorValue
0x2000016C       [4]    _logger
0x20000170       [4]    __color8_driver_fp_i2cRead
0x20000174       [4]    __color8_driver_fp_i2cWrite
0x20000178       [4]    __color8_driver_fp_i2cStart
0x2000017C       [4]    __color8_driver_hal_gpio_intGet
0x20000180       [4]    ___System_CLOCK_IN_KHZ
0x20000184       [4]    _I2Cx_Timeout_Ptr
0x20000188       [4]    _I2C1_Timeout_Ptr
0x2000018C       [4]    _I2C2_Timeout_Ptr
0x20000190       [4]    _I2C_Start_Ptr
0x20000194       [4]    _I2C_Read_Ptr
0x20000198       [4]    _I2C_Write_Ptr
0x2000019C       [4]    _UART_Wr_Ptr
0x200001A0       [4]    _UART_Rd_Ptr
0x200001A4       [4]    _UART_Rdy_Ptr
0x200001A8       [4]    _UART_Tx_Idle_Ptr
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x2294       [4]    __COLOR8_I2C_CFG
0x29F4       [4]    __Lib_System_105_107_ADCPrescTable
0x2D44      [22]    ?ICS?lstr1_Click_Color8_STM
0x2D5A      [27]    ?ICS?lstr2_Click_Color8_STM
0x2D75      [13]    ?ICS?lstr3_Click_Color8_STM
0x2D82      [15]    ?ICS?lstr4_Click_Color8_STM
0x2D91      [14]    ?ICS?lstr5_Click_Color8_STM
0x2D9F      [12]    ?ICS?lstr6_Click_Color8_STM
0x2DAB      [20]    ?ICS?lstr7_Click_Color8_STM
0x2DBF      [19]    ?ICS?lstr8_Click_Color8_STM
0x2DD2      [16]    ?ICS?lstr9_Click_Color8_STM
0x2DE2      [17]    ?ICS?lstr10_Click_Color8_STM
0x2DF3      [19]    ?ICS?lstr11_Click_Color8_STM
0x2E06      [17]    ?ICS?lstr12_Click_Color8_STM
0x2E17      [17]    ?ICS?lstr13_Click_Color8_STM
0x2E28      [18]    ?ICS?lstr14_Click_Color8_STM
0x2E3A      [19]    ?ICS?lstr15_Click_Color8_STM
0x2E4D       [3]    ?ICS?lstr16_Click_Color8_STM
0x2E50       [1]    ?ICS__color8_driver__PINK_COLOR_FLAG
0x2E51       [1]    ?ICS__color8_driver__PURPLE_COLOR_FLAG
0x2E52       [1]    ?ICS__color8_driver__BLUE_COLOR_FLAG
0x2E53       [1]    ?ICS__color8_driver__CYAN_COLOR_FLAG
0x2E54       [1]    ?ICS__color8_driver__GREEN_COLOR_FLAG
0x2E55       [1]    ?ICS__color8_driver__YELLOW_COLOR_FLAG
0x2E56       [1]    ?ICS__color8_driver__ORANGE_COLOR_FLAG
0x2E57       [1]    ?ICS__color8_driver__RED_COLOR_FLAG
0x2E58       [1]    ?ICS__color8_driver__NON_COLOR_FLAG
0x2E59       [4]    ?ICS?lstr1___Lib_Conversions
0x2E5D       [2]    ?ICS?lstr2___Lib_Conversions
0x2E5F       [4]    ?ICS?lstr3___Lib_Conversions
0x2E64     [108]    __GPIO_MODULE_I2C1_PB67
0x2ED0     [108]    __GPIO_MODULE_USART1_PA9_10
0x2F3C     [108]    __GPIO_MODULE_USART3_PD89
0x2FA8     [108]    __GPIO_MODULE_USART2_PD56
0x3014      [96]    __MIKROBUS1_GPIO
0x3074      [16]    __Lib_System_105_107_APBAHBPrescTable
0x3084       [4]    ?ICS__Lib_I2C_12__I2C1_TIMEOUT
0x3088       [4]    ?ICS__Lib_I2C_12__I2C2_TIMEOUT
0x308C       [4]    ?ICS__Lib_I2C_12__I2Cx_TIMEOUT
0x3090      [12]    __MIKROBUS1_I2C
